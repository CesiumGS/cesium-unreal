// Copyright 2020-2021 CesiumGS, Inc. and Contributors

/*=============================================================================
	CesiumGltfPointsVertexFactory.usf: glTF points vertex factory shader code.
=============================================================================*/

#include "/Engine/Private/Common.ush"
#include "/Engine/Private/VertexFactoryCommon.ush"

// StructuredBuffer<float> PointsBuffer;
float4 AttenuationParameters;
float4 ConstantColor;
//bool bHasNormals;
//bool bHasColors;

/*
 * Per-vertex input from bound vertex buffers. Only contains position because
 * the vertex data will be manually fetched via vertex ID.
 */
struct FVertexFactoryInput
{
	float4	Position    : ATTRIBUTE0;
	uint    VertexId    : SV_VertexID;
};

/*
 * Per-vertex input from bound vertex buffers. Only contains position because
 * the vertex data will be manually fetched via vertex ID.
 */
struct FPositionOnlyVertexFactoryInput
{
	float4  Position    : ATTRIBUTE0;
	uint    VertexId    : SV_VertexID;
};

/*
 * Per-vertex input from bound vertex buffers. Only contains position because
 * the vertex data will be manually fetched via vertex ID.
 */
struct FPositionAndNormalOnlyVertexFactoryInput
{
	float4  Position	: ATTRIBUTE0;
	float4	Normal		: ATTRIBUTE2;
	uint    VertexId	: SV_VertexID;
};

struct FVertexFactoryInterpolantsVSToPS
{
	TANGENTTOWORLD_INTERPOLATOR_BLOCK

		half4	Color : COLOR0;
	float2	TexCoords : TEXCOORD0;
};

struct FVertexFactoryIntermediates
{
	half3x3 TangentToLocal;
	half3x3 TangentToWorld;
	half TangentToWorldSign;
	half4 Color;
	float3 Position;
};

struct FPointCloudInstanceData
{
	float3 Position;
	uint Color;
	half3x3 TangentToLocal;
};

float4 ApplyAttenuation(float4 worldPosition) {
	float4 positionClip = mul(View.WorldToClip, float4(In.xyz,1));
	float2 pixelOffset = 10;
	float2 screenOffset = 10;
	positionClip.xy += positionClip.w * screenOffset;

	return mul(View.ClipToWorld, positionClip);
}

float4 VertexFactoryGetWorldPosition(FVertexFactoryInput Input, FVertexFactoryIntermediates Intermediates) {

}
