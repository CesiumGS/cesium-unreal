name: Cesium for Unreal
on: [push]
jobs:
  Windows:
    runs-on: ["self-hosted","windows","x64","unreal"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # so that `git describe` works.
      - name: Set environment variables
        run: |
          $ENV:CESIUM_UNREAL_VERSION=$(git describe)
          $ENV:BUILD_CESIUM_UNREAL_PACKAGE_NAME="CesiumForUnreal-500-windows-${ENV:CESIUM_UNREAL_VERSION}"
          # Make these available to subsequent steps
          echo "CESIUM_UNREAL_VERSION=${ENV:CESIUM_UNREAL_VERSION}" >> $ENV:GITHUB_ENV
          echo "BUILD_CESIUM_UNREAL_PACKAGE_NAME=${ENV:BUILD_CESIUM_UNREAL_PACKAGE_NAME}" >> $ENV:GITHUB_ENV
      - name: Build cesium-native
        run: |
          cd extern
          cmake -B build -S . -A x64
          cmake --build build --config Release --target install -j8
      - name: Build plugin
        run: |
          cd "C:/Program Files/Epic Games/UE_5.0/Engine/Build/BatchFiles"
          ./RunUAT.bat BuildPlugin -Plugin="$ENV:GITHUB_WORKSPACE/CesiumForUnreal.uplugin" -Package="$ENV:GITHUB_WORKSPACE/packages/CesiumForUnreal" -CreateSubFolder -TargetPlatforms=Win64
      - name: Publish plugin package artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_CESIUM_UNREAL_PACKAGE_NAME}}.zip
          path: packages
  Android:
    runs-on: ["self-hosted","windows","x64","unreal"]
    steps:
      - name: Install additional dependencies
        run: |
          choco install -y ninja
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # so that `git describe` works.
      - name: Set environment variables
        run: |
          $ENV:CESIUM_UNREAL_VERSION=$(git describe)
          $ENV:BUILD_CESIUM_UNREAL_PACKAGE_NAME="CesiumForUnreal-500-android-${ENV:CESIUM_UNREAL_VERSION}"
          # Make these available to subsequent steps
          echo "CESIUM_UNREAL_VERSION=${ENV:CESIUM_UNREAL_VERSION}" >> $ENV:GITHUB_ENV
          echo "BUILD_CESIUM_UNREAL_PACKAGE_NAME=${ENV:BUILD_CESIUM_UNREAL_PACKAGE_NAME}" >> $ENV:GITHUB_ENV
      - name: Build cesium-native
        run: |
          cd extern
          cmake -B build-android -S . -G Ninja -DCMAKE_TOOLCHAIN_FILE="unreal-android-toolchain.cmake" -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build build-android --config Release --target install -j8
      - name: Build plugin
        run: |
          cd "C:/Program Files/Epic Games/UE_5.0/Engine/Build/BatchFiles"
          ./RunUAT.bat BuildPlugin -Plugin="$ENV:GITHUB_WORKSPACE/CesiumForUnreal.uplugin" -Package="$ENV:GITHUB_WORKSPACE/packages/CesiumForUnreal" -CreateSubFolder -TargetPlatforms=Android -NoHostPlatform
      - name: Publish plugin package artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_CESIUM_UNREAL_PACKAGE_NAME}}.zip
          path: packages
  Linux:
    runs-on: ["self-hosted","windows","x64","unreal"]
    steps:
      - name: Install additional dependencies
        run: |
          choco install -y ninja
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # so that `git describe` works.
      - name: Set environment variables
        run: |
          $ENV:CESIUM_UNREAL_VERSION=$(git describe)
          $ENV:BUILD_CESIUM_UNREAL_PACKAGE_NAME="CesiumForUnreal-500-linux-${ENV:CESIUM_UNREAL_VERSION}"
          # Make these available to subsequent steps
          echo "CESIUM_UNREAL_VERSION=${ENV:CESIUM_UNREAL_VERSION}" >> $ENV:GITHUB_ENV
          echo "BUILD_CESIUM_UNREAL_PACKAGE_NAME=${ENV:BUILD_CESIUM_UNREAL_PACKAGE_NAME}" >> $ENV:GITHUB_ENV
      - name: Build cesium-native
        run: |
          $ENV:UNREAL_ENGINE_DIR="C:/Program Files/Epic Games/UE_5.0"
          $ENV:LINUX_MULTIARCH_ROOT="C:/UnrealToolchains/v19_clang-11.0.1-centos7/"
          $ENV:UNREAL_ENGINE_COMPILER_DIR="${ENV:LINUX_MULTIARCH_ROOT}x86_64-unknown-linux-gnu"
          $ENV:UNREAL_ENGINE_LIBCXX_DIR="${ENV:UNREAL_ENGINE_DIR}/Engine/Source/ThirdParty/Unix/LibCxx"
          cd extern
          cmake -B build -S . -G Ninja -DCMAKE_TOOLCHAIN_FILE="unreal-linux-from-windows-toolchain.cmake" -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release --target install -j8
      - name: Build plugin
        run: |
          cd "C:/Program Files/Epic Games/UE_5.0/Engine/Build/BatchFiles"
          ./RunUAT.bat BuildPlugin -Plugin="$ENV:GITHUB_WORKSPACE/CesiumForUnreal.uplugin" -Package="$ENV:GITHUB_WORKSPACE/packages/CesiumForUnreal" -CreateSubFolder -TargetPlatforms=Linux -NoHostPlatform
      - name: Publish plugin package artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_CESIUM_UNREAL_PACKAGE_NAME}}.zip
          path: packages
  macOS:
    runs-on: macos-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
    steps:
      - name: Get Unreal Engine
        run: |
          aws s3 cp s3://cesium-unreal-engine/5.0.1/macOS/UE501.zip .
          unzip -q UE501.zip -d $HOME
          rm UE501.zip
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # so that `git describe` works.
      - name: Set environment variables
        run: |
          export CESIUM_UNREAL_VERSION=$(git describe)
          export BUILD_CESIUM_UNREAL_PACKAGE_NAME="CesiumForUnreal-500-macos-${CESIUM_UNREAL_VERSION}"
          # Make these available to subsequent steps
          echo "CESIUM_UNREAL_VERSION=${CESIUM_UNREAL_VERSION}" >> $GITHUB_ENV
          echo "BUILD_CESIUM_UNREAL_PACKAGE_NAME=${BUILD_CESIUM_UNREAL_PACKAGE_NAME}" >> $GITHUB_ENV
      - name: Build cesium-native
        run: |
          mkdir -p extern/build
          cd extern/build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15
          cmake --build . -j4 --target install
          cd ../..
          rm -rf extern
      - name: Build plugin
        run: |
          export UNREAL_ENGINE_DIR=$HOME/UE_5.0
          cd $UNREAL_ENGINE_DIR/Engine/Build/BatchFiles
          ./RunUAT.sh BuildPlugin -Plugin="$GITHUB_WORKSPACE/CesiumForUnreal.uplugin" -Package="$GITHUB_WORKSPACE/packages/CesiumForUnreal" -CreateSubFolder -TargetPlatforms=Mac
      - name: Publish plugin package artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_CESIUM_UNREAL_PACKAGE_NAME}}.zip
          path: packages
  iOS:
    runs-on: macos-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
    steps:
      - name: Get Unreal Engine
        run: |
          aws s3 cp s3://cesium-unreal-engine/5.0.1/macOS/UE501.zip .
          unzip -q UE501.zip -d $HOME
          rm UE501.zip
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # so that `git describe` works.
      - name: Set environment variables
        run: |
          export CESIUM_UNREAL_VERSION=$(git describe)
          export BUILD_CESIUM_UNREAL_PACKAGE_NAME="CesiumForUnreal-500-ios-${CESIUM_UNREAL_VERSION}"
          # Make these available to subsequent steps
          echo "CESIUM_UNREAL_VERSION=${CESIUM_UNREAL_VERSION}" >> $GITHUB_ENV
          echo "BUILD_CESIUM_UNREAL_PACKAGE_NAME=${BUILD_CESIUM_UNREAL_PACKAGE_NAME}" >> $GITHUB_ENV
      - name: Build cesium-native
        run: |
          mkdir -p extern/build-ios
          cd extern
          cmake -B build-ios -S . -GXcode -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-fembed-bitcode" -DCMAKE_C_FLAGS="-fembed-bitcode"
          cmake --build build-ios -j 4 --target install --config Release -- -quiet # XCode output maxes out Travis log - Need to make it quiet
          cd ..
          rm -rf extern
      - name: Build plugin
        run: |
          export UNREAL_ENGINE_DIR=$HOME/UE_5.0
          cd $UNREAL_ENGINE_DIR/Engine/Build/BatchFiles
          ./RunUAT.sh BuildPlugin -Plugin="$GITHUB_WORKSPACE/CesiumForUnreal.uplugin" -Package="$GITHUB_WORKSPACE/packages/CesiumForUnreal" -CreateSubFolder -TargetPlatforms=iOS -NoHostPlatform
      - name: Publish plugin package artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_CESIUM_UNREAL_PACKAGE_NAME}}.zip
          path: packages
  Combine:
    runs-on: ubuntu-latest
    needs: [Windows, Android, Linux, macOS, iOS]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # so that `git describe` works.
      - name: Set environment variables
        run: |
          export CESIUM_UNREAL_VERSION=$(git describe)
          export BUILD_CESIUM_UNREAL_PACKAGE_NAME="CesiumForUnreal-500-${CESIUM_UNREAL_VERSION}"
          # Make these available to subsequent steps
          echo "CESIUM_UNREAL_VERSION=$CESIUM_UNREAL_VERSION" >> $GITHUB_ENV
          echo "BUILD_CESIUM_UNREAL_PACKAGE_NAME=$BUILD_CESIUM_UNREAL_PACKAGE_NAME" >> $GITHUB_ENV
      - name: Download iOS build
        uses: actions/download-artifact@v3
        with:
          name: CesiumForUnreal-500-ios-${{ env.CESIUM_UNREAL_VERSION}}.zip
          path: combine
      - name: Download macOS build
        uses: actions/download-artifact@v3
        with:
          name: CesiumForUnreal-500-macos-${{ env.CESIUM_UNREAL_VERSION}}.zip
          path: combine
      - name: Download Android build
        uses: actions/download-artifact@v3
        with:
          name: CesiumForUnreal-500-android-${{ env.CESIUM_UNREAL_VERSION}}.zip
          path: combine
      - name: Download Linux build
        uses: actions/download-artifact@v3
        with:
          name: CesiumForUnreal-500-linux-${{ env.CESIUM_UNREAL_VERSION}}.zip
          path: combine
      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: CesiumForUnreal-500-windows-${{ env.CESIUM_UNREAL_VERSION}}.zip
          path: combine
      - name: Publish combined package artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_CESIUM_UNREAL_PACKAGE_NAME}}.zip
          path: combine
