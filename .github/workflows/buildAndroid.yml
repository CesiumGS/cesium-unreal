name: Build Android

on:
  workflow_call:
    inputs:
      runner-label:
        required: true
        type: string
      unreal-engine-version:
        required: true
        type: string
      unreal-engine-zip:
        required: true
        type: string
      unreal-program-name:
        required: true
        type: string
      upload-package-base-name:
        required: true
        type: string
      extra-choco-packages:
        required: false
        type: string
        default: ''
      android-ndk-version:
        required: true
        type: string
jobs:
  build:
    runs-on: ${{ inputs.runner-label }}
    steps:
      - name: Install Ninja and wget
        run: |
          choco install -y ninja wget
      - name: Install Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-${{ inputs.android-ndk-version }}-windows.zip
          7z x android-ndk-${{ inputs.android-ndk-version }}-windows.zip -oc:\
          del android-ndk-${{ inputs.android-ndk-version }}-windows.zip
          echo "ANDROID_NDK_ROOT=c:/android-ndk-${{ inputs.android-ndk-version }}" >> $ENV:GITHUB_ENV
          echo "NDKROOT=c:/android-ndk-${{ inputs.android-ndk-version }}" >> $ENV:GITHUB_ENV
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set environment variables
        run: |
          $env:CESIUM_UNREAL_VERSION=$env:GITHUB_REF_NAME
          $env:BUILD_CESIUM_UNREAL_PACKAGE_NAME="${{ inputs.upload-package-base-name }}-${env:CESIUM_UNREAL_VERSION}"
          # Make these available to subsequent steps
          echo "CESIUM_UNREAL_VERSION=${ENV:CESIUM_UNREAL_VERSION}" >> $ENV:GITHUB_ENV
          echo "BUILD_CESIUM_UNREAL_PACKAGE_NAME=${ENV:BUILD_CESIUM_UNREAL_PACKAGE_NAME}" >> $ENV:GITHUB_ENV
      - name: Install nasm
        uses: ilammy/setup-nasm@v1.5.1
      - name: Build cesium-native
        run: |
          # CMake gets confused by the Windows backslashes
          $env:ANDROID_NDK_ROOT=$env:ANDROID_NDK_ROOT.replace('\', '/')
          cd extern
          cmake -B build-android -S . -G Ninja -DCMAKE_TOOLCHAIN_FILE="unreal-android-toolchain.cmake" -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build build-android --config Release --target install -j8
          cd ..
          rm -r -fo extern
      - name: Install Unreal Engine
        uses: ./.github/actions/install-unreal-windows
        with:
          unreal-engine-zip: ${{ inputs.unreal-engine-zip }}
          unreal-program-name: ${{ inputs.unreal-program-name }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Overwrite plugin engine version
        run: |
          ((Get-Content -path CesiumForUnreal.uplugin -Raw) -replace '"EngineVersion": "5.1.0"','"EngineVersion": "${{ inputs.unreal-engine-version }}"') | Set-Content -Path CesiumForUnreal.uplugin
      - name: Customize BuildConfiguration.xml
        run: |
          mkdir -p "$env:USERPROFILE\AppData\Roaming\Unreal Engine\UnrealBuildTool"
          # - We limit parallel actions because our builds use a lot more memory than UBT thinks they will.
          # - We set the source code control Provider to None so UBT includes all files in the unity build.
          Set-Content -Path "$env:USERPROFILE\AppData\Roaming\Unreal Engine\UnrealBuildTool\BuildConfiguration.xml" -Value '<?xml version="1.0" encoding="utf-8" ?>
            <Configuration xmlns="https://www.unrealengine.com/BuildConfiguration">
              <BuildConfiguration>
                <MaxParallelActions>2</MaxParallelActions>
              </BuildConfiguration>
              <SourceFileWorkingSet><Provider>None</Provider></SourceFileWorkingSet>
            </Configuration>'
      - name: Build plugin
        run: |
          $env:NDKROOT=$env:ANDROID_NDK_ROOT
          cd "D:/Program Files/Epic Games/${{ inputs.unreal-program-name }}/Engine/Build/BatchFiles"
          ./RunUAT.bat BuildPlugin -Plugin="$ENV:GITHUB_WORKSPACE/CesiumForUnreal.uplugin" -Package="$ENV:GITHUB_WORKSPACE/packages/CesiumForUnreal" -CreateSubFolder -TargetPlatforms=Android -NoHostPlatform
      - name: Print log
        if: ${{ failure() }}
        run: |
          cat "C:\Users\runneradmin\AppData\Roaming\Unreal Engine\AutomationTool\Logs\D+Program+Files+Epic+Games+${{ inputs.unreal-program-name }}\UBT-UnrealGame-Android-Development.txt"
      - name: Compress debug sections
        run: |
          dir packages/CesiumForUnreal/Intermediate/Build/Android/UnrealGame/Development/CesiumRuntime/*.o | Foreach-Object { & $ENV:ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-objcopy.exe --compress-debug-sections $_.FullName }
          dir packages/CesiumForUnreal/Intermediate/Build/Android/UnrealGame/Shipping/CesiumRuntime/*.o | Foreach-Object { & $ENV:ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-objcopy.exe --compress-debug-sections $_.FullName }
      - name: Publish plugin package artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_CESIUM_UNREAL_PACKAGE_NAME}}
          path: packages
