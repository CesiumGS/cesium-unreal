<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.12.0" doxygen_gitid="c73f5d30f9e8b1df5ba15a1d064ff2067cbb8267">
  <compound kind="struct">
    <name>CesiumGltf::Accessor</name>
    <filename>structCesiumGltf_1_1Accessor.html</filename>
    <base>CesiumGltf::AccessorSpec</base>
    <member kind="function">
      <type>int8_t</type>
      <name>computeNumberOfComponents</name>
      <anchorfile>structCesiumGltf_1_1Accessor.html</anchorfile>
      <anchor>a8efec45df0295395792b0193e1618992</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>computeByteSizeOfComponent</name>
      <anchorfile>structCesiumGltf_1_1Accessor.html</anchorfile>
      <anchor>ade92908a33bafa688ae1ed63a2542336</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>computeBytesPerVertex</name>
      <anchorfile>structCesiumGltf_1_1Accessor.html</anchorfile>
      <anchor>a1c765fb55418112f5f7f87414ef3eef8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>computeByteStride</name>
      <anchorfile>structCesiumGltf_1_1Accessor.html</anchorfile>
      <anchor>ab2a738ccac0ebb5f9a9a79e780903830</anchor>
      <arglist>(const CesiumGltf::Model &amp;model) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int8_t</type>
      <name>computeNumberOfComponents</name>
      <anchorfile>structCesiumGltf_1_1Accessor.html</anchorfile>
      <anchor>a48d564fa77a26800fc01d8b93c62cffe</anchor>
      <arglist>(const std::string &amp;type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int8_t</type>
      <name>computeByteSizeOfComponent</name>
      <anchorfile>structCesiumGltf_1_1Accessor.html</anchorfile>
      <anchor>adcbfb0394bb4eaad92bc09fa0a40b79d</anchor>
      <arglist>(int32_t componentType) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AccessorReader</name>
    <filename>classCesiumGltfReader_1_1AccessorReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AccessorReader</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorReader.html</anchorfile>
      <anchor>a91de81d87b0c237380734e4ea3ed0458</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorReader.html</anchorfile>
      <anchor>a8d44e29b1dc9a65e92154f300178c2c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorReader.html</anchorfile>
      <anchor>a8d0f46b14a903f97ba82dc7af29138b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Accessor &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorReader.html</anchorfile>
      <anchor>a598c9132332a5d1150f6ce6df11ade57</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Accessor &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorReader.html</anchorfile>
      <anchor>a5d2fc6e741a1fce0f1274a5b276c0e73</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Accessor &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorReader.html</anchorfile>
      <anchor>a352d083ec504390f8f023d0bd3a30489</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorSparse</name>
    <filename>structCesiumGltf_1_1AccessorSparse.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparse.html</anchorfile>
      <anchor>afc205e9ac7932be6c738fabc4a93a0c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>count</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparse.html</anchorfile>
      <anchor>a7afb5af7b67b64fd201ddf6f6a41a714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGltf::AccessorSparseIndices</type>
      <name>indices</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparse.html</anchorfile>
      <anchor>ae2cbf669e034b521fbf429d5b51d95d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGltf::AccessorSparseValues</type>
      <name>values</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparse.html</anchorfile>
      <anchor>af24426725108032772dc61d798d195ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparse.html</anchorfile>
      <anchor>ad0558d7ef1dcb128dc797f5febd96950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorSparseIndices</name>
    <filename>structCesiumGltf_1_1AccessorSparseIndices.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">CesiumGltf::AccessorSparseIndices::ComponentType</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseIndices.html</anchorfile>
      <anchor>a94c54f247902e34517a3f35bc815cae3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bufferView</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseIndices.html</anchorfile>
      <anchor>aa5649c966330f54f072049ec5af2db12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteOffset</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseIndices.html</anchorfile>
      <anchor>a47a80a1012afa14524c701f552387f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>componentType</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseIndices.html</anchorfile>
      <anchor>a006d43fe1993533eb03e451733fe1d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseIndices.html</anchorfile>
      <anchor>a71a95094ffc9b75d7e4f627899424e03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AccessorSparseIndicesReader</name>
    <filename>classCesiumGltfReader_1_1AccessorSparseIndicesReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AccessorSparseIndicesReader</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseIndicesReader.html</anchorfile>
      <anchor>a63eb08317c72d65186a48fdb5331b8ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseIndicesReader.html</anchorfile>
      <anchor>a5630918e5bfa128472aa1b458952d02e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseIndicesReader.html</anchorfile>
      <anchor>abbed29b3caf58d8a623d2509d5747913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AccessorSparseIndices &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseIndicesReader.html</anchorfile>
      <anchor>afa507ba43f3bee98aea718b4e7a76c1c</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AccessorSparseIndices &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseIndicesReader.html</anchorfile>
      <anchor>a10efbf43e098e15b1c4af88801c807f6</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::AccessorSparseIndices &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseIndicesReader.html</anchorfile>
      <anchor>ab38988b18b71330f3796d36e8c3c0df0</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AccessorSparseReader</name>
    <filename>classCesiumGltfReader_1_1AccessorSparseReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AccessorSparseReader</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseReader.html</anchorfile>
      <anchor>a1104716288c5045061134d838f19aa9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseReader.html</anchorfile>
      <anchor>a20dc5b5e12bcc6524a64f4b04a3c7976</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseReader.html</anchorfile>
      <anchor>a2adcb5122b0ee7798595ede86dcf7075</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AccessorSparse &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseReader.html</anchorfile>
      <anchor>a149a44ee21269c3731d980588e8e0f59</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AccessorSparse &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseReader.html</anchorfile>
      <anchor>adf169b7d4d6eb621f4bdf5b0aef96a22</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::AccessorSparse &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseReader.html</anchorfile>
      <anchor>ab825f897e3102ad25e354dc9e5e66b4a</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorSparseValues</name>
    <filename>structCesiumGltf_1_1AccessorSparseValues.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseValues.html</anchorfile>
      <anchor>ae0f3741587f8af111664e6c6f9282ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bufferView</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseValues.html</anchorfile>
      <anchor>a994258db8a8fed7d2497dccbd82a6ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteOffset</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseValues.html</anchorfile>
      <anchor>af7f3abadd609b58d0aadfc5b839ae75a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseValues.html</anchorfile>
      <anchor>a99c6c4faa422804a91a49b08b6318800</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AccessorSparseValuesReader</name>
    <filename>classCesiumGltfReader_1_1AccessorSparseValuesReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AccessorSparseValuesReader</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseValuesReader.html</anchorfile>
      <anchor>a715a6119ed213b74113d655d937cdc8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseValuesReader.html</anchorfile>
      <anchor>aa60f5b92921838fe48a76afb4aa6bc81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseValuesReader.html</anchorfile>
      <anchor>abec50ac401f915db1f4cb114a8c5977b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AccessorSparseValues &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseValuesReader.html</anchorfile>
      <anchor>a4067f4fa19146cceb97bb08ae75f39ca</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AccessorSparseValues &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseValuesReader.html</anchorfile>
      <anchor>afbf839d5ef3311b0a60cb79b80a4d152</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::AccessorSparseValues &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AccessorSparseValuesReader.html</anchorfile>
      <anchor>af3e3e6eeeda2c8b0617b541e9a169ed5</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorSpec</name>
    <filename>structCesiumGltf_1_1AccessorSpec.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <class kind="struct">CesiumGltf::AccessorSpec::ComponentType</class>
    <class kind="struct">CesiumGltf::AccessorSpec::Type</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a4c85e0c58b49d358b00632cf27b96647</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bufferView</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>abc5979869c4fcd8407686ec241f77881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteOffset</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a2092d0feb18140e7eef50d5972ee7fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>componentType</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a6862ad449da73a443e0050c759e81aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a2aea1e085628fec566370e1cf1b7f9c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>count</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a647d50419216288417e5f859b386a41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a5c785b92637342b4d5f9c12d750ceb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>max</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>aa74fa84b08622af0a4d74ce855ec13dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>min</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a63736d04396fcca66393af668107c19c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::AccessorSparse &gt;</type>
      <name>sparse</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a2628e03ba37a0e150df64a6f61dbe09b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a8dfcfb6120f98f7dab87627ba06ae63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AccessorSpec</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec.html</anchorfile>
      <anchor>a5bec5bd8c867db0f36b534dedc8e71f8</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorTypes</name>
    <filename>structCesiumGltf_1_1AccessorTypes.html</filename>
    <class kind="struct">CesiumGltf::AccessorTypes::MAT2</class>
    <class kind="struct">CesiumGltf::AccessorTypes::MAT3</class>
    <class kind="struct">CesiumGltf::AccessorTypes::MAT4</class>
    <class kind="struct">CesiumGltf::AccessorTypes::SCALAR</class>
    <class kind="struct">CesiumGltf::AccessorTypes::VEC2</class>
    <class kind="struct">CesiumGltf::AccessorTypes::VEC3</class>
    <class kind="struct">CesiumGltf::AccessorTypes::VEC4</class>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::AccessorView</name>
    <filename>classCesiumGltf_1_1AccessorView.html</filename>
    <templarg>class T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>a60b3ea1b033d8950bd5117cfbcfa0606</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccessorView</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>a9cb53f44b6269249bc20f1c8adab8f79</anchor>
      <arglist>(AccessorViewStatus status=AccessorViewStatus::InvalidAccessorIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccessorView</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>ab553bdde8dc425cd6c1688926d8142dd</anchor>
      <arglist>(const std::byte *pData, int64_t stride, int64_t offset, int64_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccessorView</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>ac4333f0dae7807bede2af9c5ffa8aa40</anchor>
      <arglist>(const Model &amp;model, const Accessor &amp;accessor) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccessorView</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>aa321a406fffe106e06ed1d3d5c8a64c3</anchor>
      <arglist>(const Model &amp;model, int32_t accessorIndex) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>abe287528fb96e0ca9f7a32fb5a56bc20</anchor>
      <arglist>(int64_t i) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>a9a13ea7fee240698a04284d89e6a013f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AccessorViewStatus</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>acb7611f4bfe0cd580bff5ddb8b5a3ed0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>stride</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>a333ea7c0ea14b50e54adaa2deb30814f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>a0d598da3ffc2ba8cb8ec405950097640</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::byte *</type>
      <name>data</name>
      <anchorfile>classCesiumGltf_1_1AccessorView.html</anchorfile>
      <anchor>aa0414407fe58adaf5d24358f02f9ef94</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::AccessorWriter</name>
    <filename>classCesiumGltf_1_1AccessorWriter.html</filename>
    <templarg>class T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>afd49f7e0263714046dd30a160ba428ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccessorWriter</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>ad2eb44aa97a1a25e0568016669b96002</anchor>
      <arglist>(const AccessorView&lt; T &gt; &amp;accessorView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccessorWriter</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>a6ca032e0808de2979648a0504a1b04e7</anchor>
      <arglist>(std::byte *pData, int64_t stride, int64_t offset, int64_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccessorWriter</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>a8c2baea766b1bf738333a01c28c86c48</anchor>
      <arglist>(Model &amp;model, const Accessor &amp;accessor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccessorWriter</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>aa4b10c0da53ac4b00503e17f2d9efc0c</anchor>
      <arglist>(Model &amp;model, int32_t accessorIndex) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>ae9893af9d21cfdb2d0bf94d14e0bb34d</anchor>
      <arglist>(int64_t i) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>a4cc8a7db46b73090cec5c294d6fba1f2</anchor>
      <arglist>(int64_t i)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>ae418bbb4d8b56ad1e74023332b7c5446</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AccessorViewStatus</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>aee3456f99a5f02b7de979b6d8244f1c9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>stride</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>abb270866fcf41f8c8f2e618c7320dfa4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>a5c7a28368429699481e3ceb45067d550</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::byte *</type>
      <name>data</name>
      <anchorfile>classCesiumGltf_1_1AccessorWriter.html</anchorfile>
      <anchor>a342621004058c9cd2abeec1516306fbc</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Material::AlphaMode</name>
    <filename>structCesiumGltf_1_1Material_1_1AlphaMode.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>OPAQUE</name>
      <anchorfile>structCesiumGltf_1_1Material_1_1AlphaMode.html</anchorfile>
      <anchor>a6cc748d9932a645e9a8f4cf4897d4c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MASK</name>
      <anchorfile>structCesiumGltf_1_1Material_1_1AlphaMode.html</anchorfile>
      <anchor>a98a233ea4cb36c6cc07c6d7a1de56213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>BLEND</name>
      <anchorfile>structCesiumGltf_1_1Material_1_1AlphaMode.html</anchorfile>
      <anchor>a935bd13af77d3a64555a459d406e409c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Animation</name>
    <filename>structCesiumGltf_1_1Animation.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Animation.html</anchorfile>
      <anchor>a1209e2fc79c72eff4f21329d39c40d28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::AnimationChannel &gt;</type>
      <name>channels</name>
      <anchorfile>structCesiumGltf_1_1Animation.html</anchorfile>
      <anchor>ae4b9ee5aa3f4279b3a7e2774ddb4826d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::AnimationSampler &gt;</type>
      <name>samplers</name>
      <anchorfile>structCesiumGltf_1_1Animation.html</anchorfile>
      <anchor>a8313620625f9ee581954e35ff7a7463f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Animation.html</anchorfile>
      <anchor>a53af6f94496c168c57415d9a9e4f5000</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AnimationChannel</name>
    <filename>structCesiumGltf_1_1AnimationChannel.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannel.html</anchorfile>
      <anchor>ae51dd6f5c9d583255195f112db9b8085</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>sampler</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannel.html</anchorfile>
      <anchor>ab26b67beb9ffe9a916af7429ed9bb4b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGltf::AnimationChannelTarget</type>
      <name>target</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannel.html</anchorfile>
      <anchor>a082ba5e0a25dde3296875497e24a0f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannel.html</anchorfile>
      <anchor>a516391af248c82c734342a7d25227e0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AnimationChannelReader</name>
    <filename>classCesiumGltfReader_1_1AnimationChannelReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AnimationChannelReader</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelReader.html</anchorfile>
      <anchor>ad707276d259e758a8f28a98099dec889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelReader.html</anchorfile>
      <anchor>ac26c5103951e1015c1df0035783bcd0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelReader.html</anchorfile>
      <anchor>ab95f0f3b3f8a641e6885059bb970ccfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AnimationChannel &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelReader.html</anchorfile>
      <anchor>ad7daa3343959edc4c80b76a738fb39c6</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AnimationChannel &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelReader.html</anchorfile>
      <anchor>aa4fa5ec13b7c309c8ddfc6d9bf345f90</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::AnimationChannel &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelReader.html</anchorfile>
      <anchor>a8656a7f5f276b9a9a92b4876c245fd3e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AnimationChannelTarget</name>
    <filename>structCesiumGltf_1_1AnimationChannelTarget.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">CesiumGltf::AnimationChannelTarget::Path</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannelTarget.html</anchorfile>
      <anchor>aff706e289e1ea81f19be5fb9649a1ee3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>node</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannelTarget.html</anchorfile>
      <anchor>ae4f514167597273ceadfbbca1dae9750</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannelTarget.html</anchorfile>
      <anchor>ab9cd40c8072a8d1ed814555c7a0a49e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannelTarget.html</anchorfile>
      <anchor>a014311decdb2a3b31842ed9b518dc309</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AnimationChannelTargetReader</name>
    <filename>classCesiumGltfReader_1_1AnimationChannelTargetReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AnimationChannelTargetReader</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelTargetReader.html</anchorfile>
      <anchor>a6aa716c1e11d1ef5629bb614cd9882dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelTargetReader.html</anchorfile>
      <anchor>a48b605fa07c290cdffe9c5966c4b2de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelTargetReader.html</anchorfile>
      <anchor>ae66aa6ab5c1ddee44e9f0c10209e2695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AnimationChannelTarget &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelTargetReader.html</anchorfile>
      <anchor>a214d9581cacc9cd38e89fea1d06762ea</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AnimationChannelTarget &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelTargetReader.html</anchorfile>
      <anchor>a7fa8cd948b505c4fab35a4aafeeb16ca</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::AnimationChannelTarget &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationChannelTargetReader.html</anchorfile>
      <anchor>a87e0d2c6e1701f7daf7dece2271c057c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AnimationReader</name>
    <filename>classCesiumGltfReader_1_1AnimationReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AnimationReader</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationReader.html</anchorfile>
      <anchor>a21ec3bd71ae75555704567b81b028de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationReader.html</anchorfile>
      <anchor>ab74cd5fd23071dd64dfa41e4c86df6e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationReader.html</anchorfile>
      <anchor>a320e7bf50dab60de17a6724a16e131b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Animation &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationReader.html</anchorfile>
      <anchor>a1f2dabac256ad91f68dc3175ba8370c9</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Animation &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationReader.html</anchorfile>
      <anchor>a2d5e21291bfb1f34adcf48832dd88ee8</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Animation &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationReader.html</anchorfile>
      <anchor>a75d8ad4acf23dade475265fc36152592</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AnimationSampler</name>
    <filename>structCesiumGltf_1_1AnimationSampler.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">CesiumGltf::AnimationSampler::Interpolation</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1AnimationSampler.html</anchorfile>
      <anchor>a2b4d8ab08c887b97395d5be14d2f3f7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>input</name>
      <anchorfile>structCesiumGltf_1_1AnimationSampler.html</anchorfile>
      <anchor>aac408352a97b2c6413c564f495c23332</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>interpolation</name>
      <anchorfile>structCesiumGltf_1_1AnimationSampler.html</anchorfile>
      <anchor>aba1135c0841f3d22458188817c22dbc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>output</name>
      <anchorfile>structCesiumGltf_1_1AnimationSampler.html</anchorfile>
      <anchor>a43b0b16e5ffeec8c47d859549b532733</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1AnimationSampler.html</anchorfile>
      <anchor>aa8f47c00b3675457666abe5a0543b0ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AnimationSamplerReader</name>
    <filename>classCesiumGltfReader_1_1AnimationSamplerReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AnimationSamplerReader</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationSamplerReader.html</anchorfile>
      <anchor>a3dc4a3f308d387abca00894ee0f8f5cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationSamplerReader.html</anchorfile>
      <anchor>a2ff6da0fffed339588d2ca183d397b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationSamplerReader.html</anchorfile>
      <anchor>aaeebbb0924f4a0d67fe75acbb442f124</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AnimationSampler &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationSamplerReader.html</anchorfile>
      <anchor>a887516ed0fb45377fec6c8fb2cac19c6</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::AnimationSampler &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationSamplerReader.html</anchorfile>
      <anchor>a9ab0dfe0755689610653a899dfcf50e7</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::AnimationSampler &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AnimationSamplerReader.html</anchorfile>
      <anchor>a2d4639b5f2837794fcdd4beadeeb8b8e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::ApplicationData</name>
    <filename>structCesiumIonClient_1_1ApplicationData.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>needsOauthAuthentication</name>
      <anchorfile>structCesiumIonClient_1_1ApplicationData.html</anchorfile>
      <anchor>a81d7758c1294f29f1a87e5dea63c7075</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>AuthenticationMode</type>
      <name>authenticationMode</name>
      <anchorfile>structCesiumIonClient_1_1ApplicationData.html</anchorfile>
      <anchor>a64852bc2d98b5f54072ab6bac797a77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dataStoreType</name>
      <anchorfile>structCesiumIonClient_1_1ApplicationData.html</anchorfile>
      <anchor>a8777e964e3a5c76f38056455c0dde721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>attribution</name>
      <anchorfile>structCesiumIonClient_1_1ApplicationData.html</anchorfile>
      <anchor>a60166129ba4bb66586dfbd7556c0d774</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::ArrayJsonHandler</name>
    <filename>classCesiumJsonReader_1_1ArrayJsonHandler.html</filename>
    <templarg>typename T</templarg>
    <templarg>typename THandler</templarg>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;</type>
      <name>ValueType</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a23979c0a31b960e2df3fc74664478eae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayJsonHandler</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a8e74166a803429e73184f631e3b62cd8</anchor>
      <arglist>(Ts &amp;&amp;... args) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a288b3e24d7cd8cd602e221cc11fcd797</anchor>
      <arglist>(IJsonHandler *pParent, std::vector&lt; T &gt; *pArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>ab74d4dafb34f4183ef9149bd20d580f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>ab56d2d64d8f6361d79d5a11889ce5fa6</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>abd4ab85e2db1bd9b6cef3d0bac0b9de2</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a5798e1f8808efa3dd6734d6899ca5dde</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a475b57f5291e7d7f183973c2e03f727d</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a99978cc34438d9b83532e3ced5e7e5e3</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>aa9f26771c975f2fcffcb6836b938f230</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a5e5d6c4a578c734f659ea598ca813697</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a1f338a01b02379799b29c10ae623540c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectKey</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a3a4a4ac8f54321efad241ed9c92d7811</anchor>
      <arglist>(const std::string_view &amp;) noexcept override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectEnd</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>af3488edcb5fe1a9c7d05eb155d04a7aa</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a206cf240bcc43d176a0b2227986c95db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>a6c78f9a8093f1f6af0b2405c99c0a159</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler.html</anchorfile>
      <anchor>ae8f38ed2772ffdb1577c97603f1f71f9</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;()) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::ArrayJsonHandler&lt; double, DoubleJsonHandler &gt;</name>
    <filename>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</filename>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="typedef">
      <type>std::vector&lt; double &gt;</type>
      <name>ValueType</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a6b025e431b7fa24c4c01048e86c31593</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>ab3ad675c831400709dc77d37383c6b4f</anchor>
      <arglist>(IJsonHandler *pParent, std::vector&lt; double &gt; *pArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a35886e5178d973783eb67034267599c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a89a1f51b11ce9ef1ad47f4509d152cfc</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>af81b468d55262de9d621dc69616300e2</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a877d758fcfaa99a9d0d803e32b270ef7</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a1131723fc5b9fd60a2f7c47e4b8c5d22</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a1476b44f94aec64f452d296a27f48a4d</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a60cf7fd8c2b4add4452b536236e16bba</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a7d6c050cd13054973dc6c237d95d801b</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a6a01b844b36697710cee9b1023d33680</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a97f3c41ecd130e5600b6767f50e037f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>a9deb96709aa2f2a5b36a4a89cf91cec7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01double_00_01DoubleJsonHandler_01_4.html</anchorfile>
      <anchor>add1b228a823dfc90e8c7f222f7c99a9a</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;()) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::ArrayJsonHandler&lt; std::string, StringJsonHandler &gt;</name>
    <filename>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</filename>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>ValueType</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>ab08bfb3b04cc3b18d84446ef4209d7ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a6e593164fdd9cdb871b88f2e9cad7ecd</anchor>
      <arglist>(IJsonHandler *pParent, std::vector&lt; std::string &gt; *pArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a8ae0d6c1c5e4f6564f47daf13e1a9d26</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a919c087133dc6f9f3fb5e3883e07caaa</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a1bd141a3720ca82a82a2038f931a64e8</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a36a848fdc39f4073aff260668b875a4b</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a99be19250a89fa4ca7f80e460cf6e038</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>ae9ee6c2e5787f40cf0f1cdef66a646fc</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a6998304b1c9bc3df7dab435c1fa33f82</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a3f6a1eb82de7b71bffb6afb23e552a30</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a208ebd85e18e94d8b922050cb1d4b4bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>a133a74ecacfc33fa68e81d2f08808d59</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>aad299eae15b32a77e86e4abe69a62439</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1string_00_01StringJsonHandler_01_4.html</anchorfile>
      <anchor>ac000d8cbe4d726e8c8d4c3ebcb14381a</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;()) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::ArrayJsonHandler&lt; std::vector&lt; T &gt;, ArrayJsonHandler&lt; T, THandler &gt; &gt;</name>
    <filename>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <templarg>typename THandler</templarg>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;</type>
      <name>ValueType</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>abc046ca381d4e856e4f94e0b3b5f52c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayJsonHandler</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>ac0b5d8aa383bc5454f72a6828e6832cc</anchor>
      <arglist>(Ts &amp;&amp;... args) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a7b781f83da7650dc05f830b84f294c2c</anchor>
      <arglist>(IJsonHandler *pParent, std::vector&lt; std::vector&lt; T &gt; &gt; *pArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a04c516af58364c1cafb44b9a48fcd34f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>aa15d7d4ab0c2e206ba31d7e18c1ee6fb</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>af4c65b227ac2df79c04ff634bf0c27c6</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a2ce3649caffda5f405a383036cc13cd7</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>ad079f0fb9e498f73c20fbbddb38d2a09</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a6fd73c0ace2a7fcdd450faca2ca835e6</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a923cc29dfc17474a2c148acb88e47270</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a9be5ae18e3a218542529713f74b9ff42</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>aa021cf8f63546b96dd681695b30fbe54</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a4bb4f59741af94f394dfb9c4333d705f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a633047e6086e3aeb3aad34967c917efb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01std_1_1vector_3_01T_01_4_00_01ArrayJsonHandler_3_01T_00_01THandler_01_4_01_4.html</anchorfile>
      <anchor>a14f78d78667da3d8fc94461afec620a1</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;()) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::ArrayJsonHandler&lt; T, IntegerJsonHandler&lt; T &gt; &gt;</name>
    <filename>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;</type>
      <name>ValueType</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a532ee10e664d59e7eb1aa6dfe1a49854</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>abbc769eda63da924f1b2cdb15d97cffc</anchor>
      <arglist>(IJsonHandler *pParent, std::vector&lt; T &gt; *pArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>aa11b271e159071f1848bd39a35bd09d3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>af1283cdfce0a6ec41cb251ae5f52553c</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>ae1053c59d61c6ff49236d8ef136b5bf0</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a075710c033445604ed9948377af3432f</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>acefeb70dba47489dcb37518c72fcf5f4</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a4546f3722acc181eb5b0ef37bfe7667c</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a8330ae7693fe49ea5b761c8d86878c73</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a09b7e19edba44647f59ff9d9e51c6a05</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a10caa1a4b5cb2edc7ff4da0801978cd1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a1d009503199e80c6be06008641091be8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a272ef9edf61abeecd77cf014311b25ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1ArrayJsonHandler_3_01T_00_01IntegerJsonHandler_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a1fa876f495d13a074c884468ebe99a05</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;()) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::PropertyTableProperty::ArrayOffsetType</name>
    <filename>structCesium3DTiles_1_1PropertyTableProperty_1_1ArrayOffsetType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT8</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty_1_1ArrayOffsetType.html</anchorfile>
      <anchor>a18bc51ec3f41b8e22be4112d32619bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT16</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty_1_1ArrayOffsetType.html</anchorfile>
      <anchor>a85601f34db611f4f8398691184d8a0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT32</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty_1_1ArrayOffsetType.html</anchorfile>
      <anchor>aabdc114ff35989164901823d92c379f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT64</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty_1_1ArrayOffsetType.html</anchorfile>
      <anchor>a8017176ef575d9be90dffea9ac9d4088</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::PropertyTableProperty::ArrayOffsetType</name>
    <filename>structCesiumGltf_1_1PropertyTableProperty_1_1ArrayOffsetType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT8</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty_1_1ArrayOffsetType.html</anchorfile>
      <anchor>a9028b381029bc6a78be167cb1d8a20ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT16</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty_1_1ArrayOffsetType.html</anchorfile>
      <anchor>a01e4e768961dd31392b5034d3d1fd2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT32</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty_1_1ArrayOffsetType.html</anchorfile>
      <anchor>aff6ab4932452b9e472ab9815bd6fb024</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT64</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty_1_1ArrayOffsetType.html</anchorfile>
      <anchor>a6ae6b7ce4a510b77d46854e2a46b6cb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Asset</name>
    <filename>structCesium3DTiles_1_1Asset.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Asset.html</anchorfile>
      <anchor>a5875bbd9952ba07e8c6173d48b140469</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>structCesium3DTiles_1_1Asset.html</anchorfile>
      <anchor>a3f7b52e7d13edc15f1d89739fe7868c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>tilesetVersion</name>
      <anchorfile>structCesium3DTiles_1_1Asset.html</anchorfile>
      <anchor>a7554ae14f92d04e06780e47a33a12fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Asset.html</anchorfile>
      <anchor>a5dd4fb06c3ab0b2bfdf142a655f335ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Asset</name>
    <filename>structCesiumGltf_1_1Asset.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Asset.html</anchorfile>
      <anchor>aa5f800a06522940edf868e80c1cba8df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>copyright</name>
      <anchorfile>structCesiumGltf_1_1Asset.html</anchorfile>
      <anchor>a685b6dc132a7a22a51fb88cadac9d148</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>generator</name>
      <anchorfile>structCesiumGltf_1_1Asset.html</anchorfile>
      <anchor>a7694c35d08850eb3d35fba85b574f8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>structCesiumGltf_1_1Asset.html</anchorfile>
      <anchor>ad6b13d4138862d1585df5dd7c1c8a8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>minVersion</name>
      <anchorfile>structCesiumGltf_1_1Asset.html</anchorfile>
      <anchor>a7ccf50855d2357385933a62edf6a9bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Asset.html</anchorfile>
      <anchor>abec8fe60a4d37521341ed7da7c158844</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::Asset</name>
    <filename>structCesiumIonClient_1_1Asset.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>id</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>a3745b0eaa8e2f23a3c6f96640a76aba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>a75237ee42eb577703c0bc345405477af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>aa69196aaa2b050f3d97b7ba5065b03cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>attribution</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>a149361e95179c279c691827c774ae32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>af902a189242a32fac94661ba09d2080e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>bytes</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>a50dc67910f80522416f3bc4364cbb5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dateAdded</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>a641753a98bbc6e4f22956fe030237c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>a178560b63ae376488c002583d062a165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>percentComplete</name>
      <anchorfile>structCesiumIonClient_1_1Asset.html</anchorfile>
      <anchor>aea4aa1bc7c3dccddf3d5869aa7d70225</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::AssetFetcher</name>
    <filename>structCesium3DTilesContent_1_1AssetFetcher.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetFetcher</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcher.html</anchorfile>
      <anchor>ae25448bfa224d023a7fef97ca1809f7b</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem_, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor_, const std::string &amp;baseUrl_, const glm::dmat4 tileTransform_, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;requestHeaders_, CesiumGeometry::Axis upAxis_)</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; AssetFetcherResult &gt;</type>
      <name>get</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcher.html</anchorfile>
      <anchor>ac53008bc95732175c36a647811c2284a</anchor>
      <arglist>(const std::string &amp;relativeUrl) const</arglist>
    </member>
    <member kind="variable">
      <type>CesiumAsync::AsyncSystem</type>
      <name>asyncSystem</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcher.html</anchorfile>
      <anchor>a93ee3171e0a9a628efade1170ba4c20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt;</type>
      <name>pAssetAccessor</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcher.html</anchorfile>
      <anchor>adf722736ae4d086450980e66cf6cf43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>baseUrl</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcher.html</anchorfile>
      <anchor>ac61ae6d6656b445fb1e6c69ed6c3b8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glm::dmat4</type>
      <name>tileTransform</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcher.html</anchorfile>
      <anchor>a0acbe3e4c018070e3c01b2ed3f4cfef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt;</type>
      <name>requestHeaders</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcher.html</anchorfile>
      <anchor>ab3e29fc5b47e8dc9b3e07148406028a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeometry::Axis</type>
      <name>upAxis</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcher.html</anchorfile>
      <anchor>a95855dd820b71a4777eff5c21fd39c58</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::AssetFetcherResult</name>
    <filename>structCesium3DTilesContent_1_1AssetFetcherResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>bytes</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcherResult.html</anchorfile>
      <anchor>acb924d4641fd5dd89da20c13d7c0bd9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::ErrorList</type>
      <name>errorList</name>
      <anchorfile>structCesium3DTilesContent_1_1AssetFetcherResult.html</anchorfile>
      <anchor>aac476a9e956f6108180fdee5d634b9f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::AssetReader</name>
    <filename>classCesium3DTilesReader_1_1AssetReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetReader</name>
      <anchorfile>classCesium3DTilesReader_1_1AssetReader.html</anchorfile>
      <anchor>a4bb0c9ec5c6f958754f87ba826a4cc7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1AssetReader.html</anchorfile>
      <anchor>a3fbe420f83ae77c95bc4dc4317718bda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1AssetReader.html</anchorfile>
      <anchor>a09d8435dbeea26bb3a839353cde845ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Asset &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1AssetReader.html</anchorfile>
      <anchor>aa3e6cbead6597ed15844f604b7f11d5a</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Asset &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1AssetReader.html</anchorfile>
      <anchor>a604df6da3daee72123057cc2e3cda03c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Asset &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1AssetReader.html</anchorfile>
      <anchor>ad8729db8f375d69015aafd9953929be0</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::AssetReader</name>
    <filename>classCesiumGltfReader_1_1AssetReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetReader</name>
      <anchorfile>classCesiumGltfReader_1_1AssetReader.html</anchorfile>
      <anchor>ad623bf10d2316ed6ee89937d4180f738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AssetReader.html</anchorfile>
      <anchor>a67009096416ad67c4f0cb2a098766a97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1AssetReader.html</anchorfile>
      <anchor>a320fc75e6f6e7b34424001c36933c16e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Asset &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AssetReader.html</anchorfile>
      <anchor>a9ae79b294b1c10c45628cea80bd1b160</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Asset &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AssetReader.html</anchorfile>
      <anchor>aebcb5d1d0f96dff88d59ad286f98e31c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Asset &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1AssetReader.html</anchorfile>
      <anchor>a2de2d33fb31ee9cb587ab3fcafbd04a6</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::Assets</name>
    <filename>structCesiumIonClient_1_1Assets.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>link</name>
      <anchorfile>structCesiumIonClient_1_1Assets.html</anchorfile>
      <anchor>ac0d146d82787b7909ba66ef4a2eaa3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Asset &gt;</type>
      <name>items</name>
      <anchorfile>structCesiumIonClient_1_1Assets.html</anchorfile>
      <anchor>a0e16976be032a83a50cbf7f61ecba548</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::AsyncSystem</name>
    <filename>classCesiumAsync_1_1AsyncSystem.html</filename>
    <member kind="typedef">
      <type>std::conditional_t&lt; std::is_void_v&lt; T &gt;, void, std::vector&lt; T &gt; &gt;</type>
      <name>AllValueType</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a6a19aaa497ec222e2ee38e04a1914850</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AsyncSystem</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a844f5d8f5657cc735163b0d765ca99cc</anchor>
      <arglist>(const std::shared_ptr&lt; ITaskProcessor &gt; &amp;pTaskProcessor) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; T &gt;</type>
      <name>createFuture</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>aaa07de261847a67c047242a4fc7e1a18</anchor>
      <arglist>(Func &amp;&amp;f) const</arglist>
    </member>
    <member kind="function">
      <type>Promise&lt; T &gt;</type>
      <name>createPromise</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>aa40f0e1841851d01310d870d5b339b83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, void &gt;</type>
      <name>runInWorkerThread</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>aa3b037a193c3cede9f67dbb3d5370e46</anchor>
      <arglist>(Func &amp;&amp;f) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, void &gt;</type>
      <name>runInMainThread</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>ab728e985e991198515c67467a1f3a971</anchor>
      <arglist>(Func &amp;&amp;f) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, void &gt;</type>
      <name>runInThreadPool</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a9f795286ac4399c32d647973568a3abe</anchor>
      <arglist>(const ThreadPool &amp;threadPool, Func &amp;&amp;f) const</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; AllValueType&lt; T &gt; &gt;</type>
      <name>all</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>afda8864747df9d52835286f3ce8e122c</anchor>
      <arglist>(std::vector&lt; Future&lt; T &gt; &gt; &amp;&amp;futures) const</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; AllValueType&lt; T &gt; &gt;</type>
      <name>all</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a41465beec53ac4448d5319e52607a40f</anchor>
      <arglist>(std::vector&lt; SharedFuture&lt; T &gt; &gt; &amp;&amp;futures) const</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; T &gt;</type>
      <name>createResolvedFuture</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a19e3001fbf532316e2e833807dc2f7a5</anchor>
      <arglist>(T &amp;&amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; void &gt;</type>
      <name>createResolvedFuture</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a94713aa4d297211a8ab6a7eb2a48ecd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatchMainThreadTasks</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a746ed634d8043176be067849d97878b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dispatchOneMainThreadTask</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a2882e7dd914c4c99f027ce66c060d90b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ThreadPool</type>
      <name>createThreadPool</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>af44eeeb58e85354840e0a2c66bb71a8a</anchor>
      <arglist>(int32_t numberOfThreads) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a69b339c121e4c6f63dccee1cf4125796</anchor>
      <arglist>(const AsyncSystem &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCesiumAsync_1_1AsyncSystem.html</anchorfile>
      <anchor>a7d82ea676da5553985d88f1742ddfe71</anchor>
      <arglist>(const AsyncSystem &amp;rhs) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::AttributeCompression</name>
    <filename>classCesiumUtility_1_1AttributeCompression.html</filename>
    <member kind="function" static="yes">
      <type>static glm::dvec3</type>
      <name>octDecodeInRange</name>
      <anchorfile>classCesiumUtility_1_1AttributeCompression.html</anchorfile>
      <anchor>ae9960863917e0c6e5b6262a4502c2a60</anchor>
      <arglist>(T x, T y, T rangeMax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static glm::dvec3</type>
      <name>octDecode</name>
      <anchorfile>classCesiumUtility_1_1AttributeCompression.html</anchorfile>
      <anchor>a0aa80955058f40f5aa655bb25cf96dc1</anchor>
      <arglist>(uint8_t x, uint8_t y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static glm::dvec3</type>
      <name>decodeRGB565</name>
      <anchorfile>classCesiumUtility_1_1AttributeCompression.html</anchorfile>
      <anchor>ab7d49fcd9d6a8e1a0a59be85caa973ae</anchor>
      <arglist>(const uint16_t value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Availability</name>
    <filename>structCesium3DTiles_1_1Availability.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">Cesium3DTiles::Availability::Constant</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Availability.html</anchorfile>
      <anchor>a1d1fbd45abd597691f71cb71e4a3f146</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>bitstream</name>
      <anchorfile>structCesium3DTiles_1_1Availability.html</anchorfile>
      <anchor>a7a9ce9c5d495831045bc083d0e088c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>availableCount</name>
      <anchorfile>structCesium3DTiles_1_1Availability.html</anchorfile>
      <anchor>a29ae06fc47699defe904bca338406e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int32_t &gt;</type>
      <name>constant</name>
      <anchorfile>structCesium3DTiles_1_1Availability.html</anchorfile>
      <anchor>a34c3b9dbf3b36a1662641d3b04103f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Availability.html</anchorfile>
      <anchor>a07f167557e1cb381b4fb34361ff02737</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::AvailabilityAccessor</name>
    <filename>classCesiumGeometry_1_1AvailabilityAccessor.html</filename>
    <member kind="function">
      <type></type>
      <name>AvailabilityAccessor</name>
      <anchorfile>classCesiumGeometry_1_1AvailabilityAccessor.html</anchorfile>
      <anchor>a7670d4f0d7544b8212678e383065b4e8</anchor>
      <arglist>(const AvailabilityView &amp;view, const AvailabilitySubtree &amp;subtree) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBufferView</name>
      <anchorfile>classCesiumGeometry_1_1AvailabilityAccessor.html</anchorfile>
      <anchor>a575240ebb08fe71eb4c7b57e38c7a097</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConstant</name>
      <anchorfile>classCesiumGeometry_1_1AvailabilityAccessor.html</anchorfile>
      <anchor>af39326656ab9ad300669ce32a1a04126</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConstant</name>
      <anchorfile>classCesiumGeometry_1_1AvailabilityAccessor.html</anchorfile>
      <anchor>a9e5a4a9ec00ff7f56f40aa769089a0e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::span&lt; const std::byte &gt; &amp;</type>
      <name>getBufferAccessor</name>
      <anchorfile>classCesiumGeometry_1_1AvailabilityAccessor.html</anchorfile>
      <anchor>a21aec95889ffdef7664ded0db5765afe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::byte &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCesiumGeometry_1_1AvailabilityAccessor.html</anchorfile>
      <anchor>a5e1e21cf77792edda564b43739f10ca1</anchor>
      <arglist>(size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classCesiumGeometry_1_1AvailabilityAccessor.html</anchorfile>
      <anchor>a505bbea2d6654f8c02fa27639cbb0e1b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::AvailabilityNode</name>
    <filename>structCesiumGeometry_1_1AvailabilityNode.html</filename>
    <member kind="function">
      <type></type>
      <name>AvailabilityNode</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilityNode.html</anchorfile>
      <anchor>a2291768900c046eb7e58f05690bdc4ea</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadedSubtree</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilityNode.html</anchorfile>
      <anchor>a980dc55eb18df00e864aeff68189844e</anchor>
      <arglist>(AvailabilitySubtree &amp;&amp;subtree_, uint32_t maxChildrenSubtrees) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; AvailabilitySubtree &gt;</type>
      <name>subtree</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilityNode.html</anchorfile>
      <anchor>a61a24f15fcdcebd07ff2b4904bb1ae8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::unique_ptr&lt; AvailabilityNode &gt; &gt;</type>
      <name>childNodes</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilityNode.html</anchorfile>
      <anchor>ab1ecb0847aa9bafd1e0003d11c3ea17c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::AvailabilityReader</name>
    <filename>classCesium3DTilesReader_1_1AvailabilityReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AvailabilityReader</name>
      <anchorfile>classCesium3DTilesReader_1_1AvailabilityReader.html</anchorfile>
      <anchor>a1f1fbb2d7c9bbc88a3ea226ad80b48bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1AvailabilityReader.html</anchorfile>
      <anchor>ab5776901bf0d2ce7fe4f242d47d70ab9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1AvailabilityReader.html</anchorfile>
      <anchor>ad28356c8cb5f0673275c976a058e3af6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Availability &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1AvailabilityReader.html</anchorfile>
      <anchor>a0da52dbf1e3004bf5c28a32651a1f202</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Availability &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1AvailabilityReader.html</anchorfile>
      <anchor>a8c859dbe416c896df73b66232d203321</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Availability &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1AvailabilityReader.html</anchorfile>
      <anchor>a7f2d610bdcdc6fa00c430b060918c0ee</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumQuantizedMeshTerrain::AvailabilityRectangle</name>
    <filename>structCesiumQuantizedMeshTerrain_1_1AvailabilityRectangle.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1AvailabilityRectangle.html</anchorfile>
      <anchor>abb1ff233a1904e573189afbe0629db28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>startX</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1AvailabilityRectangle.html</anchorfile>
      <anchor>ab93dbb493f1b7dbeb0bf193bee331416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>startY</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1AvailabilityRectangle.html</anchorfile>
      <anchor>af6b474b868722e70af79d7ada7aba901</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>endX</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1AvailabilityRectangle.html</anchorfile>
      <anchor>ad01c3d9edbe5315f537a3dc2bb91575d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>endY</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1AvailabilityRectangle.html</anchorfile>
      <anchor>a1ed1a43d037de64f28cb728fe6f68fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1AvailabilityRectangle.html</anchorfile>
      <anchor>ad7754c92c3ab6b3b4246f603b128e626</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumQuantizedMeshTerrain::AvailabilityRectangleReader</name>
    <filename>classCesiumQuantizedMeshTerrain_1_1AvailabilityRectangleReader.html</filename>
    <member kind="function">
      <type></type>
      <name>AvailabilityRectangleReader</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1AvailabilityRectangleReader.html</anchorfile>
      <anchor>a4800f42f2d1ff15f8ba26d6164c3d2cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1AvailabilityRectangleReader.html</anchorfile>
      <anchor>abdb65b34e7c18f431a6af27a0487351e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1AvailabilityRectangleReader.html</anchorfile>
      <anchor>a6eda5770eef8a732c1f95f646cb9f114</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumQuantizedMeshTerrain::AvailabilityRectangle &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1AvailabilityRectangleReader.html</anchorfile>
      <anchor>a2731b33f0acc2f82594d46af871e092c</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumQuantizedMeshTerrain::AvailabilityRectangle &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1AvailabilityRectangleReader.html</anchorfile>
      <anchor>a767201b24c1846c6f91b065a876dce95</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumQuantizedMeshTerrain::AvailabilityRectangle &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1AvailabilityRectangleReader.html</anchorfile>
      <anchor>a9520be5c5776656bf893951c0cf959c9</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::AvailabilitySubtree</name>
    <filename>structCesiumGeometry_1_1AvailabilitySubtree.html</filename>
    <member kind="variable">
      <type>AvailabilityView</type>
      <name>tileAvailability</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilitySubtree.html</anchorfile>
      <anchor>a9addf00a1686d7343a43b217a8e593fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AvailabilityView</type>
      <name>contentAvailability</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilitySubtree.html</anchorfile>
      <anchor>a52412fce93adbb7b1858c6e3fd2f648a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AvailabilityView</type>
      <name>subtreeAvailability</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilitySubtree.html</anchorfile>
      <anchor>a8a6d6c4e801c3c2097e7646ec710c8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::vector&lt; std::byte &gt; &gt;</type>
      <name>buffers</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilitySubtree.html</anchorfile>
      <anchor>a5c0bd6c36f25f3cf9260a434a77f27c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::AvailabilityTree</name>
    <filename>structCesiumGeometry_1_1AvailabilityTree.html</filename>
    <member kind="variable">
      <type>std::unique_ptr&lt; AvailabilityNode &gt;</type>
      <name>pRoot</name>
      <anchorfile>structCesiumGeometry_1_1AvailabilityTree.html</anchorfile>
      <anchor>a2cc234ae8dccae0d459acafee49814b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::AxisAlignedBox</name>
    <filename>structCesiumGeometry_1_1AxisAlignedBox.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>AxisAlignedBox</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a43432397c0ce51bdb3f2527ec11b0931</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>AxisAlignedBox</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a6a37ba657f7ad4446b498f37fd901121</anchor>
      <arglist>(double minimumX_, double minimumY_, double minimumZ_, double maximumX_, double maximumY_, double maximumZ_) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>contains</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>ad165d4a176e9bb11b1f06ea7436b45f2</anchor>
      <arglist>(const glm::dvec3 &amp;position) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimumX</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>adf152f67d03a83218a67d377fcbf7fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimumY</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a88a3a74f9e90345e222a03b3fdb7b21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimumZ</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>aa2db01f4c3b84ce3a93fa4cc83a597d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumX</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>aa9c196d0072aa9c88fa82a99d76a8703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumY</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a1eb8f4be51a7ddcc8894bfb148a27f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumZ</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>ae30b444b9d2192da4f6ba7221693ab54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lengthX</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a6ee99c9069058f231c1b4da582a2c28e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lengthY</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>a57f885184e2846a676ce143530d7c129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lengthZ</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>afce72ad62e41d22323d20dd5e4e4ef8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glm::dvec3</type>
      <name>center</name>
      <anchorfile>structCesiumGeometry_1_1AxisAlignedBox.html</anchorfile>
      <anchor>acc9b44b939a5b345134812259f4c8d08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::B3dmToGltfConverter</name>
    <filename>structCesium3DTilesContent_1_1B3dmToGltfConverter.html</filename>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; GltfConverterResult &gt;</type>
      <name>convert</name>
      <anchorfile>structCesium3DTilesContent_1_1B3dmToGltfConverter.html</anchorfile>
      <anchor>a7015c4aa6bbfffa8de150eddd4067c81</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;b3dmBinary, const CesiumGltfReader::GltfReaderOptions &amp;options, const AssetFetcher &amp;assetFetcher)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::BinaryToGltfConverter</name>
    <filename>structCesium3DTilesContent_1_1BinaryToGltfConverter.html</filename>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; GltfConverterResult &gt;</type>
      <name>convert</name>
      <anchorfile>structCesium3DTilesContent_1_1BinaryToGltfConverter.html</anchorfile>
      <anchor>a6c9096193c8fb29ad372903423b55d6d</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;gltfBinary, const CesiumGltfReader::GltfReaderOptions &amp;options, const AssetFetcher &amp;assetFetcher)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::BingMapsRasterOverlay</name>
    <filename>classCesiumRasterOverlays_1_1BingMapsRasterOverlay.html</filename>
    <base>CesiumRasterOverlays::RasterOverlay</base>
    <member kind="function">
      <type></type>
      <name>BingMapsRasterOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1BingMapsRasterOverlay.html</anchorfile>
      <anchor>aa589b9c9bcdeb358b09865dd07d3e6e9</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;url, const std::string &amp;key, const std::string &amp;mapStyle=BingMapsStyle::AERIAL, const std::string &amp;culture=&quot;&quot;, const RasterOverlayOptions &amp;overlayOptions={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CesiumAsync::Future&lt; CreateTileProviderResult &gt;</type>
      <name>createTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1BingMapsRasterOverlay.html</anchorfile>
      <anchor>a493bf5e4c473ba8a3c7b2f3b6f3939df</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumUtility::CreditSystem &gt; &amp;pCreditSystem, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; pOwner) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::BingMapsStyle</name>
    <filename>structCesiumRasterOverlays_1_1BingMapsStyle.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>AERIAL</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>ab66058a78970c296e505aca9d5ce0e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>AERIAL_WITH_LABELS</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>aabc59eedfc6a4155c3c8ab2fc77c62a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>AERIAL_WITH_LABELS_ON_DEMAND</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>ae914934a184ec2b468571e10c9e09f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>ROAD</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>a0cf578dc5254822c32030078e614a9d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>ROAD_ON_DEMAND</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>ae039fe350e571bab7b82438f6a93f910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>CANVAS_DARK</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>ab5f371e99f71cba4f4a31af056a3eacc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>CANVAS_LIGHT</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>a5c230b34875bbf94880e55e88f05e5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>CANVAS_GRAY</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>a82cc9575fe54501e67cc5c9b5757be70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>ORDNANCE_SURVEY</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>a4add299e80bf2c2f5b7c82e45f618d14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>COLLINS_BART</name>
      <anchorfile>structCesiumRasterOverlays_1_1BingMapsStyle.html</anchorfile>
      <anchor>a9b88d1272337130f5dd7c57ba9e5ced9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::BoolJsonHandler</name>
    <filename>classCesiumJsonReader_1_1BoolJsonHandler.html</filename>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1BoolJsonHandler.html</anchorfile>
      <anchor>a9ae9d6e37786a5ba5e5ae573ffd5ed14</anchor>
      <arglist>(IJsonHandler *pParent, bool *pBool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1BoolJsonHandler.html</anchorfile>
      <anchor>aa0e5fe1c859a9c9ffa901194ae9288c5</anchor>
      <arglist>(bool b) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::BoundingRegion</name>
    <filename>classCesiumGeospatial_1_1BoundingRegion.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundingRegion</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>a8a013bcd5d51ed68b9a0e667c9f46103</anchor>
      <arglist>(const GlobeRectangle &amp;rectangle, double minimumHeight, double maximumHeight, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>const GlobeRectangle &amp;</type>
      <name>getRectangle</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>aa27ee1978359b6f3e74f31aaa7be92db</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinimumHeight</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>ada6eafaa42d3d22e20b3312eeb4043e2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaximumHeight</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>a89370049eadabd105a1948a95b8a7ef7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::OrientedBoundingBox &amp;</type>
      <name>getBoundingBox</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>afcfc134bfedbade4eca29c12c96c2f31</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeometry::CullingResult</type>
      <name>intersectPlane</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>a189e2e67ee603a753875a4a7d9d8c6ce</anchor>
      <arglist>(const CesiumGeometry::Plane &amp;plane) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>aa37b2ad3f9d14b83559c9a5ee287186e</anchor>
      <arglist>(const glm::dvec3 &amp;position, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>a69a94a292f7561df6db0f377c0d4c536</anchor>
      <arglist>(const Cartographic &amp;position, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>a75cbb22a65da8eab31159a8a3c88b3dd</anchor>
      <arglist>(const Cartographic &amp;cartographicPosition, const glm::dvec3 &amp;cartesianPosition) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BoundingRegion</type>
      <name>computeUnion</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegion.html</anchorfile>
      <anchor>a128a4440c24cb5d11271f5cf90b41522</anchor>
      <arglist>(const BoundingRegion &amp;other, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::BoundingRegionBuilder</name>
    <filename>classCesiumGeospatial_1_1BoundingRegionBuilder.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundingRegionBuilder</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionBuilder.html</anchorfile>
      <anchor>a0fe9bd6323330306c09f11f22fe16549</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>BoundingRegion</type>
      <name>toRegion</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionBuilder.html</anchorfile>
      <anchor>aebb42e1606423c4c4313a2b60a585a50</anchor>
      <arglist>(const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const</arglist>
    </member>
    <member kind="function">
      <type>GlobeRectangle</type>
      <name>toGlobeRectangle</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionBuilder.html</anchorfile>
      <anchor>a10ec42564df5aee86eaaf9e8012d9881</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoleTolerance</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionBuilder.html</anchorfile>
      <anchor>ad380f20f9a94f42e166dce3795053bff</anchor>
      <arglist>(double tolerance) noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPoleTolerance</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionBuilder.html</anchorfile>
      <anchor>a227529c8cd5ceb99b5146bdc94f4d72b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expandToIncludePosition</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionBuilder.html</anchorfile>
      <anchor>a717691d78cecd7293ad69b8becbe399a</anchor>
      <arglist>(const Cartographic &amp;position)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::BoundingRegionWithLooseFittingHeights</name>
    <filename>classCesiumGeospatial_1_1BoundingRegionWithLooseFittingHeights.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundingRegionWithLooseFittingHeights</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionWithLooseFittingHeights.html</anchorfile>
      <anchor>a9183acb32aaee2b484d97f30cb97d2ab</anchor>
      <arglist>(const BoundingRegion &amp;boundingRegion) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const BoundingRegion &amp;</type>
      <name>getBoundingRegion</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionWithLooseFittingHeights.html</anchorfile>
      <anchor>a1e4c270fe45a7fb0e42170beba7c4e5c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeConservativeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionWithLooseFittingHeights.html</anchorfile>
      <anchor>ae4eabf1601fd670e716f34dbfafd53af</anchor>
      <arglist>(const glm::dvec3 &amp;position, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeConservativeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionWithLooseFittingHeights.html</anchorfile>
      <anchor>ab9d060ac48904b695772324cd110e744</anchor>
      <arglist>(const Cartographic &amp;position, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeConservativeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeospatial_1_1BoundingRegionWithLooseFittingHeights.html</anchorfile>
      <anchor>a23d6337d12158433b904231f762cfa4b</anchor>
      <arglist>(const Cartographic &amp;cartographicPosition, const glm::dvec3 &amp;cartesianPosition) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::BoundingSphere</name>
    <filename>classCesiumGeometry_1_1BoundingSphere.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>BoundingSphere</name>
      <anchorfile>classCesiumGeometry_1_1BoundingSphere.html</anchorfile>
      <anchor>a55bbac14447b7cbc6540824025647bb0</anchor>
      <arglist>(const glm::dvec3 &amp;center, double radius) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr const glm::dvec3 &amp;</type>
      <name>getCenter</name>
      <anchorfile>classCesiumGeometry_1_1BoundingSphere.html</anchorfile>
      <anchor>a522e3b5a4e0f7fba48f6eeefe16ad4ba</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>getRadius</name>
      <anchorfile>classCesiumGeometry_1_1BoundingSphere.html</anchorfile>
      <anchor>aa750411a29eefee750db0306968a17ce</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CullingResult</type>
      <name>intersectPlane</name>
      <anchorfile>classCesiumGeometry_1_1BoundingSphere.html</anchorfile>
      <anchor>a41674050a8c97011b26870597af39bec</anchor>
      <arglist>(const Plane &amp;plane) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeometry_1_1BoundingSphere.html</anchorfile>
      <anchor>a652d2f0b592f8d837a94f3d38bdeb642</anchor>
      <arglist>(const glm::dvec3 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classCesiumGeometry_1_1BoundingSphere.html</anchorfile>
      <anchor>a44a754c23ee07f60efcc4d25f87575a0</anchor>
      <arglist>(const glm::dvec3 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BoundingSphere</type>
      <name>transform</name>
      <anchorfile>classCesiumGeometry_1_1BoundingSphere.html</anchorfile>
      <anchor>aa90a4e2b0937401f3ccd348de13a5180</anchor>
      <arglist>(const glm::dmat4 &amp;transformation) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::BoundingVolume</name>
    <filename>structCesium3DTiles_1_1BoundingVolume.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1BoundingVolume.html</anchorfile>
      <anchor>a224798ebbaea21175ead630ecc0ca067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>box</name>
      <anchorfile>structCesium3DTiles_1_1BoundingVolume.html</anchorfile>
      <anchor>ac1e3adfb7dfc2d35894147806aa3044b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>region</name>
      <anchorfile>structCesium3DTiles_1_1BoundingVolume.html</anchorfile>
      <anchor>a24bc6d399726c0605495380b59714a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>sphere</name>
      <anchorfile>structCesium3DTiles_1_1BoundingVolume.html</anchorfile>
      <anchor>aa57801122d404f5262f93dc72e9bc505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1BoundingVolume.html</anchorfile>
      <anchor>af2dec43373ae448e9e36084320097305</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::BoundingVolumeReader</name>
    <filename>classCesium3DTilesReader_1_1BoundingVolumeReader.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundingVolumeReader</name>
      <anchorfile>classCesium3DTilesReader_1_1BoundingVolumeReader.html</anchorfile>
      <anchor>a4fa2f88357f8b6746988052d56565ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1BoundingVolumeReader.html</anchorfile>
      <anchor>a509706feb01ee91b23909393d922a817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1BoundingVolumeReader.html</anchorfile>
      <anchor>adbb077238454f46582d647b0db7c238d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::BoundingVolume &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BoundingVolumeReader.html</anchorfile>
      <anchor>ad26d99e5e5ac1e7a7d5a96964fe00f09</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::BoundingVolume &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BoundingVolumeReader.html</anchorfile>
      <anchor>ac37039a518661b8e1d6d06358c2a7fa6</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::BoundingVolume &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BoundingVolumeReader.html</anchorfile>
      <anchor>aff90e713c3a2fc4e77a312744c9a0b3a</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Buffer</name>
    <filename>structCesium3DTiles_1_1Buffer.html</filename>
    <base>Cesium3DTiles::BufferSpec</base>
    <member kind="variable">
      <type>BufferCesium</type>
      <name>cesium</name>
      <anchorfile>structCesium3DTiles_1_1Buffer.html</anchorfile>
      <anchor>ab5f7583d9b5cdfb3519ef0e4e80f5cca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Buffer</name>
    <filename>structCesiumGltf_1_1Buffer.html</filename>
    <base>CesiumGltf::BufferSpec</base>
    <member kind="variable">
      <type>BufferCesium</type>
      <name>cesium</name>
      <anchorfile>structCesiumGltf_1_1Buffer.html</anchorfile>
      <anchor>a1456bfc059d6afdf13868731f5ef556e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::BufferCesium</name>
    <filename>structCesium3DTiles_1_1BufferCesium.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>data</name>
      <anchorfile>structCesium3DTiles_1_1BufferCesium.html</anchorfile>
      <anchor>ab5831a9f4d8fb8aaf24a2cdb09ca485f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::BufferCesium</name>
    <filename>structCesiumGltf_1_1BufferCesium.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>data</name>
      <anchorfile>structCesiumGltf_1_1BufferCesium.html</anchorfile>
      <anchor>ac7d004f8e2839f9a043d09fcb3b41164</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::BufferReader</name>
    <filename>classCesium3DTilesReader_1_1BufferReader.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferReader</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferReader.html</anchorfile>
      <anchor>a0b0dde9628c5024f1373c58e5c71eff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferReader.html</anchorfile>
      <anchor>a3d7405679bf672e6cfce658cd55c160b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferReader.html</anchorfile>
      <anchor>a515e4596660759e174775d13f14242ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Buffer &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferReader.html</anchorfile>
      <anchor>afd736c13f1bb43519160bfc0d2610ace</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Buffer &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferReader.html</anchorfile>
      <anchor>a6097bff2c2faa2d5a0babdaab18090d9</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Buffer &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferReader.html</anchorfile>
      <anchor>a0ac77bc06f4b317b6d165d29ff07f68c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::BufferReader</name>
    <filename>classCesiumGltfReader_1_1BufferReader.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferReader</name>
      <anchorfile>classCesiumGltfReader_1_1BufferReader.html</anchorfile>
      <anchor>a44497a1c5e24965e3ef3e654ff36a54b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1BufferReader.html</anchorfile>
      <anchor>a05fbcba8f8f613e9a4a4436cbd309cc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1BufferReader.html</anchorfile>
      <anchor>ada44c8b36794d7d1d707e793009c8565</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Buffer &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1BufferReader.html</anchorfile>
      <anchor>a277b0ff6b2949767156df22cc812972b</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Buffer &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1BufferReader.html</anchorfile>
      <anchor>a0c9c0e0ec47af3522e2bdbaf222e9df1</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Buffer &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1BufferReader.html</anchorfile>
      <anchor>ae41e0950e1c1d3fac84d256712196455</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::BufferSpec</name>
    <filename>structCesium3DTiles_1_1BufferSpec.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1BufferSpec.html</anchorfile>
      <anchor>a6a41b101eb62ac363c632dcfd08d8ec1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>uri</name>
      <anchorfile>structCesium3DTiles_1_1BufferSpec.html</anchorfile>
      <anchor>afa1c65361c5465196afb5bc5b5bf33d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteLength</name>
      <anchorfile>structCesium3DTiles_1_1BufferSpec.html</anchorfile>
      <anchor>ad5fc362993602b7881c3720bbc51f653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesium3DTiles_1_1BufferSpec.html</anchorfile>
      <anchor>aa39a02d8b0e6d3245a89b8b347229582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1BufferSpec.html</anchorfile>
      <anchor>ab6fe363de9f15346f6a2da7ce20d5eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BufferSpec</name>
      <anchorfile>structCesium3DTiles_1_1BufferSpec.html</anchorfile>
      <anchor>a21e207850ed5fe7cbe440b1f018c25fe</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::BufferSpec</name>
    <filename>structCesiumGltf_1_1BufferSpec.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1BufferSpec.html</anchorfile>
      <anchor>abb77b91acb1ca53935cc23aa2b95972b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>uri</name>
      <anchorfile>structCesiumGltf_1_1BufferSpec.html</anchorfile>
      <anchor>a7ebd5fae64c3461908e5701659451432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteLength</name>
      <anchorfile>structCesiumGltf_1_1BufferSpec.html</anchorfile>
      <anchor>ab2f382179ccf84e24031eda51154ac7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1BufferSpec.html</anchorfile>
      <anchor>a6733dd35bbb555df0ab6b208747b3ee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BufferSpec</name>
      <anchorfile>structCesiumGltf_1_1BufferSpec.html</anchorfile>
      <anchor>ad15fd83a56abb21f6ee8c7f314caf285</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::BufferView</name>
    <filename>structCesium3DTiles_1_1BufferView.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1BufferView.html</anchorfile>
      <anchor>a71a3ee142da1e52fddc31d05dab8c5d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>buffer</name>
      <anchorfile>structCesium3DTiles_1_1BufferView.html</anchorfile>
      <anchor>ad6d9e1139113dbfe0eba9017ba708743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteOffset</name>
      <anchorfile>structCesium3DTiles_1_1BufferView.html</anchorfile>
      <anchor>a413823ee9c16153d6a826527f49b4d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteLength</name>
      <anchorfile>structCesium3DTiles_1_1BufferView.html</anchorfile>
      <anchor>a7d1593d5deee27e9ed4943c9cf449fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesium3DTiles_1_1BufferView.html</anchorfile>
      <anchor>a5955d40a7dbd61c4394e60cb266106b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1BufferView.html</anchorfile>
      <anchor>aaa2b5029646a472bf47a5826a8155a9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::BufferView</name>
    <filename>structCesiumGltf_1_1BufferView.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <class kind="struct">CesiumGltf::BufferView::Target</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1BufferView.html</anchorfile>
      <anchor>a97ecc8a8ebe73f4080921faaabdb3919</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>buffer</name>
      <anchorfile>structCesiumGltf_1_1BufferView.html</anchorfile>
      <anchor>aa84aa8c5885d6fd384695b48d4acf1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteOffset</name>
      <anchorfile>structCesiumGltf_1_1BufferView.html</anchorfile>
      <anchor>af6d3d1984dce846f30e710577bcb0b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteLength</name>
      <anchorfile>structCesiumGltf_1_1BufferView.html</anchorfile>
      <anchor>a561079531727f2d645306b2328946dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>byteStride</name>
      <anchorfile>structCesiumGltf_1_1BufferView.html</anchorfile>
      <anchor>ab282800f37e1f62926f7544989489caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int32_t &gt;</type>
      <name>target</name>
      <anchorfile>structCesiumGltf_1_1BufferView.html</anchorfile>
      <anchor>af064520f3dd908b80cd3019fa225226f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1BufferView.html</anchorfile>
      <anchor>a8b610c430c56e316ff968c14f6a0d341</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::BufferViewReader</name>
    <filename>classCesium3DTilesReader_1_1BufferViewReader.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferViewReader</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a4258c92f9a336a4326f770e759fd0155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a4b9f690153a98da864b35a4f91438a1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a6822c14f55770651fec1de103c741a86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::BufferView &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a380492377b565caf46fc817a217994c4</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::BufferView &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a04139ec80f011ba4be4a265e0312c753</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::BufferView &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a7656a7ad5c1962a44989f4471a2b6d3d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::BufferViewReader</name>
    <filename>classCesiumGltfReader_1_1BufferViewReader.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferViewReader</name>
      <anchorfile>classCesiumGltfReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a7f081d9707568abfcc087c0b4b334a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a6b50462b69e2c3782312116e4f82c596</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a0e3660dd8ebde88f74e9b875feedb695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::BufferView &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a229f3b38b24019a020b1467ae6d29883</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::BufferView &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1BufferViewReader.html</anchorfile>
      <anchor>aafe47fe200272506458ceccc9d85de97</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::BufferView &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1BufferViewReader.html</anchorfile>
      <anchor>a28a99932425c77c730669caf347b337f</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::CacheItem</name>
    <filename>classCesiumAsync_1_1CacheItem.html</filename>
    <member kind="function">
      <type></type>
      <name>CacheItem</name>
      <anchorfile>classCesiumAsync_1_1CacheItem.html</anchorfile>
      <anchor>a17000ec638439a310dc97091bfc4beb0</anchor>
      <arglist>(std::time_t cacheExpiryTime, CacheRequest &amp;&amp;request, CacheResponse &amp;&amp;response)</arglist>
    </member>
    <member kind="variable">
      <type>std::time_t</type>
      <name>expiryTime</name>
      <anchorfile>classCesiumAsync_1_1CacheItem.html</anchorfile>
      <anchor>aa18dcbb3594223384addf7e074aaa0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CacheRequest</type>
      <name>cacheRequest</name>
      <anchorfile>classCesiumAsync_1_1CacheItem.html</anchorfile>
      <anchor>a2b64f3bfba9e1513c97557c9a95f4168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CacheResponse</type>
      <name>cacheResponse</name>
      <anchorfile>classCesiumAsync_1_1CacheItem.html</anchorfile>
      <anchor>ade091e2d4c6625574a0b50175bf946cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::CacheRequest</name>
    <filename>classCesiumAsync_1_1CacheRequest.html</filename>
    <member kind="function">
      <type></type>
      <name>CacheRequest</name>
      <anchorfile>classCesiumAsync_1_1CacheRequest.html</anchorfile>
      <anchor>ae6cfc1f35c71e51d92e1f4d5022cceb5</anchor>
      <arglist>(HttpHeaders &amp;&amp;cacheHeaders, std::string &amp;&amp;cacheMethod, std::string &amp;&amp;cacheUrl)</arglist>
    </member>
    <member kind="variable">
      <type>HttpHeaders</type>
      <name>headers</name>
      <anchorfile>classCesiumAsync_1_1CacheRequest.html</anchorfile>
      <anchor>a823c2056c2ee4fd35950403dff8464ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>method</name>
      <anchorfile>classCesiumAsync_1_1CacheRequest.html</anchorfile>
      <anchor>a70970133b3662037180123c263582f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>classCesiumAsync_1_1CacheRequest.html</anchorfile>
      <anchor>a760ff4258106e0ef450326a0eb034448</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::CacheResponse</name>
    <filename>classCesiumAsync_1_1CacheResponse.html</filename>
    <member kind="function">
      <type></type>
      <name>CacheResponse</name>
      <anchorfile>classCesiumAsync_1_1CacheResponse.html</anchorfile>
      <anchor>a378729d80b19c50c2a0709a1b6aecad2</anchor>
      <arglist>(uint16_t cacheStatusCode, HttpHeaders &amp;&amp;cacheHeaders, std::vector&lt; std::byte &gt; &amp;&amp;cacheData)</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>statusCode</name>
      <anchorfile>classCesiumAsync_1_1CacheResponse.html</anchorfile>
      <anchor>ac65163c91dc1a1b6325ad36b46ca8eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HttpHeaders</type>
      <name>headers</name>
      <anchorfile>classCesiumAsync_1_1CacheResponse.html</anchorfile>
      <anchor>a21d20f895f2ff310527e29ba0b1c3212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>data</name>
      <anchorfile>classCesiumAsync_1_1CacheResponse.html</anchorfile>
      <anchor>ac5a754f4c4e55bf397276796ce473bfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::CachingAssetAccessor</name>
    <filename>classCesiumAsync_1_1CachingAssetAccessor.html</filename>
    <base>CesiumAsync::IAssetAccessor</base>
    <member kind="function">
      <type></type>
      <name>CachingAssetAccessor</name>
      <anchorfile>classCesiumAsync_1_1CachingAssetAccessor.html</anchorfile>
      <anchor>ade8361007555130ed1de193ecb4d7233</anchor>
      <arglist>(const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, const std::shared_ptr&lt; IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; ICacheDatabase &gt; &amp;pCacheDatabase, int32_t requestsPerCachePrune=10000)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Future&lt; std::shared_ptr&lt; IAssetRequest &gt; &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumAsync_1_1CachingAssetAccessor.html</anchorfile>
      <anchor>addbe301a881204df02f370d74fc04bc8</anchor>
      <arglist>(const AsyncSystem &amp;asyncSystem, const std::string &amp;url, const std::vector&lt; THeader &gt; &amp;headers) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Future&lt; std::shared_ptr&lt; IAssetRequest &gt; &gt;</type>
      <name>request</name>
      <anchorfile>classCesiumAsync_1_1CachingAssetAccessor.html</anchorfile>
      <anchor>a74cc091d69c9af12e72e7711d7b651d9</anchor>
      <arglist>(const AsyncSystem &amp;asyncSystem, const std::string &amp;verb, const std::string &amp;url, const std::vector&lt; THeader &gt; &amp;headers, const std::span&lt; const std::byte &gt; &amp;contentPayload) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tick</name>
      <anchorfile>classCesiumAsync_1_1CachingAssetAccessor.html</anchorfile>
      <anchor>a560777c687339eeb9ce6819f98d3f39e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Camera</name>
    <filename>structCesiumGltf_1_1Camera.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <class kind="struct">CesiumGltf::Camera::Type</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Camera.html</anchorfile>
      <anchor>ae3f3b0fb99b1f94eaccd9285eca1dd8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::CameraOrthographic &gt;</type>
      <name>orthographic</name>
      <anchorfile>structCesiumGltf_1_1Camera.html</anchorfile>
      <anchor>a3b1d63c94ff9a859901df7400bc983d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::CameraPerspective &gt;</type>
      <name>perspective</name>
      <anchorfile>structCesiumGltf_1_1Camera.html</anchorfile>
      <anchor>a57aee1db506e5ea1a75d52e3176ff067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1Camera.html</anchorfile>
      <anchor>a04050ab09a7414de836f810681031d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Camera.html</anchorfile>
      <anchor>ac2046020c3a821610e167b5d1d7c0488</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CameraOrthographic</name>
    <filename>structCesiumGltf_1_1CameraOrthographic.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1CameraOrthographic.html</anchorfile>
      <anchor>a7236894db91de5a5b4c1851ca66d4593</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>xmag</name>
      <anchorfile>structCesiumGltf_1_1CameraOrthographic.html</anchorfile>
      <anchor>a41d670973e8008f5f6b78d5d450f4f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ymag</name>
      <anchorfile>structCesiumGltf_1_1CameraOrthographic.html</anchorfile>
      <anchor>a619e3dabb2ab22d1cc3f750b6fc423d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>zfar</name>
      <anchorfile>structCesiumGltf_1_1CameraOrthographic.html</anchorfile>
      <anchor>a4d18fcb7bfc4e66c0873b83e359ab851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>znear</name>
      <anchorfile>structCesiumGltf_1_1CameraOrthographic.html</anchorfile>
      <anchor>afc8c1580ca24e25c3320f5ffd9b8db84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1CameraOrthographic.html</anchorfile>
      <anchor>a26a250ddf5738643c4443593024f792f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::CameraOrthographicReader</name>
    <filename>classCesiumGltfReader_1_1CameraOrthographicReader.html</filename>
    <member kind="function">
      <type></type>
      <name>CameraOrthographicReader</name>
      <anchorfile>classCesiumGltfReader_1_1CameraOrthographicReader.html</anchorfile>
      <anchor>a74d9606610ffa2ccdc63ca44b7393979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1CameraOrthographicReader.html</anchorfile>
      <anchor>a73fb79f080c98a1200e78502fc711c5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1CameraOrthographicReader.html</anchorfile>
      <anchor>a865acf911776fa2dc81c03ba66b8b86f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::CameraOrthographic &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraOrthographicReader.html</anchorfile>
      <anchor>a50d685194365d5bb1ebb43b8cff62977</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::CameraOrthographic &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraOrthographicReader.html</anchorfile>
      <anchor>a69ed25f76cbc25e9f4a7510494abd765</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::CameraOrthographic &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraOrthographicReader.html</anchorfile>
      <anchor>a1b5cbd030626ed7e3c7ac7962f931269</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CameraPerspective</name>
    <filename>structCesiumGltf_1_1CameraPerspective.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1CameraPerspective.html</anchorfile>
      <anchor>a1a4c94b2e59e54da61a3a4570b79d3a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; double &gt;</type>
      <name>aspectRatio</name>
      <anchorfile>structCesiumGltf_1_1CameraPerspective.html</anchorfile>
      <anchor>a1f841e1c156a9850c315813356e8d1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>yfov</name>
      <anchorfile>structCesiumGltf_1_1CameraPerspective.html</anchorfile>
      <anchor>a9d2fbd50a9b6282c4e04631591ecca05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; double &gt;</type>
      <name>zfar</name>
      <anchorfile>structCesiumGltf_1_1CameraPerspective.html</anchorfile>
      <anchor>a9d4d4c64ff2e524d05c59f30fe3a6b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>znear</name>
      <anchorfile>structCesiumGltf_1_1CameraPerspective.html</anchorfile>
      <anchor>a0c2987550be9c637d64a0f3843de9e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1CameraPerspective.html</anchorfile>
      <anchor>a02cf584b1e26676e3d1dd52a390fe785</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::CameraPerspectiveReader</name>
    <filename>classCesiumGltfReader_1_1CameraPerspectiveReader.html</filename>
    <member kind="function">
      <type></type>
      <name>CameraPerspectiveReader</name>
      <anchorfile>classCesiumGltfReader_1_1CameraPerspectiveReader.html</anchorfile>
      <anchor>a968381025a64cdeee8c7310f07eef891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1CameraPerspectiveReader.html</anchorfile>
      <anchor>a1a826e270ca4afb63d57fff0b32e64c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1CameraPerspectiveReader.html</anchorfile>
      <anchor>a77b32fc036e3aa63d1d2950053526244</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::CameraPerspective &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraPerspectiveReader.html</anchorfile>
      <anchor>a6b96b84943aa18559450eb58d3249c72</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::CameraPerspective &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraPerspectiveReader.html</anchorfile>
      <anchor>a354502b49d3ad385e09437e0572a2772</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::CameraPerspective &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraPerspectiveReader.html</anchorfile>
      <anchor>aa504b4d53ac8ff6437121b44786490ee</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::CameraReader</name>
    <filename>classCesiumGltfReader_1_1CameraReader.html</filename>
    <member kind="function">
      <type></type>
      <name>CameraReader</name>
      <anchorfile>classCesiumGltfReader_1_1CameraReader.html</anchorfile>
      <anchor>a9be397b73bef8f0688f6403a61367e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1CameraReader.html</anchorfile>
      <anchor>aad179bcc2bd47af32ceb192585c30792</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1CameraReader.html</anchorfile>
      <anchor>a1d574e556e5f7d279ca106962bc548fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Camera &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraReader.html</anchorfile>
      <anchor>aa21a6dbcd35ddb053a8884992e484bb8</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Camera &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraReader.html</anchorfile>
      <anchor>a86f3ccfd81f5f5db426bbbfdc8618373</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Camera &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1CameraReader.html</anchorfile>
      <anchor>ad31f3178e53b4e781ccdd6b3517e9071</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized</name>
    <filename>structCesiumGltf_1_1CanBeNormalized.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; glm::mat&lt; n, n, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01glm_1_1mat_3_01n_00_01n_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>glm::length_t n</templarg>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <base>CesiumGltf::CanBeNormalized&lt; T &gt;</base>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; glm::vec&lt; n, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01glm_1_1vec_3_01n_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>glm::length_t n</templarg>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <base>CesiumGltf::CanBeNormalized&lt; T &gt;</base>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; int16_t &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01int16__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; int32_t &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01int32__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; int64_t &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01int64__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; int8_t &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01int8__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; PropertyArrayView&lt; T &gt; &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01PropertyArrayView_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <base>CesiumGltf::CanBeNormalized&lt; T &gt;</base>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; uint16_t &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01uint16__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; uint32_t &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01uint32__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; uint64_t &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01uint64__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CanBeNormalized&lt; uint8_t &gt;</name>
    <filename>structCesiumGltf_1_1CanBeNormalized_3_01uint8__t_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::Cartographic</name>
    <filename>classCesiumGeospatial_1_1Cartographic.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Cartographic</name>
      <anchorfile>classCesiumGeospatial_1_1Cartographic.html</anchorfile>
      <anchor>a904a70102f8715697915d32c20f3e11a</anchor>
      <arglist>(double longitudeRadians, double latitudeRadians, double heightMeters=0.0) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumGeospatial_1_1Cartographic.html</anchorfile>
      <anchor>a8d39d59036b97861edf42a4649922352</anchor>
      <arglist>(const Cartographic &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr Cartographic</type>
      <name>fromDegrees</name>
      <anchorfile>classCesiumGeospatial_1_1Cartographic.html</anchorfile>
      <anchor>a30f193e095dda5dfdb29a45cf28df0f2</anchor>
      <arglist>(double longitudeDegrees, double latitudeDegrees, double heightMeters=0.0) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>longitude</name>
      <anchorfile>classCesiumGeospatial_1_1Cartographic.html</anchorfile>
      <anchor>a3752a9637d5f9d9bb2748fb1effc4729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>latitude</name>
      <anchorfile>classCesiumGeospatial_1_1Cartographic.html</anchorfile>
      <anchor>aac92700b030c1d15afc5ecddb84550c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>height</name>
      <anchorfile>classCesiumGeospatial_1_1Cartographic.html</anchorfile>
      <anchor>a1187fcdd55f56b4b466e89935a63d548</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::CartographicPolygon</name>
    <filename>classCesiumGeospatial_1_1CartographicPolygon.html</filename>
    <member kind="function">
      <type></type>
      <name>CartographicPolygon</name>
      <anchorfile>classCesiumGeospatial_1_1CartographicPolygon.html</anchorfile>
      <anchor>a1c53f259144668bcd5f77b8dea075044</anchor>
      <arglist>(const std::vector&lt; glm::dvec2 &gt; &amp;polygon)</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::vector&lt; glm::dvec2 &gt; &amp;</type>
      <name>getVertices</name>
      <anchorfile>classCesiumGeospatial_1_1CartographicPolygon.html</anchorfile>
      <anchor>afdf6d05751a3cd47d6bbb56f76fb17c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::vector&lt; uint32_t &gt; &amp;</type>
      <name>getIndices</name>
      <anchorfile>classCesiumGeospatial_1_1CartographicPolygon.html</anchorfile>
      <anchor>a22a16cd07db32339069125c5be552e0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::optional&lt; CesiumGeospatial::GlobeRectangle &gt; &amp;</type>
      <name>getBoundingRectangle</name>
      <anchorfile>classCesiumGeospatial_1_1CartographicPolygon.html</anchorfile>
      <anchor>adac5f1251a81835e4693e437aa5a803b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rectangleIsWithinPolygons</name>
      <anchorfile>classCesiumGeospatial_1_1CartographicPolygon.html</anchorfile>
      <anchor>a95e361f2908e866c24cf49555c3c2238</anchor>
      <arglist>(const CesiumGeospatial::GlobeRectangle &amp;rectangle, const std::vector&lt; CesiumGeospatial::CartographicPolygon &gt; &amp;cartographicPolygons) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rectangleIsOutsidePolygons</name>
      <anchorfile>classCesiumGeospatial_1_1CartographicPolygon.html</anchorfile>
      <anchor>a17b67d7c55680419df57eed0bd1f6e49</anchor>
      <arglist>(const CesiumGeospatial::GlobeRectangle &amp;rectangle, const std::vector&lt; CesiumGeospatial::CartographicPolygon &gt; &amp;cartographicPolygons) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumAsync::CaseInsensitiveCompare</name>
    <filename>structCesiumAsync_1_1CaseInsensitiveCompare.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structCesiumAsync_1_1CaseInsensitiveCompare.html</anchorfile>
      <anchor>aa5b6cfb5a86d37d1bc53f47fb4f3fd8f</anchor>
      <arglist>(const std::string &amp;s1, const std::string &amp;s2) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Class</name>
    <filename>structCesium3DTiles_1_1Class.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Class.html</anchorfile>
      <anchor>a2bd935f0812ecf5f0b2372452ed0f5cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesium3DTiles_1_1Class.html</anchorfile>
      <anchor>a98faf2d1b708b046e286ad72cb059da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesium3DTiles_1_1Class.html</anchorfile>
      <anchor>a999f52d151f7263c513cacc50d8557e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, Cesium3DTiles::ClassProperty &gt;</type>
      <name>properties</name>
      <anchorfile>structCesium3DTiles_1_1Class.html</anchorfile>
      <anchor>aebbb186f69044d061c70db95177adbfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Class.html</anchorfile>
      <anchor>a7824be6f4d736efa40f97d435716cb11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Class</name>
    <filename>structCesiumGltf_1_1Class.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Class.html</anchorfile>
      <anchor>a1a6283a21ba7f5c85662275d614f3497</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1Class.html</anchorfile>
      <anchor>afa66f9b35109422330015b1f90478b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesiumGltf_1_1Class.html</anchorfile>
      <anchor>a609a7e27243a8cd93fab199ac6cbe08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumGltf::ClassProperty &gt;</type>
      <name>properties</name>
      <anchorfile>structCesiumGltf_1_1Class.html</anchorfile>
      <anchor>a8e0a6e2b33b3e81a0167177e7cef1c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Class.html</anchorfile>
      <anchor>a59acfaead7f3360331618a004f8ad6d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::ClassProperty</name>
    <filename>structCesium3DTiles_1_1ClassProperty.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">Cesium3DTiles::ClassProperty::ComponentType</class>
    <class kind="struct">Cesium3DTiles::ClassProperty::Type</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>a78eb7d29755bfb59bb1b824eb790fc55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>ae63cdb72807ffb6a7eac615b6c8d3dfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>a63e946f74ceee4c64e9994dbdfde77fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>adf7898d9ab8ba319803f9f3747ae2f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>componentType</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>aafdecc77a74fcec74faf9c879f1b08bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>enumType</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>ac77a68cf7a427a488a2411699b3b2d62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>array</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>aaa2986ea2bcf5d010643def64e3510db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>count</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>acf98c1fb872523a0aaa34a5bba820291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>ad1dc262999e3db1834d529c672eb3bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>offset</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>a51c1a2f6aedd59a6489476fd7daecb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>scale</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>aa01db068b5970644612e9030529deb80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>max</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>abae17159aab104872d266c6c0b168179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>min</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>ac033bcb68660d4612263e00bb3a5b6ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>required</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>a418a0caadb941e03838b772b47c12b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>noData</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>a133fc729f53dfd9d37e62ca398eec34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>defaultProperty</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>ae94c2553e6371f92639ace4c44975c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>semantic</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>a9ecda024b08bf08d9c9eadb4c742abe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty.html</anchorfile>
      <anchor>abd9fd3adde80bf07f1b1a75c9e966116</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ClassProperty</name>
    <filename>structCesiumGltf_1_1ClassProperty.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">CesiumGltf::ClassProperty::ComponentType</class>
    <class kind="struct">CesiumGltf::ClassProperty::Type</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a63fbe68d267652b8b699201ad76a366a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>ada841ec5789495c49f2eaa3e35267389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a943a3098e9d5d3092f466f3e8ccb1f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>aa5500e1266c61d5b58b3b90c0d3e70e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>componentType</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a507fc4c79169b704fba2a93c8bb1d94a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>enumType</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>ab351174e42ac89b612bf51e58a6e0b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>array</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a82aeb6136bb0dbd54a19ec3ed793230c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>count</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a67eabc7fa295c0e0bae7a58cf22e4b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a19bc6b79e35acd44773741ed864cf477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>offset</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a8754aaca111721a89d87d4993bb10bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>scale</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a7a7041da66bc5469131a97aaf6b599cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>max</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>aecc406993f0bebd82ef1eb77981d3189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>min</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>aae86588462e5c3b6429708f57accf338</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>required</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>aaef303a5258bcb9bce1319747f5febb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>noData</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a9e1d1797a9bc626fdc125d4a6d29ee30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>defaultProperty</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>ae9eda0d1f4e22b18b4f7fa63614305ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>semantic</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a11c2857c8d5e1889325b5a659ff213a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty.html</anchorfile>
      <anchor>a9491b0ea0e2590a062dae2d11c63a772</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::ClassPropertyReader</name>
    <filename>classCesium3DTilesReader_1_1ClassPropertyReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ClassPropertyReader</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>adc067ef1b4926bc01538995625906762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>a3b737af08e4fd3c34bd411b56afc6169</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>ada4c4c8e80e090e22340e51330a2cec6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::ClassProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>abce355155b69021dc3a7809214e6b91f</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::ClassProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>a8bcdea375a3591e27b4dc95e7dfb2134</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::ClassProperty &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>a81abee155257469095af3eb0cb76de1e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ClassPropertyReader</name>
    <filename>classCesiumGltfReader_1_1ClassPropertyReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ClassPropertyReader</name>
      <anchorfile>classCesiumGltfReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>a013d4ec785371dc5dfbaf2600c29efbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>aec20a5f31ff1d83a833c50242dbff707</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>a1da5deadf9aa41a7b90dd306855eef65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ClassProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>a91a9ccc0400e9375ec187ec16328e015</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ClassProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>aa8098444f570c460c13b989b8d3036a3</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ClassProperty &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ClassPropertyReader.html</anchorfile>
      <anchor>aedf70f9902f3c2798932ab03e80fd69c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::ClassReader</name>
    <filename>classCesium3DTilesReader_1_1ClassReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ClassReader</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassReader.html</anchorfile>
      <anchor>a5bb28be8a3160129aef3147ca881a09c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassReader.html</anchorfile>
      <anchor>a46545f968cc3d4a99a95a3f0f4aeeea1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassReader.html</anchorfile>
      <anchor>a9fdda3aac641ee3d4e60e6a185a4851a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Class &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassReader.html</anchorfile>
      <anchor>acfce647a3a9725b7fe4ba188baf3b1f3</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Class &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassReader.html</anchorfile>
      <anchor>a31d7ab2b8e728d5c55fd422d87a8e449</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Class &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassReader.html</anchorfile>
      <anchor>a028a4fee70a09213ffbef3ee796a2a20</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ClassReader</name>
    <filename>classCesiumGltfReader_1_1ClassReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ClassReader</name>
      <anchorfile>classCesiumGltfReader_1_1ClassReader.html</anchorfile>
      <anchor>a66f06887ef188880d30a5ced0e24558d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ClassReader.html</anchorfile>
      <anchor>ada371d79e6d1fb8ccf15f27eae6e9822</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ClassReader.html</anchorfile>
      <anchor>a73e2eb111f6cdd95516ac89548d35cb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Class &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ClassReader.html</anchorfile>
      <anchor>afc9e5d7860803c7e59dad91f12a048fd</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Class &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ClassReader.html</anchorfile>
      <anchor>a37f0d66ffbc999595965de8be9fefd43</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Class &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ClassReader.html</anchorfile>
      <anchor>a4affc8cc29deaed5c6ffa6bcf067ff81</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::ClassStatistics</name>
    <filename>structCesium3DTiles_1_1ClassStatistics.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1ClassStatistics.html</anchorfile>
      <anchor>a09cb370d85a7fd5cbf12aa4d3d92cbb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>count</name>
      <anchorfile>structCesium3DTiles_1_1ClassStatistics.html</anchorfile>
      <anchor>a3dde0fd2e1594d5e3f7c0ecd5c472cb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, Cesium3DTiles::PropertyStatistics &gt;</type>
      <name>properties</name>
      <anchorfile>structCesium3DTiles_1_1ClassStatistics.html</anchorfile>
      <anchor>ab10705e6d0ef9fd31a3b017b96b5a557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1ClassStatistics.html</anchorfile>
      <anchor>a95cd4df49e5334a20915dddc2b76b0e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::ClassStatisticsReader</name>
    <filename>classCesium3DTilesReader_1_1ClassStatisticsReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ClassStatisticsReader</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassStatisticsReader.html</anchorfile>
      <anchor>ae7ad667af9f88b5290c235c391b25307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassStatisticsReader.html</anchorfile>
      <anchor>a1f63af83b7319cc863c07cd6642fa6c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassStatisticsReader.html</anchorfile>
      <anchor>aad82f1010e06cbbbf639707111d4f698</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::ClassStatistics &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassStatisticsReader.html</anchorfile>
      <anchor>a8832c907192a71be609324da2a79b82d</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::ClassStatistics &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassStatisticsReader.html</anchorfile>
      <anchor>ad8280df8192765f8cc0e8e31bb92c94d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::ClassStatistics &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ClassStatisticsReader.html</anchorfile>
      <anchor>a87c946cf772ea830f61e6301f3d75488</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::CmptToGltfConverter</name>
    <filename>structCesium3DTilesContent_1_1CmptToGltfConverter.html</filename>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; GltfConverterResult &gt;</type>
      <name>convert</name>
      <anchorfile>structCesium3DTilesContent_1_1CmptToGltfConverter.html</anchorfile>
      <anchor>ae84cad1649c44bec6e019b62540eb88a</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;cmptBinary, const CesiumGltfReader::GltfReaderOptions &amp;options, const AssetFetcher &amp;assetFetcher)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::ClassProperty::ComponentType</name>
    <filename>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT8</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>ab5b0d4d341d1dc3c7afb62a42422a6e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT8</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a5cbc8c650fe826d47aecb9feb3cffef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT16</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>aed9b82c41f541f467b5f7918b775dae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT16</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a968730b80b335737652c15ed88e5e01e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT32</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a765ed84f2af7556b20b36d75635a6510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT32</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a96a441d37b7cb5d07269327d82313385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT64</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a7eeb6d6a5382f7fd21a991ae2a5174d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT64</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a71afb5d394f32ec788a14b717720f020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>FLOAT32</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>ac16be1b070983c6806c8bfde7b3ee7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>FLOAT64</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a3700b2212cf986d0bec0fdd955c46406</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorSparseIndices::ComponentType</name>
    <filename>structCesiumGltf_1_1AccessorSparseIndices_1_1ComponentType.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>UNSIGNED_BYTE</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseIndices_1_1ComponentType.html</anchorfile>
      <anchor>a7f992d147f36352d6938bdb22ceed15a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>UNSIGNED_SHORT</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseIndices_1_1ComponentType.html</anchorfile>
      <anchor>a7a9dd7600033157109ee21f9462fb0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>UNSIGNED_INT</name>
      <anchorfile>structCesiumGltf_1_1AccessorSparseIndices_1_1ComponentType.html</anchorfile>
      <anchor>a5fc72d972fa9d268ba3cb8a264f40b91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorSpec::ComponentType</name>
    <filename>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>BYTE</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>ae6704f2c19a872491a362d7f1bd2ff00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>UNSIGNED_BYTE</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>a8cedd75806a8672ec0418e0b68a615fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>SHORT</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>ab67abd402f27e244fa3663a6effb2dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>UNSIGNED_SHORT</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>a254d739bc6924f214e1375af30735555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>INT</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>a0cc9f75083fc3fbbcb789acd00de4d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>UNSIGNED_INT</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>a7569032aec80aabaa45de8c2efe71492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>INT64</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>ad0b00ad0d4066ce74d5e28ae919a92ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>UNSIGNED_INT64</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>ad0897c582c8ec163290c5139483a9779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>FLOAT</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>ae8027e78bab6b768ad560622ffc4318a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>DOUBLE</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1ComponentType.html</anchorfile>
      <anchor>a0a45e5f1943ef176104cda97b0955359</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ClassProperty::ComponentType</name>
    <filename>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT8</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a2be1fe5485a6353b68ce50e4269024b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT8</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a48809ce0da72697fd85baca4ddda8796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT16</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a13e5f96843d3b7178e9637f79c16be11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT16</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>aacc882dcac48edddde154f0cb0aeb9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT32</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a093f101640cf448c33d33d80e32635e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT32</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a9816d76569df6a45284ffd2f38713b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT64</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a429eace0a5a775b9cf8bd3f06bd02103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT64</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>ad2fdab343a2de6b363dd0f79f775d45b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>FLOAT32</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>a244bb8aa59fd0234da5080a9f94a526a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>FLOAT64</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1ComponentType.html</anchorfile>
      <anchor>aaa451be93e1cd374defa0f34793e44bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumIonClient::Connection</name>
    <filename>classCesiumIonClient_1_1Connection.html</filename>
    <member kind="function">
      <type></type>
      <name>Connection</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a27e85d5ba171a0692e6bd50b003ee951</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::string &amp;accessToken, const CesiumIonClient::ApplicationData &amp;appData, const std::string &amp;apiUrl=&quot;https://api.cesium.com&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const CesiumAsync::AsyncSystem &amp;</type>
      <name>getAsyncSystem</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a817bced7d937e829404d2bf11a7598f6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;</type>
      <name>getAssetAccessor</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>acbe004fd084f54c1aed4ecfdae06da52</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getAccessToken</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>aaf00be0d66cb7a620f87b611a45dc9f2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getApiUrl</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a47960a09ffccb92a6ea2045681e8d0a9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; Profile &gt; &gt;</type>
      <name>me</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a1e7b6011c600ac019f869e7444ea696c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; Defaults &gt; &gt;</type>
      <name>defaults</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a53f8df01dca4fb578c759b029499935e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; Assets &gt; &gt;</type>
      <name>assets</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a75efbb575b91b78d2cf91ecfde932379</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; TokenList &gt; &gt;</type>
      <name>tokens</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a04815d0368bdc69228c4f5a676661670</anchor>
      <arglist>(const ListTokensOptions &amp;options={}) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; Asset &gt; &gt;</type>
      <name>asset</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>af439d21a3918e2e57cffaa26d03f22fa</anchor>
      <arglist>(int64_t assetID) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; Token &gt; &gt;</type>
      <name>token</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>ab8948e1e1cdcdc934eec8aaf2fd655a4</anchor>
      <arglist>(const std::string &amp;tokenID) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; TokenList &gt; &gt;</type>
      <name>nextPage</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a716eab1f1dd095358e254b9fa13fedd7</anchor>
      <arglist>(const Response&lt; TokenList &gt; &amp;currentPage) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; TokenList &gt; &gt;</type>
      <name>previousPage</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>acca9b52d58e1c1ba03ba754f28c2d30f</anchor>
      <arglist>(const Response&lt; TokenList &gt; &amp;currentPage) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; Token &gt; &gt;</type>
      <name>createToken</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>ad76eb079e4560741afb4e27b5fb8bf8d</anchor>
      <arglist>(const std::string &amp;name, const std::vector&lt; std::string &gt; &amp;scopes, const std::optional&lt; std::vector&lt; int64_t &gt; &gt; &amp;assetIds=std::nullopt, const std::optional&lt; std::vector&lt; std::string &gt; &gt; &amp;allowedUrls=std::nullopt) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; Response&lt; NoValue &gt; &gt;</type>
      <name>modifyToken</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a6ba17c1e89426e3d31c88a6e743b33ec</anchor>
      <arglist>(const std::string &amp;tokenID, const std::string &amp;newName, const std::optional&lt; std::vector&lt; int64_t &gt; &gt; &amp;newAssetIDs, const std::vector&lt; std::string &gt; &amp;newScopes, const std::optional&lt; std::vector&lt; std::string &gt; &gt; &amp;newAllowedUrls) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; Connection &gt;</type>
      <name>authorize</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a104835c2d0e4aae95a14dd6519fe0514</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::string &amp;friendlyApplicationName, int64_t clientID, const std::string &amp;redirectPath, const std::vector&lt; std::string &gt; &amp;scopes, std::function&lt; void(const std::string &amp;)&gt; &amp;&amp;openUrlCallback, const CesiumIonClient::ApplicationData &amp;appData, const std::string &amp;ionApiUrl=&quot;https://api.cesium.com/&quot;, const std::string &amp;ionAuthorizeUrl=&quot;https://ion.cesium.com/oauth&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; Response&lt; ApplicationData &gt; &gt;</type>
      <name>appData</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>aeede40c24ae8d1f79e676ae1410242ad</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::string &amp;apiUrl=&quot;https://api.cesium.com&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; std::optional&lt; std::string &gt; &gt;</type>
      <name>getApiUrl</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a0aeeeb27a050a118ba892638d8b4c9b8</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::string &amp;ionUrl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; std::string &gt;</type>
      <name>getIdFromToken</name>
      <anchorfile>classCesiumIonClient_1_1Connection.html</anchorfile>
      <anchor>a9a4390cae099e870c05a1f3615c401ec</anchor>
      <arglist>(const std::string &amp;token)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Availability::Constant</name>
    <filename>structCesium3DTiles_1_1Availability_1_1Constant.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>UNAVAILABLE</name>
      <anchorfile>structCesium3DTiles_1_1Availability_1_1Constant.html</anchorfile>
      <anchor>a0a22eba7bb476e1738e64895eaf7ce1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>AVAILABLE</name>
      <anchorfile>structCesium3DTiles_1_1Availability_1_1Constant.html</anchorfile>
      <anchor>a2de9535cad3bff0fde538f4b593109a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::ConstantAvailability</name>
    <filename>structCesiumGeometry_1_1ConstantAvailability.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>constant</name>
      <anchorfile>structCesiumGeometry_1_1ConstantAvailability.html</anchorfile>
      <anchor>a092c3116c037bbfb037a73fa3e669f26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Content</name>
    <filename>structCesium3DTiles_1_1Content.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Content.html</anchorfile>
      <anchor>a4de16e583d1144d849f221b32718756b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::BoundingVolume &gt;</type>
      <name>boundingVolume</name>
      <anchorfile>structCesium3DTiles_1_1Content.html</anchorfile>
      <anchor>ad68f3fc8671b7322ac068190f19386bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>uri</name>
      <anchorfile>structCesium3DTiles_1_1Content.html</anchorfile>
      <anchor>ad3d676825445f60bf22a1508c7235140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::MetadataEntity &gt;</type>
      <name>metadata</name>
      <anchorfile>structCesium3DTiles_1_1Content.html</anchorfile>
      <anchor>aec83fa6be1b42a29b86cae8b34b54bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>group</name>
      <anchorfile>structCesium3DTiles_1_1Content.html</anchorfile>
      <anchor>a38f1fdf93ad987776e18c2b475b14878</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Content.html</anchorfile>
      <anchor>a5e77dc7d8fed066b7ce4386a0bdea68b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::ContentReader</name>
    <filename>classCesium3DTilesReader_1_1ContentReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ContentReader</name>
      <anchorfile>classCesium3DTilesReader_1_1ContentReader.html</anchorfile>
      <anchor>a35ca540cb9cb4e70ea65b9596a2328e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ContentReader.html</anchorfile>
      <anchor>a7ce6f22954f80afb1c7be0aba26c6765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ContentReader.html</anchorfile>
      <anchor>a9064fb6fce6efd4cbd0df7e07d8fe0aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Content &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ContentReader.html</anchorfile>
      <anchor>ad39221ea5dcae0d0d6e70b8143be5723</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Content &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ContentReader.html</anchorfile>
      <anchor>a99c8ab5357bfa1776c39aa168e02da0d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Content &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ContentReader.html</anchorfile>
      <anchor>af5048e112a33bf0a08644995088871d8</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::CountFromAccessor</name>
    <filename>structCesiumGltf_1_1CountFromAccessor.html</filename>
    <member kind="function">
      <type>int64_t</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1CountFromAccessor.html</anchorfile>
      <anchor>ad18105c88159aea3fc87b2f75e77b719</anchor>
      <arglist>(std::monostate)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1CountFromAccessor.html</anchorfile>
      <anchor>ad01dfa5720c0c2aa5c93a90184e9b586</anchor>
      <arglist>(const AccessorView&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumUtility::Credit</name>
    <filename>structCesiumUtility_1_1Credit.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structCesiumUtility_1_1Credit.html</anchorfile>
      <anchor>a00a202b211bcc7446f71d4a4d8d6082d</anchor>
      <arglist>(const Credit &amp;rhs) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::CreditSystem</name>
    <filename>classCesiumUtility_1_1CreditSystem.html</filename>
    <member kind="function">
      <type>Credit</type>
      <name>createCredit</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>a3d85fa18156195eff97004ae48576189</anchor>
      <arglist>(std::string &amp;&amp;html, bool showOnScreen=false)</arglist>
    </member>
    <member kind="function">
      <type>Credit</type>
      <name>createCredit</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>ad558d95055c4a2299c022033f8685005</anchor>
      <arglist>(const std::string &amp;html, bool showOnScreen=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldBeShownOnScreen</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>a06d101a63f98fb4d340f59bdd04d717c</anchor>
      <arglist>(Credit credit) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowOnScreen</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>a7a0f61af6e6363d8d3614942cae59fbd</anchor>
      <arglist>(Credit credit, bool showOnScreen) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getHtml</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>af7a7f2d4741e6e622d82de346fc1958d</anchor>
      <arglist>(Credit credit) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCreditToFrame</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>a65a29a6a6f3981f1bbc10d1f72c755c7</anchor>
      <arglist>(Credit credit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startNextFrame</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>a1c7c00761a5de0186818b688bd2b8398</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Credit &gt; &amp;</type>
      <name>getCreditsToShowThisFrame</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>ad86e95fbf560a29b059d2ec29aa44b13</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Credit &gt; &amp;</type>
      <name>getCreditsToNoLongerShowThisFrame</name>
      <anchorfile>classCesiumUtility_1_1CreditSystem.html</anchorfile>
      <anchor>a7d1aef144ac73cc03841e343847db00e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::CullingVolume</name>
    <filename>structCesium3DTilesSelection_1_1CullingVolume.html</filename>
    <member kind="variable">
      <type>CesiumGeometry::Plane</type>
      <name>leftPlane</name>
      <anchorfile>structCesium3DTilesSelection_1_1CullingVolume.html</anchorfile>
      <anchor>ace54cc0e2d9f8f4236d199f49ce00626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeometry::Plane</type>
      <name>rightPlane</name>
      <anchorfile>structCesium3DTilesSelection_1_1CullingVolume.html</anchorfile>
      <anchor>a432be73d9b727327d076d10c63502223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeometry::Plane</type>
      <name>topPlane</name>
      <anchorfile>structCesium3DTilesSelection_1_1CullingVolume.html</anchorfile>
      <anchor>a4b60a0366a9a243baa9919224a14b948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeometry::Plane</type>
      <name>bottomPlane</name>
      <anchorfile>structCesium3DTilesSelection_1_1CullingVolume.html</anchorfile>
      <anchor>afc444751672d73de4963ffe1a347dac9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::DebugColorizeTilesRasterOverlay</name>
    <filename>classCesiumRasterOverlays_1_1DebugColorizeTilesRasterOverlay.html</filename>
    <base>CesiumRasterOverlays::RasterOverlay</base>
    <member kind="function">
      <type></type>
      <name>DebugColorizeTilesRasterOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1DebugColorizeTilesRasterOverlay.html</anchorfile>
      <anchor>ab6e2c66b0ac2ec6ba234d6cdc9909eaa</anchor>
      <arglist>(const std::string &amp;name, const RasterOverlayOptions &amp;overlayOptions=RasterOverlayOptions())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CesiumAsync::Future&lt; CreateTileProviderResult &gt;</type>
      <name>createTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1DebugColorizeTilesRasterOverlay.html</anchorfile>
      <anchor>aea9b333207f5ec89c3ac1b6fa352571e</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumUtility::CreditSystem &gt; &amp;pCreditSystem, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; pOwner) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::DebugTileStateDatabase</name>
    <filename>classCesium3DTilesSelection_1_1DebugTileStateDatabase.html</filename>
    <member kind="function">
      <type></type>
      <name>DebugTileStateDatabase</name>
      <anchorfile>classCesium3DTilesSelection_1_1DebugTileStateDatabase.html</anchorfile>
      <anchor>a35fe039b345b4bc80ee1a2827795eb3d</anchor>
      <arglist>(const std::string &amp;databaseFilename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordAllTileStates</name>
      <anchorfile>classCesium3DTilesSelection_1_1DebugTileStateDatabase.html</anchorfile>
      <anchor>a1ded739d7d5ddcc13e36f9e36d4233fd</anchor>
      <arglist>(int32_t frameNumber, const Tileset &amp;tileset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordTileState</name>
      <anchorfile>classCesium3DTilesSelection_1_1DebugTileStateDatabase.html</anchorfile>
      <anchor>ac69d4e5c46cb284e2b07e061620e5a3f</anchor>
      <arglist>(int32_t frameNumber, const Tile &amp;tile)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::DefaultAssets</name>
    <filename>structCesiumIonClient_1_1DefaultAssets.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>imagery</name>
      <anchorfile>structCesiumIonClient_1_1DefaultAssets.html</anchorfile>
      <anchor>a6c6fde29b066c9213a1d8588d9e12d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>terrain</name>
      <anchorfile>structCesiumIonClient_1_1DefaultAssets.html</anchorfile>
      <anchor>a6e94f8ef0a34e7030c50bedf70bac44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>buildings</name>
      <anchorfile>structCesiumIonClient_1_1DefaultAssets.html</anchorfile>
      <anchor>a2c1ed4a295fbb5c61005fdd85697984b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::Defaults</name>
    <filename>structCesiumIonClient_1_1Defaults.html</filename>
    <member kind="variable">
      <type>DefaultAssets</type>
      <name>defaultAssets</name>
      <anchorfile>structCesiumIonClient_1_1Defaults.html</anchorfile>
      <anchor>a1b6dfd8a0f0b797d386a0ab6031f39ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; QuickAddAsset &gt;</type>
      <name>quickAddAssets</name>
      <anchorfile>structCesiumIonClient_1_1Defaults.html</anchorfile>
      <anchor>a2fa6eda274e3bc08b2f36be2024d2b56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumAsync::DeleteSqliteConnection</name>
    <filename>structCesiumAsync_1_1DeleteSqliteConnection.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structCesiumAsync_1_1DeleteSqliteConnection.html</anchorfile>
      <anchor>ade276a55f087e13bcb188b82747986ed</anchor>
      <arglist>(CESIUM_SQLITE(sqlite3 *) pConnection) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumAsync::DeleteSqliteStatement</name>
    <filename>structCesiumAsync_1_1DeleteSqliteStatement.html</filename>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structCesiumAsync_1_1DeleteSqliteStatement.html</anchorfile>
      <anchor>ad2c484daddb6e82e64f56c42f0ae197e</anchor>
      <arglist>(CESIUM_SQLITE(sqlite3_stmt *) pStatement) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::DictionaryJsonHandler</name>
    <filename>classCesiumJsonReader_1_1DictionaryJsonHandler.html</filename>
    <templarg>typename T</templarg>
    <templarg>typename THandler</templarg>
    <base>CesiumJsonReader::ObjectJsonHandler</base>
    <member kind="function">
      <type></type>
      <name>DictionaryJsonHandler</name>
      <anchorfile>classCesiumJsonReader_1_1DictionaryJsonHandler.html</anchorfile>
      <anchor>aaba3f805bd7b7eeed6b97d56d655b941</anchor>
      <arglist>(Ts &amp;&amp;... args) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1DictionaryJsonHandler.html</anchorfile>
      <anchor>a774e29373b731eca29bc707f16d9ce57</anchor>
      <arglist>(IJsonHandler *pParent, std::unordered_map&lt; std::string, T &gt; *pDictionary)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1DictionaryJsonHandler.html</anchorfile>
      <anchor>a94fe1a4e092a49beb8e34fdc83e2cf96</anchor>
      <arglist>(IJsonHandler *pParent, std::map&lt; std::string, T &gt; *pDictionary)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectKey</name>
      <anchorfile>classCesiumJsonReader_1_1DictionaryJsonHandler.html</anchorfile>
      <anchor>a6988a8d2ad83f8a08a5cb465dc21ba7f</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::DoubleJsonHandler</name>
    <filename>classCesiumJsonReader_1_1DoubleJsonHandler.html</filename>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1DoubleJsonHandler.html</anchorfile>
      <anchor>af4418f1dac27000ef85078a543c8d2b0</anchor>
      <arglist>(IJsonHandler *pParent, double *pDouble)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1DoubleJsonHandler.html</anchorfile>
      <anchor>ac07413b43e0a0db1974c63698796a98c</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1DoubleJsonHandler.html</anchorfile>
      <anchor>a5a865b6eef3007944a3b352f44bc37d1</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1DoubleJsonHandler.html</anchorfile>
      <anchor>a8f9e825afd84bf02e87efc0e9e8061c2</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1DoubleJsonHandler.html</anchorfile>
      <anchor>a4df165f7d47c712e72c18dc754cab029</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1DoubleJsonHandler.html</anchorfile>
      <anchor>afb256ea8a588a873e9f034362c814bb9</anchor>
      <arglist>(double d) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::DoublyLinkedListAdvanced</name>
    <filename>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</filename>
    <templarg>typename T</templarg>
    <templarg>typename TPointerBase</templarg>
    <templarg>DoublyLinkedListPointers&lt; T &gt;TPointerBase::* Pointers</templarg>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a47c5d0ebb06aaeaf177a1ba95db4b570</anchor>
      <arglist>(T &amp;node) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertAfter</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a131e07b0f3ff3114b44ebec920b7c1b5</anchor>
      <arglist>(T &amp;after, T &amp;node) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertBefore</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a30621e713507dda53ffc462bd0804066</anchor>
      <arglist>(T &amp;before, T &amp;node) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertAtHead</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a0bd37b1792fb12dc49ef39e252281c5f</anchor>
      <arglist>(T &amp;node) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertAtTail</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>af1ccecfc6fabd3e168b15e6c904e1a30</anchor>
      <arglist>(T &amp;node) noexcept</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a38961557ba5c2d51671dcf326c3c7d54</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>head</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a7d419bc579b4cfe4ee6e6814c9512e65</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>head</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a208423cd1aa75a7c89a56da969e9de30</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>tail</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>ad41882d8972d2135242ed037c00e39ee</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>tail</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>ab66d5cc8e92dbb5830e08f94c81cc239</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>next</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>ac993c9db52564a32826ad04997ab9acf</anchor>
      <arglist>(T &amp;node) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>next</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a7e1010745229f2e34fcf3e00c8c55512</anchor>
      <arglist>(const T &amp;node) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>next</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a50f0a1328295c30daf4c0ca94f78a581</anchor>
      <arglist>(T *pNode) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>next</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a95d284450ad018f435100857a2f77efa</anchor>
      <arglist>(const T *pNode) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>previous</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a8e215ef9d43c4cc65cc755c7c36fd696</anchor>
      <arglist>(T &amp;node) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>previous</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a7008778c066f16836d7d306ac20f2b9c</anchor>
      <arglist>(const T &amp;node) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>previous</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>afd8c57ab4f974c8b8fd7ae7b8cb88ab3</anchor>
      <arglist>(T *pNode)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>previous</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>a990846d650aae147531469e787678e23</anchor>
      <arglist>(const T *pNode) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListAdvanced.html</anchorfile>
      <anchor>ab713f41a7c323d263b63ac221ed664d1</anchor>
      <arglist>(const T &amp;node) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::DoublyLinkedListPointers</name>
    <filename>classCesiumUtility_1_1DoublyLinkedListPointers.html</filename>
    <templarg>class T</templarg>
    <member kind="function">
      <type></type>
      <name>DoublyLinkedListPointers</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListPointers.html</anchorfile>
      <anchor>a70802732d98a7563108918d46446ea25</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DoublyLinkedListPointers</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListPointers.html</anchorfile>
      <anchor>a408aade7a8d6dd5f58daf2bd02c79be5</anchor>
      <arglist>(DoublyLinkedListPointers &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DoublyLinkedListPointers &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumUtility_1_1DoublyLinkedListPointers.html</anchorfile>
      <anchor>a6fbcb878938c9496ba84ad53c2b02c6b</anchor>
      <arglist>(const DoublyLinkedListPointers &amp;) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::EarthGravitationalModel1996Grid</name>
    <filename>classCesiumGeospatial_1_1EarthGravitationalModel1996Grid.html</filename>
    <member kind="function">
      <type>double</type>
      <name>sampleHeight</name>
      <anchorfile>classCesiumGeospatial_1_1EarthGravitationalModel1996Grid.html</anchorfile>
      <anchor>a772c208afb26828a7d16c51dc6124b26</anchor>
      <arglist>(const Cartographic &amp;position) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; EarthGravitationalModel1996Grid &gt;</type>
      <name>fromBuffer</name>
      <anchorfile>classCesiumGeospatial_1_1EarthGravitationalModel1996Grid.html</anchorfile>
      <anchor>a5fb62a6622cc374f9dacc44bbf7e5372</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;buffer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::Ellipsoid</name>
    <filename>classCesiumGeospatial_1_1Ellipsoid.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Ellipsoid</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>ab0e92543a456d21ff80929e579fcff95</anchor>
      <arglist>(double x, double y, double z) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Ellipsoid</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>adab81975cc6789ecb1aaeab6dab2275f</anchor>
      <arglist>(const glm::dvec3 &amp;radii) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr const glm::dvec3 &amp;</type>
      <name>getRadii</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>a5e70a93eacaf3bec49c406db0c70bebd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>geodeticSurfaceNormal</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>ae9eef155b2ec844cd34635a6a16b223a</anchor>
      <arglist>(const glm::dvec3 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>geodeticSurfaceNormal</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>a92680873fd015318923799c49cae10fa</anchor>
      <arglist>(const Cartographic &amp;cartographic) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>cartographicToCartesian</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>a8099c9c5edccd7f011411c9ba7cd9b52</anchor>
      <arglist>(const Cartographic &amp;cartographic) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Cartographic &gt;</type>
      <name>cartesianToCartographic</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>aa5a24ff55592e69dac2bb4fd98563757</anchor>
      <arglist>(const glm::dvec3 &amp;cartesian) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; glm::dvec3 &gt;</type>
      <name>scaleToGeodeticSurface</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>ae01ce1b71115077dad0b77576fd1b49c</anchor>
      <arglist>(const glm::dvec3 &amp;cartesian) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; glm::dvec3 &gt;</type>
      <name>scaleToGeocentricSurface</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>a3d77c1583433ed42edf887727d36bff6</anchor>
      <arglist>(const glm::dvec3 &amp;cartesian) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>getMaximumRadius</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>ab64ca0396d9d654770646a19c920d5da</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>getMinimumRadius</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>a78a84fc75f1f2a7be8158eb28da787f6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>a9c6bc5829694902e6d114be9ca74c786</anchor>
      <arglist>(const Ellipsoid &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>a9a8476bc51a29404aec292195dcd59b5</anchor>
      <arglist>(const Ellipsoid &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Ellipsoid</type>
      <name>WGS84</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>a0ca7570082e028089ea6e7e2db6aacec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Ellipsoid</type>
      <name>UNIT_SPHERE</name>
      <anchorfile>classCesiumGeospatial_1_1Ellipsoid.html</anchorfile>
      <anchor>ac848fa3db672e105e281bdd406899e11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::EllipsoidTangentPlane</name>
    <filename>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</filename>
    <member kind="function">
      <type></type>
      <name>EllipsoidTangentPlane</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>a8983a32115d6e62ef00df03e710cf4d5</anchor>
      <arglist>(const glm::dvec3 &amp;origin, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EllipsoidTangentPlane</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>a12b70c936b765dbfa79e96c92aa2484b</anchor>
      <arglist>(const glm::dmat4 &amp;eastNorthUpToFixedFrame, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>const Ellipsoid &amp;</type>
      <name>getEllipsoid</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>a4c1150ac021f9cabec5c2f6636face6c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getOrigin</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>a3039a7f5a9220378362f79883ce2e54e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getXAxis</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>ae0a6b9c622f9d50bd2dc7aa7535a895a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getYAxis</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>a7a381b847102b8ddb3fd2dddcda98305</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getZAxis</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>aae402f2045cd890af60fb552d7d37e0d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::Plane &amp;</type>
      <name>getPlane</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>a89b1ad0fdaf9725d6292019abd64dcea</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec2</type>
      <name>projectPointToNearestOnPlane</name>
      <anchorfile>classCesiumGeospatial_1_1EllipsoidTangentPlane.html</anchorfile>
      <anchor>a5da798ab98d445206897454eb7ba196b</anchor>
      <arglist>(const glm::dvec3 &amp;cartesian) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::EllipsoidTilesetLoader</name>
    <filename>classCesium3DTilesSelection_1_1EllipsoidTilesetLoader.html</filename>
    <base>Cesium3DTilesSelection::TilesetContentLoader</base>
    <base>Cesium3DTilesSelection::ITilesetHeightSampler</base>
    <member kind="function">
      <type></type>
      <name>EllipsoidTilesetLoader</name>
      <anchorfile>classCesium3DTilesSelection_1_1EllipsoidTilesetLoader.html</anchorfile>
      <anchor>a91a68bac85a15c0cb8538f274559f246</anchor>
      <arglist>(const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; TileLoadResult &gt;</type>
      <name>loadTileContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1EllipsoidTilesetLoader.html</anchorfile>
      <anchor>ace535ba4d8d0e9100cfa2530eacd84c9</anchor>
      <arglist>(const TileLoadInput &amp;input) override</arglist>
    </member>
    <member kind="function">
      <type>TileChildrenResult</type>
      <name>createTileChildren</name>
      <anchorfile>classCesium3DTilesSelection_1_1EllipsoidTilesetLoader.html</anchorfile>
      <anchor>a881e23c2dcd29bbed428237b6d910f66</anchor>
      <arglist>(const Tile &amp;tile, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) override</arglist>
    </member>
    <member kind="function">
      <type>ITilesetHeightSampler *</type>
      <name>getHeightSampler</name>
      <anchorfile>classCesium3DTilesSelection_1_1EllipsoidTilesetLoader.html</anchorfile>
      <anchor>a92d776dd8b37016017e1c18326c5fe51</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; SampleHeightResult &gt;</type>
      <name>sampleHeights</name>
      <anchorfile>classCesium3DTilesSelection_1_1EllipsoidTilesetLoader.html</anchorfile>
      <anchor>ad44ecb28efcd75156f4d99b82e957ad5</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, std::vector&lt; CesiumGeospatial::Cartographic &gt; &amp;&amp;positions) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Tileset &gt;</type>
      <name>createTileset</name>
      <anchorfile>classCesium3DTilesSelection_1_1EllipsoidTilesetLoader.html</anchorfile>
      <anchor>a4db6444ac04fa7e815a3493d0e14e922</anchor>
      <arglist>(const TilesetExternals &amp;externals, const TilesetOptions &amp;options=TilesetOptions{})</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Enum</name>
    <filename>structCesium3DTiles_1_1Enum.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">Cesium3DTiles::Enum::ValueType</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Enum.html</anchorfile>
      <anchor>aefa2996f006583a58d50e9f8d790f560</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesium3DTiles_1_1Enum.html</anchorfile>
      <anchor>aa24c52d7f12311bcf4ba0f848f7b3d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesium3DTiles_1_1Enum.html</anchorfile>
      <anchor>a92bed88d52d41e0c2e463328c800f7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>valueType</name>
      <anchorfile>structCesium3DTiles_1_1Enum.html</anchorfile>
      <anchor>a2d07cfda402320fa187d13f7074bf0e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::EnumValue &gt;</type>
      <name>values</name>
      <anchorfile>structCesium3DTiles_1_1Enum.html</anchorfile>
      <anchor>a389fd93dd5cdeea233cd0e0a083ba478</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Enum.html</anchorfile>
      <anchor>a2c0e506811dfb130c8d3604babca999f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Enum</name>
    <filename>structCesiumGltf_1_1Enum.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">CesiumGltf::Enum::ValueType</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Enum.html</anchorfile>
      <anchor>a9b11f695a1dae5f0bad2bc4c6eab6603</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1Enum.html</anchorfile>
      <anchor>aa7a79c328779bcf32e15457712d50a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesiumGltf_1_1Enum.html</anchorfile>
      <anchor>ab5c4adf6625b2d4cf947ec68e21664ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>valueType</name>
      <anchorfile>structCesiumGltf_1_1Enum.html</anchorfile>
      <anchor>a3111c6a26fe952606f93f2c976720608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::EnumValue &gt;</type>
      <name>values</name>
      <anchorfile>structCesiumGltf_1_1Enum.html</anchorfile>
      <anchor>a5a5ec14641357b5922c4c77f7775408a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Enum.html</anchorfile>
      <anchor>a02bc8409fd331e7f8db665ff64894d12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::EnumReader</name>
    <filename>classCesium3DTilesReader_1_1EnumReader.html</filename>
    <member kind="function">
      <type></type>
      <name>EnumReader</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumReader.html</anchorfile>
      <anchor>a1cd520ef2a3d213d03ccda961f220cf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumReader.html</anchorfile>
      <anchor>aef6eeaa1324fcd3efbe41a787893951c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumReader.html</anchorfile>
      <anchor>a25c5645b4594aa236f035a0942a61ce2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Enum &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumReader.html</anchorfile>
      <anchor>a9093fba4440814004c3f4c30567a3926</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Enum &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumReader.html</anchorfile>
      <anchor>a80527bed16c2689dabce72aab5be3c71</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Enum &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumReader.html</anchorfile>
      <anchor>a5450c6f2bba7a5c1d1cea6f4b8b44bbd</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::EnumReader</name>
    <filename>classCesiumGltfReader_1_1EnumReader.html</filename>
    <member kind="function">
      <type></type>
      <name>EnumReader</name>
      <anchorfile>classCesiumGltfReader_1_1EnumReader.html</anchorfile>
      <anchor>ae32c30274904e8d248beba4dd7b6f449</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1EnumReader.html</anchorfile>
      <anchor>afd53c107be2cb9626532dc6695083e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1EnumReader.html</anchorfile>
      <anchor>a944cd9d0a33e18030840b66c6c3afa10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Enum &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1EnumReader.html</anchorfile>
      <anchor>aed60f28a6e27abf03cc4de0f2b186b72</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Enum &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1EnumReader.html</anchorfile>
      <anchor>a096e70bd246e2783fa62b8cd404d2edd</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Enum &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1EnumReader.html</anchorfile>
      <anchor>ae584e5ce6713d8048e02e1529c8eb73d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::EnumValue</name>
    <filename>structCesium3DTiles_1_1EnumValue.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1EnumValue.html</anchorfile>
      <anchor>a4c066ca771fc1d3a829319acfc009dea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesium3DTiles_1_1EnumValue.html</anchorfile>
      <anchor>aae6738adeeb2e5782206b65bc239da61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesium3DTiles_1_1EnumValue.html</anchorfile>
      <anchor>aa5abd6e39c19676893205d1f1844b2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>value</name>
      <anchorfile>structCesium3DTiles_1_1EnumValue.html</anchorfile>
      <anchor>a19d65178baf60707d4b6588cde9a8ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1EnumValue.html</anchorfile>
      <anchor>a02583ced3fe903926e638277bb2a6e7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::EnumValue</name>
    <filename>structCesiumGltf_1_1EnumValue.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1EnumValue.html</anchorfile>
      <anchor>a2d5d1512a9fbdd5c33e6c36fc64364ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1EnumValue.html</anchorfile>
      <anchor>a6bab9c111daeaefee974031ea3a06131</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesiumGltf_1_1EnumValue.html</anchorfile>
      <anchor>a1b4ad7527aec2fe619f9c2b2adef3cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1EnumValue.html</anchorfile>
      <anchor>aac7ca4a2620d51a1fb7300fd9524a346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1EnumValue.html</anchorfile>
      <anchor>a1564099ace5240c77857cc8546d087d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::EnumValueReader</name>
    <filename>classCesium3DTilesReader_1_1EnumValueReader.html</filename>
    <member kind="function">
      <type></type>
      <name>EnumValueReader</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumValueReader.html</anchorfile>
      <anchor>a3c58296f2d0779da08b55c8316d36ffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumValueReader.html</anchorfile>
      <anchor>a346a5feaeac664d6c2248e5f619aa43b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumValueReader.html</anchorfile>
      <anchor>a20d04ab41a487bb7763188dd0ef48392</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::EnumValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumValueReader.html</anchorfile>
      <anchor>a8ef70a2a865a49a706e7091f5b4ed8a1</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::EnumValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumValueReader.html</anchorfile>
      <anchor>aeb1eb416468f79b601ce68780e70bc43</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::EnumValue &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1EnumValueReader.html</anchorfile>
      <anchor>a09705a2364ad9151b4cd9ab818fcc3c9</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::EnumValueReader</name>
    <filename>classCesiumGltfReader_1_1EnumValueReader.html</filename>
    <member kind="function">
      <type></type>
      <name>EnumValueReader</name>
      <anchorfile>classCesiumGltfReader_1_1EnumValueReader.html</anchorfile>
      <anchor>aa815acece71c50a1334d5d0b449241b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1EnumValueReader.html</anchorfile>
      <anchor>abf6f5251df329d32d13d32aea28f08e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1EnumValueReader.html</anchorfile>
      <anchor>a1fd0c154ce9a8d881883670eb28ba0f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::EnumValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1EnumValueReader.html</anchorfile>
      <anchor>a9421fe28ec05335f35dddcc33d631521</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::EnumValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1EnumValueReader.html</anchorfile>
      <anchor>a7cb0c0680da8216fa0893e054db1e9e9</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::EnumValue &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1EnumValueReader.html</anchorfile>
      <anchor>ad17c73e5fd65a1b1d8b49ce753452e79</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumUtility::ErrorList</name>
    <filename>structCesiumUtility_1_1ErrorList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>afa1ac6dff850c5cfd1e21f58620023e2</anchor>
      <arglist>(const ErrorList &amp;errorList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a8f06cda70416bb803936ef8e441d13b7</anchor>
      <arglist>(ErrorList &amp;&amp;errorList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emplaceError</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>ab4aee4c2f6669ecf0a064436464add47</anchor>
      <arglist>(ErrorStr &amp;&amp;error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emplaceWarning</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a33af559299828ed50018874bf3a3961d</anchor>
      <arglist>(WarningStr &amp;&amp;warning)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasErrors</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a1ed5c89761a5e1dcbd51c5a12abdeb21</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logError</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>ab1a641081b1d8f7e11b083e3c2bcdb7b</anchor>
      <arglist>(const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, PromptStr &amp;&amp;prompt) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logWarning</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a8dd62e6ba39fc13710fde7b8e78f0786</anchor>
      <arglist>(const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, PromptStr &amp;&amp;prompt) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a75101afb4609f7872f20d4856514c50e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ErrorList</type>
      <name>error</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a33938b54aaf0b519c7bf7fad24a72785</anchor>
      <arglist>(std::string errorMessage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ErrorList</type>
      <name>warning</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a80e179fa40ccf1fdbeb527f9db5e037a</anchor>
      <arglist>(std::string warningMessage)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a22d94a6ed7dc30258e47ca45f61a939f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesiumUtility_1_1ErrorList.html</anchorfile>
      <anchor>a8effd40f0094fea6be331dec589ee2cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumUtility::ExtensibleObject</name>
    <filename>structCesiumUtility_1_1ExtensibleObject.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>hasExtension</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>ae8a23633e243fb244bb7cf70cc77d4bc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getExtension</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>a3ec522cd12197ed51bdab41464b7e380</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getExtension</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>a5543ab637a26a414243500a5be54f99a</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const JsonValue *</type>
      <name>getGenericExtension</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>a9673af03070412821238d388a4f00e23</anchor>
      <arglist>(const std::string &amp;extensionName) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>JsonValue *</type>
      <name>getGenericExtension</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>ac64c83ee7449261804cd73a0565d2ad7</anchor>
      <arglist>(const std::string &amp;extensionName) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>addExtension</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>aad6c9f5497220d515eb94448eeb49918</anchor>
      <arglist>(ConstructorArgumentTypes &amp;&amp;... constructorArguments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeExtension</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>ad62313a6cfceac51d613f549a9f2966c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>a652b115ef8c20da0a7f93c824e9478e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::any &gt;</type>
      <name>extensions</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>af3e9bf3ed3ac567c5458148cf6716c01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JsonValue::Object</type>
      <name>extras</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>a522604c174eb0e1a47c472bc8107001a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JsonValue::Object</type>
      <name>unknownProperties</name>
      <anchorfile>structCesiumUtility_1_1ExtensibleObject.html</anchorfile>
      <anchor>a58523c003491479667290ad3cffc26c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::ExtensibleObjectJsonHandler</name>
    <filename>classCesiumJsonReader_1_1ExtensibleObjectJsonHandler.html</filename>
    <base>CesiumJsonReader::ObjectJsonHandler</base>
    <member kind="function">
      <type></type>
      <name>ExtensibleObjectJsonHandler</name>
      <anchorfile>classCesiumJsonReader_1_1ExtensibleObjectJsonHandler.html</anchorfile>
      <anchor>aa932eac9aff675b2b8d1950bfba6e09d</anchor>
      <arglist>(const JsonReaderOptions &amp;context) noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1ExtensibleObjectJsonHandler.html</anchorfile>
      <anchor>aa6cdf0b2899e3aaf8d65b76b5d91afcf</anchor>
      <arglist>(IJsonHandler *pParent, CesiumUtility::ExtensibleObject *pObject)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IJsonHandler *</type>
      <name>readObjectKeyExtensibleObject</name>
      <anchorfile>classCesiumJsonReader_1_1ExtensibleObjectJsonHandler.html</anchorfile>
      <anchor>a21d5b61b98db164fa9baa770a3eeec67</anchor>
      <arglist>(const std::string &amp;objectType, const std::string_view &amp;str, CesiumUtility::ExtensibleObject &amp;o)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Extension3dTilesBoundingVolumeS2</name>
    <filename>structCesium3DTiles_1_1Extension3dTilesBoundingVolumeS2.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Extension3dTilesBoundingVolumeS2.html</anchorfile>
      <anchor>a201839f81942499d9b39411ae904c85c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>token</name>
      <anchorfile>structCesium3DTiles_1_1Extension3dTilesBoundingVolumeS2.html</anchorfile>
      <anchor>a84ebce13a832103ffe71cdbd0dda4f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimumHeight</name>
      <anchorfile>structCesium3DTiles_1_1Extension3dTilesBoundingVolumeS2.html</anchorfile>
      <anchor>af8ab664c4f203ce14a708c202ed7808a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumHeight</name>
      <anchorfile>structCesium3DTiles_1_1Extension3dTilesBoundingVolumeS2.html</anchorfile>
      <anchor>a8f8d92801ba797537b5410ce38c8743f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Extension3dTilesBoundingVolumeS2.html</anchorfile>
      <anchor>ac8c668310169c24878ece9865775273d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesium3DTiles_1_1Extension3dTilesBoundingVolumeS2.html</anchorfile>
      <anchor>a075d8e3c0d18a7b97eef60656a3db34d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::Extension3dTilesBoundingVolumeS2Reader</name>
    <filename>classCesium3DTilesReader_1_1Extension3dTilesBoundingVolumeS2Reader.html</filename>
    <member kind="function">
      <type></type>
      <name>Extension3dTilesBoundingVolumeS2Reader</name>
      <anchorfile>classCesium3DTilesReader_1_1Extension3dTilesBoundingVolumeS2Reader.html</anchorfile>
      <anchor>a7f851da5eac35b8dfb9c545dcaec10e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1Extension3dTilesBoundingVolumeS2Reader.html</anchorfile>
      <anchor>af2918fbd56c226c4fe6031ac5774f854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1Extension3dTilesBoundingVolumeS2Reader.html</anchorfile>
      <anchor>a57f2f9724c904d0439d6d21742f14322</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Extension3dTilesBoundingVolumeS2 &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1Extension3dTilesBoundingVolumeS2Reader.html</anchorfile>
      <anchor>a7a4ac2a0e6b50321a55429c016035c63</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Extension3dTilesBoundingVolumeS2 &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1Extension3dTilesBoundingVolumeS2Reader.html</anchorfile>
      <anchor>ad6235600f9c18845dfa011021cf36921</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Extension3dTilesBoundingVolumeS2 &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1Extension3dTilesBoundingVolumeS2Reader.html</anchorfile>
      <anchor>ae2ee2d1ee49eac4bebd92cc46df9fca6</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionBufferExtMeshoptCompression</name>
    <filename>structCesiumGltf_1_1ExtensionBufferExtMeshoptCompression.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferExtMeshoptCompression.html</anchorfile>
      <anchor>a5550d1844a68637db6354300dbab0ac2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fallback</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferExtMeshoptCompression.html</anchorfile>
      <anchor>ac42e394f6a424d077dd763c7c5a1e898</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferExtMeshoptCompression.html</anchorfile>
      <anchor>a546d50b9fd51f1ecc3aa82a5f7c5c82a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferExtMeshoptCompression.html</anchorfile>
      <anchor>a8d6e7c5174db2ea8b1e7cfb25da31d1f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionBufferExtMeshoptCompressionReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionBufferExtMeshoptCompressionReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionBufferExtMeshoptCompressionReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a1466504392a83b8309e5297b428c4a59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a936bb178cd78795f71fae4fef0c5d677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a4e1a3e1897fff47d184092f220a4a4a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionBufferExtMeshoptCompression &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferExtMeshoptCompressionReader.html</anchorfile>
      <anchor>af75e1e22afb4af859b4616e34da7ac50</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionBufferExtMeshoptCompression &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferExtMeshoptCompressionReader.html</anchorfile>
      <anchor>aa51765eec55376857b36ffcb6353ac36</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionBufferExtMeshoptCompression &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a391f1061948f0541cec2df74c5e8637b</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionBufferViewExtMeshoptCompression</name>
    <filename>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">CesiumGltf::ExtensionBufferViewExtMeshoptCompression::Filter</class>
    <class kind="struct">CesiumGltf::ExtensionBufferViewExtMeshoptCompression::Mode</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>a6c2889ad2e4a44c9a0d3742a79b845b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>buffer</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>a6600f170254ce0fb7ec0ab2f16caea87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteOffset</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>a7a93192149c4873680228bcbb02e3274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteLength</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>a4b792a761d95b39bfccfd2fd3bd49fa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>byteStride</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>adb598c518f9913148d3b4dc465b6fb9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>count</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>ad35f7176dcc22caf3e269132cd87647c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mode</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>a564ec9600de0bb79b26429d55afb2934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>filter</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>a231c47ad95274a726f3855cba21352a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>a1afd826f92ebf6f4998bb253cfd04d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression.html</anchorfile>
      <anchor>a9bc7d4214d492c57f4efbdd0838473aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionBufferViewExtMeshoptCompressionReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionBufferViewExtMeshoptCompressionReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionBufferViewExtMeshoptCompressionReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferViewExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a30b2481bdf9948cc6ca96c6fe973808e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferViewExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a5efcf7cccdb739b32f67b60d10426f9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferViewExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a2eaa6ffe977d8632f411ea3d71260e3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionBufferViewExtMeshoptCompression &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferViewExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a318f8b4bcb418f56b1afa90aa3fbd4d1</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionBufferViewExtMeshoptCompression &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferViewExtMeshoptCompressionReader.html</anchorfile>
      <anchor>ac75e9ea6ed71ae59639785503fa4fbc9</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionBufferViewExtMeshoptCompression &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionBufferViewExtMeshoptCompressionReader.html</anchorfile>
      <anchor>a127033020da05069205af786ccc25ba8</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionCesiumPrimitiveOutline</name>
    <filename>structCesiumGltf_1_1ExtensionCesiumPrimitiveOutline.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumPrimitiveOutline.html</anchorfile>
      <anchor>a99018c6c81e724002cb7be6753eca4fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>indices</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumPrimitiveOutline.html</anchorfile>
      <anchor>a39f0356e131072df1c00661b9918851b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumPrimitiveOutline.html</anchorfile>
      <anchor>a4d1b1f21e58e10e42e77397ecf1b0239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumPrimitiveOutline.html</anchorfile>
      <anchor>a15d43d8943fd58a1d087b9f1fe1acdb0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionCesiumPrimitiveOutlineReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionCesiumPrimitiveOutlineReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionCesiumPrimitiveOutlineReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumPrimitiveOutlineReader.html</anchorfile>
      <anchor>abd91f00b54bab8384df5787c2fa8cfc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumPrimitiveOutlineReader.html</anchorfile>
      <anchor>ac2f64ac505089e3f5987ea8730c2e988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumPrimitiveOutlineReader.html</anchorfile>
      <anchor>a2b0e8376d2887956c174862f3dfc188a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionCesiumPrimitiveOutline &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumPrimitiveOutlineReader.html</anchorfile>
      <anchor>a4fa48c478a69290ef0178442b1531265</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionCesiumPrimitiveOutline &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumPrimitiveOutlineReader.html</anchorfile>
      <anchor>a772ece3a65775c46b19dd614969c5c61</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionCesiumPrimitiveOutline &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumPrimitiveOutlineReader.html</anchorfile>
      <anchor>a5c05c4688dd03a16c1ef08bd57f3512b</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionCesiumRTC</name>
    <filename>structCesiumGltf_1_1ExtensionCesiumRTC.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumRTC.html</anchorfile>
      <anchor>aee6f1d0135859c8e4fbff016e5b9b6d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>center</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumRTC.html</anchorfile>
      <anchor>ae1c2ec50484a5636f9fa3bc722c6398b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumRTC.html</anchorfile>
      <anchor>a70173a9484f66d9691a3a9b2d29422a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumRTC.html</anchorfile>
      <anchor>a5fc63a537b5f4b4089bace029a0a3e42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionCesiumRTCReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionCesiumRTCReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionCesiumRTCReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumRTCReader.html</anchorfile>
      <anchor>a2b105ef855f6fbb317c16d25d9dc7588</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumRTCReader.html</anchorfile>
      <anchor>aec1bebe947a3aaa9f629965d48fa14e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumRTCReader.html</anchorfile>
      <anchor>a83b103954c495fb62592c8746990428b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionCesiumRTC &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumRTCReader.html</anchorfile>
      <anchor>ad642c507788f8fe64d9115af43c66b79</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionCesiumRTC &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumRTCReader.html</anchorfile>
      <anchor>a2671eeabd0e0c5553b4983b5c3e76152</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionCesiumRTC &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumRTCReader.html</anchorfile>
      <anchor>ae9833a056e4b7afd9bcae09376616f9f</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionCesiumTileEdges</name>
    <filename>structCesiumGltf_1_1ExtensionCesiumTileEdges.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumTileEdges.html</anchorfile>
      <anchor>a78caba197fc940274f95cabac38640e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>left</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumTileEdges.html</anchorfile>
      <anchor>a1df66eab38792f8f303369052c93583c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bottom</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumTileEdges.html</anchorfile>
      <anchor>ad93299efb8acfbbbc7f0e6d045683234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>right</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumTileEdges.html</anchorfile>
      <anchor>a9d329795b747c06fb22eecc9d6127060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>top</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumTileEdges.html</anchorfile>
      <anchor>ab770983bec2ecfb3df1a46c6066f7a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumTileEdges.html</anchorfile>
      <anchor>a566232d3eaa58aa055490a9b83f94f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionCesiumTileEdges.html</anchorfile>
      <anchor>acec423710dc31af8350ee2b243ff6760</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionCesiumTileEdgesReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionCesiumTileEdgesReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionCesiumTileEdgesReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumTileEdgesReader.html</anchorfile>
      <anchor>aed1fe83fb6f6c040028d04b8bf8b0fba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumTileEdgesReader.html</anchorfile>
      <anchor>a6c589c52253a905c5da0f2cc12fb0363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumTileEdgesReader.html</anchorfile>
      <anchor>a8d92695eb33aae52a9053014ec1e37b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionCesiumTileEdges &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumTileEdgesReader.html</anchorfile>
      <anchor>ab38b798a8d30b97422eeb60e85a64782</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionCesiumTileEdges &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumTileEdgesReader.html</anchorfile>
      <anchor>a4b2fe357f849c5e42c613e550904bff1</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionCesiumTileEdges &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionCesiumTileEdgesReader.html</anchorfile>
      <anchor>aa4d08377c73a637d891cdf0351397642</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionExtInstanceFeatures</name>
    <filename>structCesiumGltf_1_1ExtensionExtInstanceFeatures.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeatures.html</anchorfile>
      <anchor>aeba5ff918a96cb12cdcebd3cc4e22dd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::ExtensionExtInstanceFeaturesFeatureId &gt;</type>
      <name>featureIds</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeatures.html</anchorfile>
      <anchor>a5260cdfde01c2e128310b96658627ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeatures.html</anchorfile>
      <anchor>a26f5d87be702494fc414141cd4dbe416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeatures.html</anchorfile>
      <anchor>a4face678114219fae9b87a913e9d6696</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionExtInstanceFeaturesFeatureId</name>
    <filename>structCesiumGltf_1_1ExtensionExtInstanceFeaturesFeatureId.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeaturesFeatureId.html</anchorfile>
      <anchor>a343f452a431ddd824603deeb9628bf76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>featureCount</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeaturesFeatureId.html</anchorfile>
      <anchor>ae811faca7cda07f48b359a74c0f37809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>nullFeatureId</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeaturesFeatureId.html</anchorfile>
      <anchor>ada10d11e9e79b4335ad422d624bbd30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>label</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeaturesFeatureId.html</anchorfile>
      <anchor>a4554848d17153533c354078031c7a348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>attribute</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeaturesFeatureId.html</anchorfile>
      <anchor>a98157faadf3b699ec9be4c398a179554</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>propertyTable</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeaturesFeatureId.html</anchorfile>
      <anchor>aef7d92c7f52c8f529afdb8f0570c71cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtInstanceFeaturesFeatureId.html</anchorfile>
      <anchor>ab252164b72e163c6b69c89fc44d2ccfa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionExtInstanceFeaturesFeatureIdReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesFeatureIdReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionExtInstanceFeaturesFeatureIdReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesFeatureIdReader.html</anchorfile>
      <anchor>a6697e103be967d922f2b5057fb4aec8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesFeatureIdReader.html</anchorfile>
      <anchor>a5c46ce06ed3badb8dbd074c8a2601f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesFeatureIdReader.html</anchorfile>
      <anchor>a0cabb50e6a69a5859c602630eaf5c12d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtInstanceFeaturesFeatureId &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesFeatureIdReader.html</anchorfile>
      <anchor>a3c4cf77f4ca987587ce7ca5511dc4324</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtInstanceFeaturesFeatureId &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesFeatureIdReader.html</anchorfile>
      <anchor>a129a5eeac0e855b7f47dc060dcb8c2c5</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionExtInstanceFeaturesFeatureId &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesFeatureIdReader.html</anchorfile>
      <anchor>a053b7ca80df8889651c6bf2c704e4329</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionExtInstanceFeaturesReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionExtInstanceFeaturesReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesReader.html</anchorfile>
      <anchor>ae44a4eedb40182b3df412f677b4ffae8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesReader.html</anchorfile>
      <anchor>aa1c45e12714398e1e1fddd431563c223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesReader.html</anchorfile>
      <anchor>abf59d92b057ab1a10dfffa10406afb35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtInstanceFeatures &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesReader.html</anchorfile>
      <anchor>a645fd1af19e5ae18f491c08965b33490</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtInstanceFeatures &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesReader.html</anchorfile>
      <anchor>aa0ae9ea5ee7c2aea5faac62ec3785762</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionExtInstanceFeatures &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtInstanceFeaturesReader.html</anchorfile>
      <anchor>a48f061832dcd2030b121d9e351c38a17</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionExtMeshFeatures</name>
    <filename>structCesiumGltf_1_1ExtensionExtMeshFeatures.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtMeshFeatures.html</anchorfile>
      <anchor>a3ba105dcbe3aa50dd8f571a9ad8666c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::FeatureId &gt;</type>
      <name>featureIds</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtMeshFeatures.html</anchorfile>
      <anchor>a6e8ffe77cd6961dd29018aad970690b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtMeshFeatures.html</anchorfile>
      <anchor>acdcd2a4b03179d2c890974b0e5f41193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtMeshFeatures.html</anchorfile>
      <anchor>a01170b1d435f72bd8be76fef6b3518ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionExtMeshFeaturesReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionExtMeshFeaturesReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionExtMeshFeaturesReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshFeaturesReader.html</anchorfile>
      <anchor>a17c1bf0f9187138ba412e149b86e6259</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshFeaturesReader.html</anchorfile>
      <anchor>a4112f63b4987c2910f884c0928f8b18c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshFeaturesReader.html</anchorfile>
      <anchor>ab99b6ee30ef22b5b72f598d6ef47f4e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtMeshFeatures &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshFeaturesReader.html</anchorfile>
      <anchor>ae1d0b7e31466b7c9d5e9a89a88ce5bdf</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtMeshFeatures &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshFeaturesReader.html</anchorfile>
      <anchor>ad192e5983cc5c2e3489b31db4b54d59a</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionExtMeshFeatures &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshFeaturesReader.html</anchorfile>
      <anchor>a87a93c250eec685faa98cdc69ec86b99</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionExtMeshGpuInstancing</name>
    <filename>structCesiumGltf_1_1ExtensionExtMeshGpuInstancing.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtMeshGpuInstancing.html</anchorfile>
      <anchor>ab4e4149c2e7558c57c1eb74f2d87d010</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, int32_t &gt;</type>
      <name>attributes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtMeshGpuInstancing.html</anchorfile>
      <anchor>aceeb0aa1148062631c81dc497abe3a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtMeshGpuInstancing.html</anchorfile>
      <anchor>a33350d57d18081d420ea28b18f92ce16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtMeshGpuInstancing.html</anchorfile>
      <anchor>a26ce893849675a3108d4dd832b53effb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionExtMeshGpuInstancingReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionExtMeshGpuInstancingReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionExtMeshGpuInstancingReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshGpuInstancingReader.html</anchorfile>
      <anchor>af9134c4889c039cf44f9d47dbf63fcc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshGpuInstancingReader.html</anchorfile>
      <anchor>a15888aa6e8f9b21d1362ca4fa8a50cef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshGpuInstancingReader.html</anchorfile>
      <anchor>a3f15d59d692b6f97753a34780ab2143d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtMeshGpuInstancing &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshGpuInstancingReader.html</anchorfile>
      <anchor>a976c2e7c5c5a023196c38ecabc5ea28b</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtMeshGpuInstancing &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshGpuInstancingReader.html</anchorfile>
      <anchor>aa736075419b7bcc1e9eced1e13789ea4</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionExtMeshGpuInstancing &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtMeshGpuInstancingReader.html</anchorfile>
      <anchor>a9aa010f8cd8e1b61a73aa3c13e201ab0</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionExtStructuralMetadata</name>
    <filename>structCesiumGltf_1_1ExtensionExtStructuralMetadata.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtStructuralMetadata.html</anchorfile>
      <anchor>ade3a8dbe8927e768e1ded00c143195ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>classProperty</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtStructuralMetadata.html</anchorfile>
      <anchor>a27912500c90d5d1aa3a569a77202d103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumUtility::JsonValue &gt;</type>
      <name>properties</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtStructuralMetadata.html</anchorfile>
      <anchor>a675270f455a3df8d34a783f4d36f3162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtStructuralMetadata.html</anchorfile>
      <anchor>ac66c54850bb9845f97af2bdb9c925bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionExtStructuralMetadata.html</anchorfile>
      <anchor>a65043fb3a83e5afbc00d03b95c24d596</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionExtStructuralMetadataReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionExtStructuralMetadataReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionExtStructuralMetadataReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtStructuralMetadataReader.html</anchorfile>
      <anchor>a29f3569fdb4c1a09b6b736136c910a12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtStructuralMetadataReader.html</anchorfile>
      <anchor>a726fbbc457a2df4c21fa4c002233e9f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtStructuralMetadataReader.html</anchorfile>
      <anchor>ae88053f4fa299a76da941f692647ea11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtStructuralMetadata &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtStructuralMetadataReader.html</anchorfile>
      <anchor>ad65bb40e358be1df34982c1bb828b094</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionExtStructuralMetadata &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtStructuralMetadataReader.html</anchorfile>
      <anchor>aa15bf1b4f4788a78c6058e4d2f904e1d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionExtStructuralMetadata &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionExtStructuralMetadataReader.html</anchorfile>
      <anchor>a21fabfc728cb175395a40020ee439eed</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionKhrDracoMeshCompression</name>
    <filename>structCesiumGltf_1_1ExtensionKhrDracoMeshCompression.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrDracoMeshCompression.html</anchorfile>
      <anchor>a7a025ce23f460ee1b165191f3837e9e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bufferView</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrDracoMeshCompression.html</anchorfile>
      <anchor>a72c513ce653b627fff51928325540dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, int32_t &gt;</type>
      <name>attributes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrDracoMeshCompression.html</anchorfile>
      <anchor>addeed2caeb51c4537a806fb4ce06dc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrDracoMeshCompression.html</anchorfile>
      <anchor>a93436da2842dd4a7c80575c2c449c119</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrDracoMeshCompression.html</anchorfile>
      <anchor>a0db7b3bc9ee90fd7c6eb3d94c0c7d120</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionKhrDracoMeshCompressionReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionKhrDracoMeshCompressionReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionKhrDracoMeshCompressionReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrDracoMeshCompressionReader.html</anchorfile>
      <anchor>aebd134c459e5a2e420cc3d6008779d1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrDracoMeshCompressionReader.html</anchorfile>
      <anchor>a8f91cf955fc5e37103bbc34c46066e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrDracoMeshCompressionReader.html</anchorfile>
      <anchor>a3bcee39901262d302ea1cadc207ea37a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionKhrDracoMeshCompression &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrDracoMeshCompressionReader.html</anchorfile>
      <anchor>aacf4875dc0e74d2b16322fb83479e3c9</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionKhrDracoMeshCompression &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrDracoMeshCompressionReader.html</anchorfile>
      <anchor>a76e2f61d3598275ce3aa0a11fb15b86e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionKhrDracoMeshCompression &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrDracoMeshCompressionReader.html</anchorfile>
      <anchor>a943099cc0cb3d10e6126c4feaf60debe</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionKhrMaterialsUnlit</name>
    <filename>structCesiumGltf_1_1ExtensionKhrMaterialsUnlit.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrMaterialsUnlit.html</anchorfile>
      <anchor>ad24d5f7bb9d3e277f1a02fec792dfc28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrMaterialsUnlit.html</anchorfile>
      <anchor>a8cfb63b9d629ec9c42360b52f91f40ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrMaterialsUnlit.html</anchorfile>
      <anchor>a2ff9405078991d78d3fda967bd145a05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionKhrMaterialsUnlitReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionKhrMaterialsUnlitReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionKhrMaterialsUnlitReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrMaterialsUnlitReader.html</anchorfile>
      <anchor>a23d290b2a5952ab4b8c5d81de986f56e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrMaterialsUnlitReader.html</anchorfile>
      <anchor>a23b235fedafe03e0b5dcc50be40ebba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrMaterialsUnlitReader.html</anchorfile>
      <anchor>a91cb47f2fbaf4ca5f7725676ec2a0020</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionKhrMaterialsUnlit &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrMaterialsUnlitReader.html</anchorfile>
      <anchor>ae9d13a6d4d62dcd30733e06863a98444</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionKhrMaterialsUnlit &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrMaterialsUnlitReader.html</anchorfile>
      <anchor>ae3893b6c7b6e695ffacba631efa24995</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionKhrMaterialsUnlit &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrMaterialsUnlitReader.html</anchorfile>
      <anchor>ad9c20deaa95147fa386de22444c9a85b</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionKhrTextureBasisu</name>
    <filename>structCesiumGltf_1_1ExtensionKhrTextureBasisu.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureBasisu.html</anchorfile>
      <anchor>ae8b24d237a21e3556bbed6b4b5ce1527</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>source</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureBasisu.html</anchorfile>
      <anchor>a99d6b72de24768de31487a64fbaf7e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureBasisu.html</anchorfile>
      <anchor>a522207ee0f9be7be88816d8aadb3b3c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureBasisu.html</anchorfile>
      <anchor>ac329561592be813f09ff39eaeb520eb1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionKhrTextureBasisuReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionKhrTextureBasisuReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionKhrTextureBasisuReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureBasisuReader.html</anchorfile>
      <anchor>a469c11b253063c5b01aa8cd4e23c76bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureBasisuReader.html</anchorfile>
      <anchor>a45d376a22e6231dc0ee00ea38ec03d4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureBasisuReader.html</anchorfile>
      <anchor>af2c3438f202cd39821bd8c91d3673cc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionKhrTextureBasisu &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureBasisuReader.html</anchorfile>
      <anchor>af1cb7993906ba3daef9f6db81683a47f</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionKhrTextureBasisu &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureBasisuReader.html</anchorfile>
      <anchor>a57c59a51ccaec5e7d92da1f1a573b153</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionKhrTextureBasisu &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureBasisuReader.html</anchorfile>
      <anchor>a7a59b4420560f9c5f97213326afea266</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionKhrTextureTransform</name>
    <filename>structCesiumGltf_1_1ExtensionKhrTextureTransform.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureTransform.html</anchorfile>
      <anchor>a2b102c689efd7f472fc29a3ab9dc4bd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>offset</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureTransform.html</anchorfile>
      <anchor>ae86eb8768b5520d421cc2d09a5d918c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rotation</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureTransform.html</anchorfile>
      <anchor>a86a2e10684a6b143bbb333878e414e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>scale</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureTransform.html</anchorfile>
      <anchor>acc936126cc1c8d28998f73021c9db215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>texCoord</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureTransform.html</anchorfile>
      <anchor>aa083d98a88520d5ae11c786b301f4006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureTransform.html</anchorfile>
      <anchor>a1c51ee569d99f45bb2403417d784a6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionKhrTextureTransform.html</anchorfile>
      <anchor>a879ef5b9453c07a51c85168d08fab8cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionKhrTextureTransformReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionKhrTextureTransformReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionKhrTextureTransformReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureTransformReader.html</anchorfile>
      <anchor>a8b063db8f36d140606e9967810a5957e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureTransformReader.html</anchorfile>
      <anchor>a9537e41a42997f0e560363fa82dc71d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureTransformReader.html</anchorfile>
      <anchor>a6783f518db893590eb24b17ec1635e67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionKhrTextureTransform &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureTransformReader.html</anchorfile>
      <anchor>a87e5044cb5efdcdecda4c86fe26cfb94</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionKhrTextureTransform &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureTransformReader.html</anchorfile>
      <anchor>a4005e08cff63b219cabf96145a42ad8d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionKhrTextureTransform &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionKhrTextureTransformReader.html</anchorfile>
      <anchor>a07a13f84ce800dc43f01439dfb533028</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionMeshPrimitiveExtStructuralMetadata</name>
    <filename>structCesiumGltf_1_1ExtensionMeshPrimitiveExtStructuralMetadata.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveExtStructuralMetadata.html</anchorfile>
      <anchor>ac0090e4effb1036a8dc24fd9f6886be4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int32_t &gt;</type>
      <name>propertyTextures</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveExtStructuralMetadata.html</anchorfile>
      <anchor>a88d7d364e82d70972b69115656fc49fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int32_t &gt;</type>
      <name>propertyAttributes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveExtStructuralMetadata.html</anchorfile>
      <anchor>a4f4cedc1117db5ac623cb0b7cca05d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveExtStructuralMetadata.html</anchorfile>
      <anchor>a976d15505a5d8230981d87552d38ff26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveExtStructuralMetadata.html</anchorfile>
      <anchor>a810ed75108c94d5f58ecea42709e4ea6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionMeshPrimitiveExtStructuralMetadataReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionMeshPrimitiveExtStructuralMetadataReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionMeshPrimitiveExtStructuralMetadataReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveExtStructuralMetadataReader.html</anchorfile>
      <anchor>ac88d5581252e74c8fd648a4abf5c4404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveExtStructuralMetadataReader.html</anchorfile>
      <anchor>ae5405321156316c5c8a8a1ea7fee689d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveExtStructuralMetadataReader.html</anchorfile>
      <anchor>a24cc328351e630ffbef6424b0ddb7a82</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionMeshPrimitiveExtStructuralMetadata &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveExtStructuralMetadataReader.html</anchorfile>
      <anchor>aa04fb0be8089117d88763ba6b77763dc</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionMeshPrimitiveExtStructuralMetadata &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveExtStructuralMetadataReader.html</anchorfile>
      <anchor>ad4373285a776ad4ece45c01a92432b92</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionMeshPrimitiveExtStructuralMetadata &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveExtStructuralMetadataReader.html</anchorfile>
      <anchor>a64747f8ff16cacb0fdfa583ec3e18e5f</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariants</name>
    <filename>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariants.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariants.html</anchorfile>
      <anchor>aa9eee8890d1acb72c4bfefc4c5defbfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue &gt;</type>
      <name>mappings</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariants.html</anchorfile>
      <anchor>a0584b5c2d4f7102195034c71066ba5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariants.html</anchorfile>
      <anchor>a8917a0db64ca58fb0f603c6b8674fe35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariants.html</anchorfile>
      <anchor>a1203ade1b2abe878f147ac8ccce29ac6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue</name>
    <filename>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue.html</anchorfile>
      <anchor>af03a42aefe12076933219a564f1613eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int32_t &gt;</type>
      <name>variants</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue.html</anchorfile>
      <anchor>ac3a0aa5557a804b0cd031e5ca0b2266e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>material</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue.html</anchorfile>
      <anchor>aab71c0f0126de6846d9bb950078ac0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue.html</anchorfile>
      <anchor>ac96ae151da7ac8e5821749bb281b2880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue.html</anchorfile>
      <anchor>a8602502bb52ceb0a899a2463e47c1c90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader.html</anchorfile>
      <anchor>a4bf71c522e4938bb951971790c39323a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader.html</anchorfile>
      <anchor>ab33569a5088356e8ec56699c73a60c3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader.html</anchorfile>
      <anchor>a87db478352fc5a7abf9cfc3c61e56c4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader.html</anchorfile>
      <anchor>a326aa38e10fe356aa25cea15e01aed42</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader.html</anchorfile>
      <anchor>ace8d5274c9d65f623c6ab0544ef624c1</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader.html</anchorfile>
      <anchor>a1f1ad3a1ae9a41330ef89bcdd8e70a47</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionMeshPrimitiveKhrMaterialsVariantsReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionMeshPrimitiveKhrMaterialsVariantsReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a60b9b13569f9e276ebf6093bec5a2ee1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>ad40ca3a84af6387467ec1cbdd6786460</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a407f641c104562238b07c5cb36866c0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariants &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a16535b05ba2f5cedded92aea76a08569</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariants &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a0290a236fc0a665ecd88b8ce118faf81</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariants &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionMeshPrimitiveKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a47aaf144b8170df76d925f0bf3b101a1</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionModelExtStructuralMetadata</name>
    <filename>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</anchorfile>
      <anchor>aedf31c2ef20c62ddccbdc7c0024d73e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; CesiumGltf::Schema &gt;</type>
      <name>schema</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</anchorfile>
      <anchor>a054103d6c42bd033bae562efd689978e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>schemaUri</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</anchorfile>
      <anchor>a30754ff949c0dbc4ed3ac11e02ccee09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::PropertyTable &gt;</type>
      <name>propertyTables</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</anchorfile>
      <anchor>a68691d008b0797e660b294c8528bf855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::PropertyTexture &gt;</type>
      <name>propertyTextures</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</anchorfile>
      <anchor>a7ba62fc5b604575a1f29c743c3088193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::PropertyAttribute &gt;</type>
      <name>propertyAttributes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</anchorfile>
      <anchor>a0ccf385eabe02416f7d2c2dc548476cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</anchorfile>
      <anchor>a4e2ba5b816ee676a37c1d12663e2bdff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelExtStructuralMetadata.html</anchorfile>
      <anchor>a791e065a09e0fd05ba62a6c0e1ffd38d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionModelExtStructuralMetadataReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionModelExtStructuralMetadataReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionModelExtStructuralMetadataReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelExtStructuralMetadataReader.html</anchorfile>
      <anchor>a576d141a30d2f475cf5be1e19e1f5540</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelExtStructuralMetadataReader.html</anchorfile>
      <anchor>a2089a40622b55933a91455c3cb3ccbf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelExtStructuralMetadataReader.html</anchorfile>
      <anchor>abf66f2abeacf7f39ad6d964d28a588d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelExtStructuralMetadata &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelExtStructuralMetadataReader.html</anchorfile>
      <anchor>ab3a943aeef009c31a17642e37e94304d</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelExtStructuralMetadata &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelExtStructuralMetadataReader.html</anchorfile>
      <anchor>adb1d5e203b206599682cba0207678494</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionModelExtStructuralMetadata &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelExtStructuralMetadataReader.html</anchorfile>
      <anchor>a8a929b4d9b549927ab19596b52ceda6a</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionModelKhrMaterialsVariants</name>
    <filename>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariants.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariants.html</anchorfile>
      <anchor>adda990591b6fe88dc6d15b4084aec51a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::ExtensionModelKhrMaterialsVariantsValue &gt;</type>
      <name>variants</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariants.html</anchorfile>
      <anchor>aac485f34678a018a8b66ed2733624676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariants.html</anchorfile>
      <anchor>a1b12adadb9d6733402ec50d1ca1697f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariants.html</anchorfile>
      <anchor>abda1c19c1ee982609b1aeb4d06c3819d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionModelKhrMaterialsVariantsReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionModelKhrMaterialsVariantsReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a27c1d39b1ec508a4680d85c048702ed5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>ae7c41c6e231c57fc0c89e6adf5efcdf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a51a8d0f98fd9249ec1ead194aa195cb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelKhrMaterialsVariants &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a5d93365a036b19add119546f0bcbc5d5</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelKhrMaterialsVariants &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a95a835c94a2ab004af425d1c0b53f008</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionModelKhrMaterialsVariants &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsReader.html</anchorfile>
      <anchor>a732d324634a3b2ce05a9297f32e2c617</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionModelKhrMaterialsVariantsValue</name>
    <filename>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariantsValue.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariantsValue.html</anchorfile>
      <anchor>acbf911589c55ad3df77f97a54305850f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariantsValue.html</anchorfile>
      <anchor>a92431bcf0e181b0ad890c93f454fec1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelKhrMaterialsVariantsValue.html</anchorfile>
      <anchor>a35e4ad473f42e3828bff61580b1760a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionModelKhrMaterialsVariantsValueReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsValueReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionModelKhrMaterialsVariantsValueReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsValueReader.html</anchorfile>
      <anchor>a65e939716d046713afbf8b1a909270f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsValueReader.html</anchorfile>
      <anchor>afdf961fd990410f5f5bb008c99ac85b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsValueReader.html</anchorfile>
      <anchor>a935aa3f41e3b0b69747720db6ddb8a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelKhrMaterialsVariantsValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsValueReader.html</anchorfile>
      <anchor>adf186650bed013f7a9aa0363cbffcc89</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelKhrMaterialsVariantsValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsValueReader.html</anchorfile>
      <anchor>af3b5bd7d74bb0be12343f0bf23ae1d2d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionModelKhrMaterialsVariantsValue &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelKhrMaterialsVariantsValueReader.html</anchorfile>
      <anchor>ae5162a5dac002684973a9b972dab8e4f</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionModelMaxarMeshVariants</name>
    <filename>structCesiumGltf_1_1ExtensionModelMaxarMeshVariants.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelMaxarMeshVariants.html</anchorfile>
      <anchor>a5edb4bfec9532ba3bdc5ec1e71966da7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>defaultProperty</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelMaxarMeshVariants.html</anchorfile>
      <anchor>afe8327e771155dcbf8a2ff4925f2b434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::ExtensionModelMaxarMeshVariantsValue &gt;</type>
      <name>variants</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelMaxarMeshVariants.html</anchorfile>
      <anchor>a4600c81ef90cba33345a6a2b38d841d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelMaxarMeshVariants.html</anchorfile>
      <anchor>a202bc4fdbe17308342973170217aef67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelMaxarMeshVariants.html</anchorfile>
      <anchor>a1b315a837e074e6b27a726abca2bc604</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionModelMaxarMeshVariantsReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionModelMaxarMeshVariantsReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsReader.html</anchorfile>
      <anchor>a42003d354dc74814242979122c62d538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsReader.html</anchorfile>
      <anchor>a339075a673da3bd42ee72fd5c8c16b3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsReader.html</anchorfile>
      <anchor>aef86e5788d1d5047b795de1de30d3671</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelMaxarMeshVariants &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsReader.html</anchorfile>
      <anchor>a18474bcf72bee4605838e8f5c824c9be</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelMaxarMeshVariants &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsReader.html</anchorfile>
      <anchor>a38de7f78c5d6a0c97757a10ec340317c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionModelMaxarMeshVariants &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsReader.html</anchorfile>
      <anchor>ac61e953161cb0a0ce244afaa678ed943</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionModelMaxarMeshVariantsValue</name>
    <filename>structCesiumGltf_1_1ExtensionModelMaxarMeshVariantsValue.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelMaxarMeshVariantsValue.html</anchorfile>
      <anchor>abed7e30be79aec4c7ecf591a2cdbfe7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelMaxarMeshVariantsValue.html</anchorfile>
      <anchor>a25514e9565b13ccfc0e64c40ce78f748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionModelMaxarMeshVariantsValue.html</anchorfile>
      <anchor>a64ac638226cfc11c86d14b3e17088df1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionModelMaxarMeshVariantsValueReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsValueReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionModelMaxarMeshVariantsValueReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsValueReader.html</anchorfile>
      <anchor>ae9121a66d239a118dbca91f0f24b528a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsValueReader.html</anchorfile>
      <anchor>ace55f14d2c5d7a5f77cbeaefca1d6580</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsValueReader.html</anchorfile>
      <anchor>a19c943aaf36245614ba1b56d62cbdabb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelMaxarMeshVariantsValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsValueReader.html</anchorfile>
      <anchor>a171f59cfe27fee388476c1756818b972</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionModelMaxarMeshVariantsValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsValueReader.html</anchorfile>
      <anchor>a0b3e63f24edc63f323e462acfacdc078</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionModelMaxarMeshVariantsValue &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionModelMaxarMeshVariantsValueReader.html</anchorfile>
      <anchor>a81b17c3759155337e5770aec182d74cc</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionNodeMaxarMeshVariants</name>
    <filename>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariants.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariants.html</anchorfile>
      <anchor>aeba655a094c32ab5fadf2caef4d26f00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue &gt;</type>
      <name>mappings</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariants.html</anchorfile>
      <anchor>a3ae4b5769e1e7e35d462b0af5f4bc562</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariants.html</anchorfile>
      <anchor>a5c96ef3f312f827f8840743bc2e93534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariants.html</anchorfile>
      <anchor>ac6b876882b31addd2063527030bb94ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue</name>
    <filename>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariantsMappingsValue.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariantsMappingsValue.html</anchorfile>
      <anchor>a685014f1c04c9a28c0599f7433858a46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int32_t &gt;</type>
      <name>variants</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariantsMappingsValue.html</anchorfile>
      <anchor>a12e58fadf04bf658a0acfce7a88a0c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>mesh</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariantsMappingsValue.html</anchorfile>
      <anchor>ac7137d5b2000a77758e527d0d25e5627</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariantsMappingsValue.html</anchorfile>
      <anchor>a9db2b7d7866409eeb16ca0251e8da92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionNodeMaxarMeshVariantsMappingsValue.html</anchorfile>
      <anchor>a257400089a9547b4faf96338342a2cd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionNodeMaxarMeshVariantsMappingsValueReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsMappingsValueReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionNodeMaxarMeshVariantsMappingsValueReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsMappingsValueReader.html</anchorfile>
      <anchor>a8784a97b3cd17935baa8ef08bfceb1c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsMappingsValueReader.html</anchorfile>
      <anchor>a41fbad53dc0208073fe3aeae0712edb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsMappingsValueReader.html</anchorfile>
      <anchor>a0465efa55875392b96a70245469169f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsMappingsValueReader.html</anchorfile>
      <anchor>a5a1c4bd072663dcb3a06294121d35b8f</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsMappingsValueReader.html</anchorfile>
      <anchor>af9a7593cb22f037f5d30d7291b5b260f</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsMappingsValueReader.html</anchorfile>
      <anchor>a6c2b7362624a90b077b672594d5b602c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionNodeMaxarMeshVariantsReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionNodeMaxarMeshVariantsReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsReader.html</anchorfile>
      <anchor>a01195a312d1bb8bd86c4d877cb7e82d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsReader.html</anchorfile>
      <anchor>a59a449c49d2fdb99d679929a95276af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsReader.html</anchorfile>
      <anchor>a825b978faf7e2d637be9fd0eec9f1557</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionNodeMaxarMeshVariants &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsReader.html</anchorfile>
      <anchor>ad2b2b9b69873e3d5b6212884d09793db</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionNodeMaxarMeshVariants &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsReader.html</anchorfile>
      <anchor>ae484bfd892f5aca6a5db120e9a9f2f51</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionNodeMaxarMeshVariants &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionNodeMaxarMeshVariantsReader.html</anchorfile>
      <anchor>a1aaec52f2a600ae89a066082b805053e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::ExtensionsJsonHandler</name>
    <filename>classCesiumJsonReader_1_1ExtensionsJsonHandler.html</filename>
    <base>CesiumJsonReader::ObjectJsonHandler</base>
    <member kind="function">
      <type></type>
      <name>ExtensionsJsonHandler</name>
      <anchorfile>classCesiumJsonReader_1_1ExtensionsJsonHandler.html</anchorfile>
      <anchor>a23209ff23ea6e1689f56f8b0d1af07ab</anchor>
      <arglist>(const JsonReaderOptions &amp;context) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1ExtensionsJsonHandler.html</anchorfile>
      <anchor>ac9e9ecb9a3de9f3c37e1be54d03bdc04</anchor>
      <arglist>(IJsonHandler *pParent, CesiumUtility::ExtensibleObject *pObject, const std::string &amp;objectType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectKey</name>
      <anchorfile>classCesiumJsonReader_1_1ExtensionsJsonHandler.html</anchorfile>
      <anchor>a47fed876caf757e4a9fe775d23698db3</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionTextureWebp</name>
    <filename>structCesiumGltf_1_1ExtensionTextureWebp.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ExtensionTextureWebp.html</anchorfile>
      <anchor>afaea641320658ead9c828ba5abae3b86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>source</name>
      <anchorfile>structCesiumGltf_1_1ExtensionTextureWebp.html</anchorfile>
      <anchor>abc82036cc668a57ee080eaf77fe769f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionTextureWebp.html</anchorfile>
      <anchor>a01de16bbaaf4c5f7f811fae7b15a4ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>ExtensionName</name>
      <anchorfile>structCesiumGltf_1_1ExtensionTextureWebp.html</anchorfile>
      <anchor>a7ef0041011930107f2b17f5cb83e8591</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ExtensionTextureWebpReader</name>
    <filename>classCesiumGltfReader_1_1ExtensionTextureWebpReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtensionTextureWebpReader</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionTextureWebpReader.html</anchorfile>
      <anchor>a1a875ebd758b593ac0b9ffbe8ad66106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionTextureWebpReader.html</anchorfile>
      <anchor>a8fdcd017e556e74d14f1921d7be74b33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionTextureWebpReader.html</anchorfile>
      <anchor>a98d46810cc61d06fefbf554caca7a119</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionTextureWebp &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionTextureWebpReader.html</anchorfile>
      <anchor>ad2c35c344a54b5d825cf71f0d2189bb7</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::ExtensionTextureWebp &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionTextureWebpReader.html</anchorfile>
      <anchor>a3cc7f4c200ab2598ad07b71fd220cdaf</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::ExtensionTextureWebp &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ExtensionTextureWebpReader.html</anchorfile>
      <anchor>ab48985234dfaeaca8fc34e861ffce3fc</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonWriter::ExtensionWriterContext</name>
    <filename>classCesiumJsonWriter_1_1ExtensionWriterContext.html</filename>
    <member kind="function">
      <type>void</type>
      <name>registerExtension</name>
      <anchorfile>classCesiumJsonWriter_1_1ExtensionWriterContext.html</anchorfile>
      <anchor>a34a4a959c6e701d35ca2d511d29fd8d1</anchor>
      <arglist>(const std::string &amp;extensionName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerExtension</name>
      <anchorfile>classCesiumJsonWriter_1_1ExtensionWriterContext.html</anchorfile>
      <anchor>a383dcd1091c1534c57d8034ee9474710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ExtensionState</type>
      <name>getExtensionState</name>
      <anchorfile>classCesiumJsonWriter_1_1ExtensionWriterContext.html</anchorfile>
      <anchor>a878b7a25b86eaf51c72babbbc4e431de</anchor>
      <arglist>(const std::string &amp;extensionName) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtensionState</name>
      <anchorfile>classCesiumJsonWriter_1_1ExtensionWriterContext.html</anchorfile>
      <anchor>a1971f411064fe523c4c272e170eb0194</anchor>
      <arglist>(const std::string &amp;extensionName, ExtensionState newState)</arglist>
    </member>
    <member kind="function">
      <type>ExtensionHandler&lt; std::any &gt;</type>
      <name>createExtensionHandler</name>
      <anchorfile>classCesiumJsonWriter_1_1ExtensionWriterContext.html</anchorfile>
      <anchor>aab0afb3dc54efce2cb2b9db2429f934a</anchor>
      <arglist>(const std::string_view &amp;extensionName, const std::any &amp;obj, const std::string &amp;extendedObjectType) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::FeatureId</name>
    <filename>structCesiumGltf_1_1FeatureId.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1FeatureId.html</anchorfile>
      <anchor>a73f197508ac26df4f925fe059afe1bcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>featureCount</name>
      <anchorfile>structCesiumGltf_1_1FeatureId.html</anchorfile>
      <anchor>aa24a1c888c0dd2269132f5e54b726135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>nullFeatureId</name>
      <anchorfile>structCesiumGltf_1_1FeatureId.html</anchorfile>
      <anchor>aeba4850f86867037fccdec03328c7cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>label</name>
      <anchorfile>structCesiumGltf_1_1FeatureId.html</anchorfile>
      <anchor>a0a41bd7a38a986f6dc4d5fe0e2d9bb7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>attribute</name>
      <anchorfile>structCesiumGltf_1_1FeatureId.html</anchorfile>
      <anchor>a521fb9b2a1fc2fec6cf6003460f3eccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::FeatureIdTexture &gt;</type>
      <name>texture</name>
      <anchorfile>structCesiumGltf_1_1FeatureId.html</anchorfile>
      <anchor>a81b6db70387680b09294cd9809c7d5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>propertyTable</name>
      <anchorfile>structCesiumGltf_1_1FeatureId.html</anchorfile>
      <anchor>a07294fbbfd36db477f58061347301ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1FeatureId.html</anchorfile>
      <anchor>a2093f9acacfd9285bae0d065730036da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::FeatureIdFromAccessor</name>
    <filename>structCesiumGltf_1_1FeatureIdFromAccessor.html</filename>
    <member kind="function">
      <type>int64_t</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1FeatureIdFromAccessor.html</anchorfile>
      <anchor>a02274f17ae26625d043976ee203bd964</anchor>
      <arglist>(const AccessorView&lt; float &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1FeatureIdFromAccessor.html</anchorfile>
      <anchor>a3ad8fe6a8220ecf61651859c12a487a3</anchor>
      <arglist>(const AccessorView&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>index</name>
      <anchorfile>structCesiumGltf_1_1FeatureIdFromAccessor.html</anchorfile>
      <anchor>aae9a70f2a53fec8d15693f9d750781a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::FeatureIdReader</name>
    <filename>classCesiumGltfReader_1_1FeatureIdReader.html</filename>
    <member kind="function">
      <type></type>
      <name>FeatureIdReader</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdReader.html</anchorfile>
      <anchor>a0f611ea6243009d241318612010aabef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdReader.html</anchorfile>
      <anchor>a9a09ba472d79497d789f1fa0b9dad479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdReader.html</anchorfile>
      <anchor>a9db8b76932a23206f2c24e680040edfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::FeatureId &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdReader.html</anchorfile>
      <anchor>a8f16447893b928af3025601c9d3d6536</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::FeatureId &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdReader.html</anchorfile>
      <anchor>ae75d22b64110e7df87a8d8f02a3fb7e0</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::FeatureId &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdReader.html</anchorfile>
      <anchor>a79c2365500d5611aeca17f1e1cf56279</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::FeatureIdTexture</name>
    <filename>structCesiumGltf_1_1FeatureIdTexture.html</filename>
    <base>CesiumGltf::TextureInfo</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1FeatureIdTexture.html</anchorfile>
      <anchor>a09a2a283e824f4d34549f024e749a4a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int64_t &gt;</type>
      <name>channels</name>
      <anchorfile>structCesiumGltf_1_1FeatureIdTexture.html</anchorfile>
      <anchor>a77fa86042c3ac71b86a3ead5e88ef429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1FeatureIdTexture.html</anchorfile>
      <anchor>af74123451f017359302bbfb626e6e29c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::FeatureIdTextureReader</name>
    <filename>classCesiumGltfReader_1_1FeatureIdTextureReader.html</filename>
    <member kind="function">
      <type></type>
      <name>FeatureIdTextureReader</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdTextureReader.html</anchorfile>
      <anchor>ab51000104f6bdee646779a32e1d9da01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdTextureReader.html</anchorfile>
      <anchor>a5679bb2daab3773594409e5a273e7172</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdTextureReader.html</anchorfile>
      <anchor>a6d772a675b38333e63fc9dc90f84f873</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::FeatureIdTexture &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdTextureReader.html</anchorfile>
      <anchor>a0f008fdab9d571259f7f145e184a1acb</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::FeatureIdTexture &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdTextureReader.html</anchorfile>
      <anchor>aba7f0542419d10545dbd4f0fac4e487c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::FeatureIdTexture &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1FeatureIdTextureReader.html</anchorfile>
      <anchor>a6f14f00cca2bc67678476f4fd644aa07</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::FeatureIdTextureView</name>
    <filename>classCesiumGltf_1_1FeatureIdTextureView.html</filename>
    <base>CesiumGltf::TextureView</base>
    <member kind="function">
      <type></type>
      <name>FeatureIdTextureView</name>
      <anchorfile>classCesiumGltf_1_1FeatureIdTextureView.html</anchorfile>
      <anchor>ac851919fa9c067b4031f8be73349aad5</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FeatureIdTextureView</name>
      <anchorfile>classCesiumGltf_1_1FeatureIdTextureView.html</anchorfile>
      <anchor>aca63f3a6fd574ef9f1a19e5d71a50b16</anchor>
      <arglist>(const Model &amp;model, const FeatureIdTexture &amp;featureIdTexture, const TextureViewOptions &amp;options=TextureViewOptions()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getFeatureID</name>
      <anchorfile>classCesiumGltf_1_1FeatureIdTextureView.html</anchorfile>
      <anchor>aede2e22fd905c1388ee11c28e469053b</anchor>
      <arglist>(double u, double v) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>FeatureIdTextureViewStatus</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1FeatureIdTextureView.html</anchorfile>
      <anchor>a0c659d7c6903d4a7cecf69c42cd830b9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int64_t &gt;</type>
      <name>getChannels</name>
      <anchorfile>classCesiumGltf_1_1FeatureIdTextureView.html</anchorfile>
      <anchor>ad5e06486af561ff17a2156cc59f6b128</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionBufferViewExtMeshoptCompression::Filter</name>
    <filename>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Filter.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>NONE</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Filter.html</anchorfile>
      <anchor>adc7268ffc5d81818d54002b06866420d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>OCTAHEDRAL</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Filter.html</anchorfile>
      <anchor>adbaaf54cf263f4bccf1163c04b28653b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>QUATERNION</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Filter.html</anchorfile>
      <anchor>afbe9fabf40f253c5ee37a3b80b80125b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>EXPONENTIAL</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Filter.html</anchorfile>
      <anchor>a5da287df4b32d64313d730403af635fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::FogDensityAtHeight</name>
    <filename>structCesium3DTilesSelection_1_1FogDensityAtHeight.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>cameraHeight</name>
      <anchorfile>structCesium3DTilesSelection_1_1FogDensityAtHeight.html</anchorfile>
      <anchor>a2c636b68866392b2a5e6ca63387dfa32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fogDensity</name>
      <anchorfile>structCesium3DTilesSelection_1_1FogDensityAtHeight.html</anchorfile>
      <anchor>a54e25e69a7d488da396d388ec738881f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::FoundMetadataProperty</name>
    <filename>structCesium3DTiles_1_1FoundMetadataProperty.html</filename>
    <member kind="variable">
      <type>const std::string &amp;</type>
      <name>classIdentifier</name>
      <anchorfile>structCesium3DTiles_1_1FoundMetadataProperty.html</anchorfile>
      <anchor>a52705b5c8b011c9c916654cbbae9dd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Class &amp;</type>
      <name>classDefinition</name>
      <anchorfile>structCesium3DTiles_1_1FoundMetadataProperty.html</anchorfile>
      <anchor>a5ec2fe4981376a79f7eb227b0ea3a146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string &amp;</type>
      <name>propertyIdentifier</name>
      <anchorfile>structCesium3DTiles_1_1FoundMetadataProperty.html</anchorfile>
      <anchor>a920f69611038f5031d0207a47209b414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ClassProperty &amp;</type>
      <name>propertyDefinition</name>
      <anchorfile>structCesium3DTiles_1_1FoundMetadataProperty.html</anchorfile>
      <anchor>a98e6fead69d791fe01c0170f4b7f9dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CesiumUtility::JsonValue &amp;</type>
      <name>propertyValue</name>
      <anchorfile>structCesium3DTiles_1_1FoundMetadataProperty.html</anchorfile>
      <anchor>acb53a36e8898839b60b818b157ae9b81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::Future</name>
    <filename>classCesiumAsync_1_1Future.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type></type>
      <name>Future</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>a8169f5817ea0eabd26380595a35304ef</anchor>
      <arglist>(Future&lt; T &gt; &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>a29a108b993803e7d96a0596e7c539cf0</anchor>
      <arglist>(Future&lt; T &gt; &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, T &gt;</type>
      <name>thenInWorkerThread</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>a90e10820f70465bd782b58c3eeef3241</anchor>
      <arglist>(Func &amp;&amp;f) &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, T &gt;</type>
      <name>thenInMainThread</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>a15b2e036dc31166b4ae70b82ffb346fe</anchor>
      <arglist>(Func &amp;&amp;f) &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, T &gt;</type>
      <name>thenImmediately</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>a58262df2f3beca36c02a23a926b7bb09</anchor>
      <arglist>(Func &amp;&amp;f) &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, T &gt;</type>
      <name>thenInThreadPool</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>a7e949f4dff7341995f6eaff644a97781</anchor>
      <arglist>(const ThreadPool &amp;threadPool, Func &amp;&amp;f) &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; T &gt;</type>
      <name>catchInMainThread</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>ae15f5a98bb5584a2ab5787dc08d54e4e</anchor>
      <arglist>(Func &amp;&amp;f) &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; T &gt;</type>
      <name>catchImmediately</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>a9e50a98126c4fd09bf23c029dad52d8a</anchor>
      <arglist>(Func &amp;&amp;f) &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; std::tuple&lt; std::remove_cvref_t&lt; TPassThrough &gt;..., T &gt; &gt;</type>
      <name>thenPassThrough</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>ae7f6e47f5c31775cd2ad7385139ae25e</anchor>
      <arglist>(TPassThrough &amp;&amp;... values) &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>wait</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>aabe6c7dce5076b8a48ea8140490d6a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>waitInMainThread</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>ad0bacea8d37206b0ad3c5edeac63929e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReady</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>ae3734374a25d1ad0cd2b2995469af345</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SharedFuture&lt; T &gt;</type>
      <name>share</name>
      <anchorfile>classCesiumAsync_1_1Future.html</anchorfile>
      <anchor>a1a6fb6c620c1a62c29beb0e4b9c6d804</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::GeographicProjection</name>
    <filename>classCesiumGeospatial_1_1GeographicProjection.html</filename>
    <member kind="function">
      <type></type>
      <name>GeographicProjection</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>af54b92b8baa18ea05cf3d0327be8d020</anchor>
      <arglist>(const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Ellipsoid &amp;</type>
      <name>getEllipsoid</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>a64e27ef2508eae9df0869c7768cc5317</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>project</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>af674f2db66a570d2afcfa1a215b3646f</anchor>
      <arglist>(const Cartographic &amp;cartographic) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeometry::Rectangle</type>
      <name>project</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>adf906e7f420082481c10cc6d3322baa2</anchor>
      <arglist>(const CesiumGeospatial::GlobeRectangle &amp;rectangle) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Cartographic</type>
      <name>unproject</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>aefc5501a17154eb998592d85c24cf9d5</anchor>
      <arglist>(const glm::dvec2 &amp;projectedCoordinates) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Cartographic</type>
      <name>unproject</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>a53ca712fbb904ff6d9d2bcd6803a7f6e</anchor>
      <arglist>(const glm::dvec3 &amp;projectedCoordinates) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeospatial::GlobeRectangle</type>
      <name>unproject</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>a63c612c046bd375fbb1a86c95d3d0b17</anchor>
      <arglist>(const CesiumGeometry::Rectangle &amp;rectangle) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>a35f2ed2373d4501c77f1f27c57c933bb</anchor>
      <arglist>(const GeographicProjection &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>a1d1068edcf014d3b328948185cc3d42d</anchor>
      <arglist>(const GeographicProjection &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr CesiumGeometry::Rectangle</type>
      <name>computeMaximumProjectedRectangle</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>ad82d1303d68122ddb0d27818186fe0e2</anchor>
      <arglist>(const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr GlobeRectangle</type>
      <name>MAXIMUM_GLOBE_RECTANGLE</name>
      <anchorfile>classCesiumGeospatial_1_1GeographicProjection.html</anchorfile>
      <anchor>a4cdfd8103a77803096df9db78aa903a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::GlobeAnchor</name>
    <filename>classCesiumGeospatial_1_1GlobeAnchor.html</filename>
    <member kind="function">
      <type></type>
      <name>GlobeAnchor</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeAnchor.html</anchorfile>
      <anchor>a2620d488ebf15ec9ae772bfd004aecf6</anchor>
      <arglist>(const glm::dmat4 &amp;anchorToFixed)</arglist>
    </member>
    <member kind="function">
      <type>const glm::dmat4 &amp;</type>
      <name>getAnchorToFixedTransform</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeAnchor.html</anchorfile>
      <anchor>a6d7db8e4d440cecab720546e44807f53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnchorToFixedTransform</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeAnchor.html</anchorfile>
      <anchor>a7152c67767a736f039499a42fb3895d9</anchor>
      <arglist>(const glm::dmat4 &amp;newAnchorToFixed, bool adjustOrientation, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>glm::dmat4</type>
      <name>getAnchorToLocalTransform</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeAnchor.html</anchorfile>
      <anchor>add0173e8c04fa7c877a7a084bf1dcf70</anchor>
      <arglist>(const LocalHorizontalCoordinateSystem &amp;localCoordinateSystem) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnchorToLocalTransform</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeAnchor.html</anchorfile>
      <anchor>a61c92ca04d22403266363ac449724003</anchor>
      <arglist>(const LocalHorizontalCoordinateSystem &amp;localCoordinateSystem, const glm::dmat4 &amp;newAnchorToLocal, bool adjustOrientation, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GlobeAnchor</type>
      <name>fromAnchorToLocalTransform</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeAnchor.html</anchorfile>
      <anchor>a21d53256f4d09d75cf97938c9d605ec2</anchor>
      <arglist>(const LocalHorizontalCoordinateSystem &amp;localCoordinateSystem, const glm::dmat4 &amp;anchorToLocal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GlobeAnchor</type>
      <name>fromAnchorToFixedTransform</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeAnchor.html</anchorfile>
      <anchor>a970b3df64f16d8c4df6d06970ca16209</anchor>
      <arglist>(const glm::dmat4 &amp;anchorToFixed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::GlobeRectangle</name>
    <filename>classCesiumGeospatial_1_1GlobeRectangle.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>GlobeRectangle</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a432ad11ea5c0ee8b82b35d748c4a9bee</anchor>
      <arglist>(double west, double south, double east, double north) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>getWest</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a18082fd36bff3a2d01b2a305591a678a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWest</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a7cbb4ef83a646e0d8ee6cc7bab36cb96</anchor>
      <arglist>(double value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>getSouth</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>af155dc444f35720e23ed72b9312b8f96</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSouth</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>abccf3549ca0a6aca2c6314e3bd2a3b16</anchor>
      <arglist>(double value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>getEast</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a7ca110a13f775658cd56a7d7982455da</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEast</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>ac0012eeb8b78e5939a759d0286fb2310</anchor>
      <arglist>(double value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>getNorth</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a26cc961a088e0b32077fd9dce825055a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNorth</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a3e95ae8500f2e2ed91e894cc1af44aa9</anchor>
      <arglist>(double value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr Cartographic</type>
      <name>getSouthwest</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a48e9f4653b78cbb3411e0b31c1c21620</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr Cartographic</type>
      <name>getSoutheast</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>aa41f2e923225ccd69e199de32908b866</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr Cartographic</type>
      <name>getNorthwest</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>af133e5b8c5394b388d2654db4879ccb9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr Cartographic</type>
      <name>getNortheast</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a7489d6f8f35c41f3269a4a8f7c8bae3e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr CesiumGeometry::Rectangle</type>
      <name>toSimpleRectangle</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>aa5bd6760c1c8d2686c56f0f590d5c034</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>computeWidth</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a2581208c886ba6974f0838d1134fe956</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>computeHeight</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>ac0ddbedcbb041af9662fd91ff2c768cc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Cartographic</type>
      <name>computeCenter</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a28b1332731cbb8b02bf12f64aec314a9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a88675f72c2c7388f4048352e9374a917</anchor>
      <arglist>(const Cartographic &amp;cartographic) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a4ca1934e02591c5f6c837858bcbaaedf</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; GlobeRectangle &gt;</type>
      <name>computeIntersection</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>aa0b674c43af8e44aaf2b9e0289214ad2</anchor>
      <arglist>(const GlobeRectangle &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>GlobeRectangle</type>
      <name>computeUnion</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>ac41506ae3886911e79ea17885f24be32</anchor>
      <arglist>(const GlobeRectangle &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; GlobeRectangle, std::optional&lt; GlobeRectangle &gt; &gt;</type>
      <name>splitAtAntiMeridian</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>afbfc8e6486b59c1c2ddb66667d7aadcf</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr GlobeRectangle</type>
      <name>fromDegrees</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a7571663912ede011ddef7350d24dabca</anchor>
      <arglist>(double westDegrees, double southDegrees, double eastDegrees, double northDegrees) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>equals</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a47c8f5152c74dcfdd03b40198ae8cd88</anchor>
      <arglist>(const GlobeRectangle &amp;left, const GlobeRectangle &amp;right) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>equalsEpsilon</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a76d8b785755bde1475f9571fbff289a9</anchor>
      <arglist>(const GlobeRectangle &amp;left, const GlobeRectangle &amp;right, double relativeEpsilon) noexcept</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const GlobeRectangle</type>
      <name>EMPTY</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>ad32da6dc77efbc1a9f5b5fd5f87619be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const GlobeRectangle</type>
      <name>MAXIMUM</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeRectangle.html</anchorfile>
      <anchor>a2ba728a3b2202c92ea5ab2d2be2fcda7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::GlobeTransforms</name>
    <filename>classCesiumGeospatial_1_1GlobeTransforms.html</filename>
    <member kind="function" static="yes">
      <type>static glm::dmat4x4</type>
      <name>eastNorthUpToFixedFrame</name>
      <anchorfile>classCesiumGeospatial_1_1GlobeTransforms.html</anchorfile>
      <anchor>a971af83be5216d4fb0a4b4e7119565a1</anchor>
      <arglist>(const glm::dvec3 &amp;origin, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::GltfConverterResult</name>
    <filename>structCesium3DTilesContent_1_1GltfConverterResult.html</filename>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::Model &gt;</type>
      <name>model</name>
      <anchorfile>structCesium3DTilesContent_1_1GltfConverterResult.html</anchorfile>
      <anchor>a2ad0ecaa37748979af84cbf711a355dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::ErrorList</type>
      <name>errors</name>
      <anchorfile>structCesium3DTilesContent_1_1GltfConverterResult.html</anchorfile>
      <anchor>a122be277a3603df76a09fa93f9d7c11a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::GltfConverters</name>
    <filename>classCesium3DTilesContent_1_1GltfConverters.html</filename>
    <member kind="typedef">
      <type>CesiumAsync::Future&lt; GltfConverterResult &gt;(*)( const std::span&lt; const std::byte &gt; &amp;content, const CesiumGltfReader::GltfReaderOptions &amp;options, const AssetFetcher &amp;subprocessor)</type>
      <name>ConverterFunction</name>
      <anchorfile>classCesium3DTilesContent_1_1GltfConverters.html</anchorfile>
      <anchor>ae442babb2508f7852aaf99a534c44130</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerMagic</name>
      <anchorfile>classCesium3DTilesContent_1_1GltfConverters.html</anchorfile>
      <anchor>a0fe170b9e3dba0921787a83aab964025</anchor>
      <arglist>(const std::string &amp;magic, ConverterFunction converter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerFileExtension</name>
      <anchorfile>classCesium3DTilesContent_1_1GltfConverters.html</anchorfile>
      <anchor>a5596437676034b0a948e5ba3d367575f</anchor>
      <arglist>(const std::string &amp;fileExtension, ConverterFunction converter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConverterFunction</type>
      <name>getConverterByFileExtension</name>
      <anchorfile>classCesium3DTilesContent_1_1GltfConverters.html</anchorfile>
      <anchor>a96171d50c56a659a44d13c405cf0ff4b</anchor>
      <arglist>(const std::string &amp;filePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConverterFunction</type>
      <name>getConverterByMagic</name>
      <anchorfile>classCesium3DTilesContent_1_1GltfConverters.html</anchorfile>
      <anchor>aec4011575397207f0b30f20d411e23b5</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;content)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; GltfConverterResult &gt;</type>
      <name>convert</name>
      <anchorfile>classCesium3DTilesContent_1_1GltfConverters.html</anchorfile>
      <anchor>aa9a76e516b83f78818c06a3461643263</anchor>
      <arglist>(const std::string &amp;filePath, const std::span&lt; const std::byte &gt; &amp;content, const CesiumGltfReader::GltfReaderOptions &amp;options, const AssetFetcher &amp;assetFetcher)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; GltfConverterResult &gt;</type>
      <name>convert</name>
      <anchorfile>classCesium3DTilesContent_1_1GltfConverters.html</anchorfile>
      <anchor>a5587ad94330b04d98c999fc5be6d0df2</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;content, const CesiumGltfReader::GltfReaderOptions &amp;options, const AssetFetcher &amp;assetFetcher)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::GltfReader</name>
    <filename>classCesiumGltfReader_1_1GltfReader.html</filename>
    <member kind="function">
      <type></type>
      <name>GltfReader</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>a323700279640902c78557e880c5aecf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>aee512169e03591664831866260ee2b5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>a3cdcb33981da8c131867c24e3765d83d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GltfReaderResult</type>
      <name>readGltf</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>a20ffae5f1336b9cc5f0f5a21218328e4</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data, const GltfReaderOptions &amp;options=GltfReaderOptions()) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; GltfReaderResult &gt;</type>
      <name>loadGltf</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>a6aa696d1da207804615fc3dea573c384</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::string &amp;url, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;headers, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const GltfReaderOptions &amp;options=GltfReaderOptions()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postprocessGltf</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>a556a4ac5c37380f6641cbdc34805aae4</anchor>
      <arglist>(GltfReaderResult &amp;readGltf, const GltfReaderOptions &amp;options)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; GltfReaderResult &gt;</type>
      <name>resolveExternalData</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>a3e8cc88d6c34d7392581d254fb32dc77</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::string &amp;baseUrl, const CesiumAsync::HttpHeaders &amp;headers, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const GltfReaderOptions &amp;options, GltfReaderResult &amp;&amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ImageReaderResult</type>
      <name>readImage</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>a5b93105362a394b7ad30dfad26664f46</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data, const CesiumGltf::Ktx2TranscodeTargets &amp;ktx2TranscodeTargets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; std::string &gt;</type>
      <name>generateMipMaps</name>
      <anchorfile>classCesiumGltfReader_1_1GltfReader.html</anchorfile>
      <anchor>a42f7cddff5a0ac7c2fb8f4eb4ef13793</anchor>
      <arglist>(CesiumGltf::ImageAsset &amp;image)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfReader::GltfReaderOptions</name>
    <filename>structCesiumGltfReader_1_1GltfReaderOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>decodeDataUrls</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>aeae3e513028c721d52984616996657da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>clearDecodedDataUrls</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>a57f83e7d25c00a06177c3b60df0c7ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>decodeEmbeddedImages</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>a10fed440a86c18e390b951c2dabff7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>resolveExternalImages</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>a8b8b0f09846e21c76024c536523a9a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>decodeDraco</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>a40bfb0885e056f425d537021e4f0f122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>decodeMeshOptData</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>ac4dd6e79a35a58c43e50bf4dba1148f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>dequantizeMeshData</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>a1d9ea4a2f14d9c36fcc02c993a043c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>applyTextureTransform</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>a6540292cb140ce8fa3de9d6895ecfe48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGltf::Ktx2TranscodeTargets</type>
      <name>ktx2TranscodeTargets</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>ab6d7761afacbd1f89540973c0ff82172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; GltfSharedAssetSystem &gt;</type>
      <name>pSharedAssetSystem</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>a47b4119471c5f5c74edf7bf0aa861045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>resolveExternalStructuralMetadata</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderOptions.html</anchorfile>
      <anchor>a48a18286868d3c106edc4253fcf03df9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfReader::GltfReaderResult</name>
    <filename>structCesiumGltfReader_1_1GltfReaderResult.html</filename>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::Model &gt;</type>
      <name>model</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderResult.html</anchorfile>
      <anchor>a0e5648af8efca975ab762dcbad4e0768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderResult.html</anchorfile>
      <anchor>ab0b9bd284c9ddc2f900c92c229345d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesiumGltfReader_1_1GltfReaderResult.html</anchorfile>
      <anchor>ab5ed51dc33efe963e8a98ebd852b9fcd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::GltfSharedAssetSystem</name>
    <filename>classCesiumGltfReader_1_1GltfSharedAssetSystem.html</filename>
    <base>CesiumUtility::ReferenceCounted&lt; T, isThreadSafe &gt;</base>
    <member kind="typedef">
      <type>CesiumAsync:: SharedAssetDepot&lt; CesiumGltf::ImageAsset, NetworkImageAssetDescriptor &gt;</type>
      <name>ImageDepot</name>
      <anchorfile>classCesiumGltfReader_1_1GltfSharedAssetSystem.html</anchorfile>
      <anchor>a27213b46ce3b7b2683c274a472dfc8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CesiumAsync:: SharedAssetDepot&lt; CesiumGltf::Schema, NetworkSchemaAssetDescriptor &gt;</type>
      <name>SchemaDepot</name>
      <anchorfile>classCesiumGltfReader_1_1GltfSharedAssetSystem.html</anchorfile>
      <anchor>a6f39836e08bc05c26dafccde48d68f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumUtility::IntrusivePointer&lt; GltfSharedAssetSystem &gt;</type>
      <name>getDefault</name>
      <anchorfile>classCesiumGltfReader_1_1GltfSharedAssetSystem.html</anchorfile>
      <anchor>aa0c6d7f8f850cbd352c80aa49942b2dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; ImageDepot &gt;</type>
      <name>pImage</name>
      <anchorfile>classCesiumGltfReader_1_1GltfSharedAssetSystem.html</anchorfile>
      <anchor>a2c111df10115de95d7d35aa929942f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; SchemaDepot &gt;</type>
      <name>pExternalMetadataSchema</name>
      <anchorfile>classCesiumGltfReader_1_1GltfSharedAssetSystem.html</anchorfile>
      <anchor>ae99d34b1b1cafe368651cf5ce7462513</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfContent::GltfUtilities</name>
    <filename>structCesiumGltfContent_1_1GltfUtilities.html</filename>
    <class kind="struct">CesiumGltfContent::GltfUtilities::IntersectResult</class>
    <class kind="struct">CesiumGltfContent::GltfUtilities::RayGltfHit</class>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dmat4x4 &gt;</type>
      <name>getNodeTransform</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a6c3b9bcdfaac6c61993c8047f4a8db03</anchor>
      <arglist>(const CesiumGltf::Node &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNodeTransform</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a38c6bd97ba09f50ce5ad5cbe93117e45</anchor>
      <arglist>(CesiumGltf::Node &amp;node, const glm::dmat4x4 &amp;newTransform)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static glm::dmat4x4</type>
      <name>applyRtcCenter</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a1ff6d91c483b62d0c0985f58c8d760d1</anchor>
      <arglist>(const CesiumGltf::Model &amp;gltf, const glm::dmat4x4 &amp;rootTransform)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static glm::dmat4x4</type>
      <name>applyGltfUpAxisTransform</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a6e0300d1ead0b9309ab2d269b788b393</anchor>
      <arglist>(const CesiumGltf::Model &amp;model, const glm::dmat4x4 &amp;rootTransform)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeospatial::BoundingRegion</type>
      <name>computeBoundingRegion</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a747d008d6bb6816fb744203de2336631</anchor>
      <arglist>(const CesiumGltf::Model &amp;gltf, const glm::dmat4 &amp;transform, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string_view &gt;</type>
      <name>parseGltfCopyright</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a2cf19eee4512f3b4d70834a9a8347c88</anchor>
      <arglist>(const CesiumGltf::Model &amp;gltf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>collapseToSingleBuffer</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>ae19fe48f088f403bfb579d64859062eb</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>moveBufferContent</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a4313e9cbc45570233c70f0574a181a59</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, CesiumGltf::Buffer &amp;destination, CesiumGltf::Buffer &amp;source)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeUnusedTextures</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>ad29de37108792e1ee3db1abc2f41aa32</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const std::vector&lt; int32_t &gt; &amp;extraUsedTextureIndices={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeUnusedSamplers</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a19b275a194e8be5c2d2d05085e968d31</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const std::vector&lt; int32_t &gt; &amp;extraUsedSamplerIndices={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeUnusedImages</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a9eedb45dbe4fbdb29ca7c565d51c3702</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const std::vector&lt; int32_t &gt; &amp;extraUsedImageIndices={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeUnusedAccessors</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a4f126edd8e47007df9778d4cbdd25e0b</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const std::vector&lt; int32_t &gt; &amp;extraUsedAccessorIndices={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeUnusedBufferViews</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a1dab520b023027b956da75dbbfec1496</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const std::vector&lt; int32_t &gt; &amp;extraUsedBufferViewIndices={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeUnusedBuffers</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a64b996f4b45b2b0c76381f37b44fd2c6</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const std::vector&lt; int32_t &gt; &amp;extraUsedBufferIndices={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeUnusedMeshes</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>afa66b97a39c7fb97e88c5b8d7dc860c6</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const std::vector&lt; int32_t &gt; &amp;extraUsedMeshIndices={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeUnusedMaterials</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a9c099e6e365121c814db5872df986c1e</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const std::vector&lt; int32_t &gt; &amp;extraUsedMaterialIndices={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>compactBuffers</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a176a8a121a9399730deac316bbae1cea</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>compactBuffer</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>aea99c39d376f73740b9a92a439563b7b</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, int32_t bufferIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntersectResult</type>
      <name>intersectRayGltfModel</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities.html</anchorfile>
      <anchor>a2a0ff73a9b135af2cbf96a48226da7bf</anchor>
      <arglist>(const CesiumGeometry::Ray &amp;ray, const CesiumGltf::Model &amp;gltf, bool cullBackFaces=true, const glm::dmat4x4 &amp;gltfTransform=glm::dmat4(1.0))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfWriter::GltfWriter</name>
    <filename>classCesiumGltfWriter_1_1GltfWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>GltfWriter</name>
      <anchorfile>classCesiumGltfWriter_1_1GltfWriter.html</anchorfile>
      <anchor>a8c4fe059306fe52a8a485525a16226c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesiumGltfWriter_1_1GltfWriter.html</anchorfile>
      <anchor>a0b0a6c716420d131bc85f3968880b58b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesiumGltfWriter_1_1GltfWriter.html</anchorfile>
      <anchor>a81eefc769aba3f521a620b9a5e92a43c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GltfWriterResult</type>
      <name>writeGltf</name>
      <anchorfile>classCesiumGltfWriter_1_1GltfWriter.html</anchorfile>
      <anchor>ab685fbd671ee170eaa8e32bf4730f671</anchor>
      <arglist>(const CesiumGltf::Model &amp;model, const GltfWriterOptions &amp;options=GltfWriterOptions()) const</arglist>
    </member>
    <member kind="function">
      <type>GltfWriterResult</type>
      <name>writeGlb</name>
      <anchorfile>classCesiumGltfWriter_1_1GltfWriter.html</anchorfile>
      <anchor>a04d9c5a12b3e790d4767b775113487a4</anchor>
      <arglist>(const CesiumGltf::Model &amp;model, const std::span&lt; const std::byte &gt; &amp;bufferData, const GltfWriterOptions &amp;options=GltfWriterOptions()) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfWriter::GltfWriterOptions</name>
    <filename>structCesiumGltfWriter_1_1GltfWriterOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>prettyPrint</name>
      <anchorfile>structCesiumGltfWriter_1_1GltfWriterOptions.html</anchorfile>
      <anchor>a8fa94d94df6cbb2ca6b519fab3e8583b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>binaryChunkByteAlignment</name>
      <anchorfile>structCesiumGltfWriter_1_1GltfWriterOptions.html</anchorfile>
      <anchor>af2b10bfa012704e725f8e6cacd72382a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfWriter::GltfWriterResult</name>
    <filename>structCesiumGltfWriter_1_1GltfWriterResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>gltfBytes</name>
      <anchorfile>structCesiumGltfWriter_1_1GltfWriterResult.html</anchorfile>
      <anchor>aed91c8a8105757ae8f11c6adbe5a4a40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesiumGltfWriter_1_1GltfWriterResult.html</anchorfile>
      <anchor>a1284cd79dd59d2551ac1da431684c3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesiumGltfWriter_1_1GltfWriterResult.html</anchorfile>
      <anchor>ad2adae5f9fba09b3d6314d4eace1ef19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::GroupMetadata</name>
    <filename>structCesium3DTiles_1_1GroupMetadata.html</filename>
    <base>Cesium3DTiles::MetadataEntity</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1GroupMetadata.html</anchorfile>
      <anchor>a7348ee4ab589ca2ee146e0868b53b2cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1GroupMetadata.html</anchorfile>
      <anchor>a0991ccd9f72c1f12c67efeaa6db69800</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::GroupMetadataReader</name>
    <filename>classCesium3DTilesReader_1_1GroupMetadataReader.html</filename>
    <member kind="function">
      <type></type>
      <name>GroupMetadataReader</name>
      <anchorfile>classCesium3DTilesReader_1_1GroupMetadataReader.html</anchorfile>
      <anchor>ae15b79ce394824f43da634368c868b15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1GroupMetadataReader.html</anchorfile>
      <anchor>a1b2774461c1660c4cdb02d3c91b2789e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1GroupMetadataReader.html</anchorfile>
      <anchor>a306676df8f67d90e4f3d1246e00b1374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::GroupMetadata &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1GroupMetadataReader.html</anchorfile>
      <anchor>a20833be32452889b6fe817e268172508</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::GroupMetadata &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1GroupMetadataReader.html</anchorfile>
      <anchor>aa68e7d290728015c6b81f45156e563e1</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::GroupMetadata &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1GroupMetadataReader.html</anchorfile>
      <anchor>a0da238cf9588deee2d308d244a30106a</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::GunzipAssetAccessor</name>
    <filename>classCesiumAsync_1_1GunzipAssetAccessor.html</filename>
    <base>CesiumAsync::IAssetAccessor</base>
    <member kind="function">
      <type></type>
      <name>GunzipAssetAccessor</name>
      <anchorfile>classCesiumAsync_1_1GunzipAssetAccessor.html</anchorfile>
      <anchor>a7d57293a393e5dd27ac0ec9d2ad1e23b</anchor>
      <arglist>(const std::shared_ptr&lt; IAssetAccessor &gt; &amp;pAssetAccessor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Future&lt; std::shared_ptr&lt; IAssetRequest &gt; &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumAsync_1_1GunzipAssetAccessor.html</anchorfile>
      <anchor>a496ea44714a63da98dd96ce66bb44f2a</anchor>
      <arglist>(const AsyncSystem &amp;asyncSystem, const std::string &amp;url, const std::vector&lt; THeader &gt; &amp;headers) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Future&lt; std::shared_ptr&lt; IAssetRequest &gt; &gt;</type>
      <name>request</name>
      <anchorfile>classCesiumAsync_1_1GunzipAssetAccessor.html</anchorfile>
      <anchor>a3ea3489fe215d6e6da4db287239a4918</anchor>
      <arglist>(const AsyncSystem &amp;asyncSystem, const std::string &amp;verb, const std::string &amp;url, const std::vector&lt; THeader &gt; &amp;headers, const std::span&lt; const std::byte &gt; &amp;contentPayload) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tick</name>
      <anchorfile>classCesiumAsync_1_1GunzipAssetAccessor.html</anchorfile>
      <anchor>a17d0f6f6825effadb3564f1ff26fb64c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumUtility::Hash</name>
    <filename>structCesiumUtility_1_1Hash.html</filename>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>combine</name>
      <anchorfile>structCesiumUtility_1_1Hash.html</anchorfile>
      <anchor>ab65aecf85aaed6844c039ecec8ba8d7c</anchor>
      <arglist>(std::size_t first, std::size_t second)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; CesiumAsync::NetworkAssetDescriptor &gt;</name>
    <filename>structstd_1_1hash_3_01CesiumAsync_1_1NetworkAssetDescriptor_01_4.html</filename>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>structstd_1_1hash_3_01CesiumAsync_1_1NetworkAssetDescriptor_01_4.html</anchorfile>
      <anchor>ae6d1f7b79f409e58cdc50247b0d6c6b1</anchor>
      <arglist>(const CesiumAsync::NetworkAssetDescriptor &amp;key) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; CesiumGeometry::QuadtreeTileID &gt;</name>
    <filename>structstd_1_1hash_3_01CesiumGeometry_1_1QuadtreeTileID_01_4.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>operator()</name>
      <anchorfile>structstd_1_1hash_3_01CesiumGeometry_1_1QuadtreeTileID_01_4.html</anchorfile>
      <anchor>a32659100b02af4484fcf58c84a899b76</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;key) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; CesiumGltfReader::NetworkImageAssetDescriptor &gt;</name>
    <filename>structstd_1_1hash_3_01CesiumGltfReader_1_1NetworkImageAssetDescriptor_01_4.html</filename>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>structstd_1_1hash_3_01CesiumGltfReader_1_1NetworkImageAssetDescriptor_01_4.html</anchorfile>
      <anchor>afe091b61db99cf790c7bfe26fc88116e</anchor>
      <arglist>(const CesiumGltfReader::NetworkImageAssetDescriptor &amp;key) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; CesiumGltfReader::NetworkSchemaAssetDescriptor &gt;</name>
    <filename>structstd_1_1hash_3_01CesiumGltfReader_1_1NetworkSchemaAssetDescriptor_01_4.html</filename>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>structstd_1_1hash_3_01CesiumGltfReader_1_1NetworkSchemaAssetDescriptor_01_4.html</anchorfile>
      <anchor>afb515e63dd66683ec4d9674721a81865</anchor>
      <arglist>(const CesiumGltfReader::NetworkSchemaAssetDescriptor &amp;key) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::I3dmToGltfConverter</name>
    <filename>structCesium3DTilesContent_1_1I3dmToGltfConverter.html</filename>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; GltfConverterResult &gt;</type>
      <name>convert</name>
      <anchorfile>structCesium3DTilesContent_1_1I3dmToGltfConverter.html</anchorfile>
      <anchor>ad77695b8b4154c6ebfd82d60d01b1ee1</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;instancesBinary, const CesiumGltfReader::GltfReaderOptions &amp;options, const AssetFetcher &amp;assetFetcher)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::IAssetAccessor</name>
    <filename>classCesiumAsync_1_1IAssetAccessor.html</filename>
    <member kind="typedef">
      <type>std::pair&lt; std::string, std::string &gt;</type>
      <name>THeader</name>
      <anchorfile>classCesiumAsync_1_1IAssetAccessor.html</anchorfile>
      <anchor>ab9efa397440bcf5eb039b3c368242ca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CesiumAsync::Future&lt; std::shared_ptr&lt; IAssetRequest &gt; &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumAsync_1_1IAssetAccessor.html</anchorfile>
      <anchor>ae568a57a571ef87f01784338a09defef</anchor>
      <arglist>(const AsyncSystem &amp;asyncSystem, const std::string &amp;url, const std::vector&lt; THeader &gt; &amp;headers={})=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CesiumAsync::Future&lt; std::shared_ptr&lt; IAssetRequest &gt; &gt;</type>
      <name>request</name>
      <anchorfile>classCesiumAsync_1_1IAssetAccessor.html</anchorfile>
      <anchor>a7ad13dd91f37709c96b7e4ee0d033143</anchor>
      <arglist>(const AsyncSystem &amp;asyncSystem, const std::string &amp;verb, const std::string &amp;url, const std::vector&lt; THeader &gt; &amp;headers=std::vector&lt; THeader &gt;(), const std::span&lt; const std::byte &gt; &amp;contentPayload={})=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tick</name>
      <anchorfile>classCesiumAsync_1_1IAssetAccessor.html</anchorfile>
      <anchor>a73dd437e29437d2a5089b8e31b25f5ec</anchor>
      <arglist>() noexcept=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::IAssetRequest</name>
    <filename>classCesiumAsync_1_1IAssetRequest.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>method</name>
      <anchorfile>classCesiumAsync_1_1IAssetRequest.html</anchorfile>
      <anchor>a02d5166e606f9ccd8c59daba3017b520</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>url</name>
      <anchorfile>classCesiumAsync_1_1IAssetRequest.html</anchorfile>
      <anchor>a123dd382de14b7218390bae3dcb4f4a0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const HttpHeaders &amp;</type>
      <name>headers</name>
      <anchorfile>classCesiumAsync_1_1IAssetRequest.html</anchorfile>
      <anchor>a81297de96ca759956df7ee0f58a4bc37</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const IAssetResponse *</type>
      <name>response</name>
      <anchorfile>classCesiumAsync_1_1IAssetRequest.html</anchorfile>
      <anchor>a04fbe6f1de2a95487f68993cddc31ebc</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::IAssetResponse</name>
    <filename>classCesiumAsync_1_1IAssetResponse.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IAssetResponse</name>
      <anchorfile>classCesiumAsync_1_1IAssetResponse.html</anchorfile>
      <anchor>abaee1631f5f97f86a9747279e0320f52</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>statusCode</name>
      <anchorfile>classCesiumAsync_1_1IAssetResponse.html</anchorfile>
      <anchor>af686a9054eaf3ba99a098b102704584d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>contentType</name>
      <anchorfile>classCesiumAsync_1_1IAssetResponse.html</anchorfile>
      <anchor>ad7b2ada0b82a9e551dbcafede5e6d284</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const HttpHeaders &amp;</type>
      <name>headers</name>
      <anchorfile>classCesiumAsync_1_1IAssetResponse.html</anchorfile>
      <anchor>a37ef683ab90f3dcba93680e0530a3ef5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::span&lt; const std::byte &gt;</type>
      <name>data</name>
      <anchorfile>classCesiumAsync_1_1IAssetResponse.html</anchorfile>
      <anchor>ab834f8d1b6bd4ec123447e0264760739</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::ICacheDatabase</name>
    <filename>classCesiumAsync_1_1ICacheDatabase.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual std::optional&lt; CacheItem &gt;</type>
      <name>getEntry</name>
      <anchorfile>classCesiumAsync_1_1ICacheDatabase.html</anchorfile>
      <anchor>aaa3efdfe5170ad631c80565d9145f954</anchor>
      <arglist>(const std::string &amp;key) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>storeEntry</name>
      <anchorfile>classCesiumAsync_1_1ICacheDatabase.html</anchorfile>
      <anchor>a42a40850571aefcef5384b1cf9193488</anchor>
      <arglist>(const std::string &amp;key, std::time_t expiryTime, const std::string &amp;url, const std::string &amp;requestMethod, const HttpHeaders &amp;requestHeaders, uint16_t statusCode, const HttpHeaders &amp;responseHeaders, const std::span&lt; const std::byte &gt; &amp;responseData)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>prune</name>
      <anchorfile>classCesiumAsync_1_1ICacheDatabase.html</anchorfile>
      <anchor>a93e0a259db6378a47b0a19d9b5093d6e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>clearAll</name>
      <anchorfile>classCesiumAsync_1_1ICacheDatabase.html</anchorfile>
      <anchor>a0f3242e5005f1713cd071cd99b412c3b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::IDepotOwningAsset</name>
    <filename>classCesiumUtility_1_1IDepotOwningAsset.html</filename>
    <templarg>typename TAssetType</templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>markDeletionCandidate</name>
      <anchorfile>classCesiumUtility_1_1IDepotOwningAsset.html</anchorfile>
      <anchor>af6b6e71bd28aef3aa115a57bd98a6d68</anchor>
      <arglist>(const TAssetType &amp;asset, bool threadOwnsDepotLock)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unmarkDeletionCandidate</name>
      <anchorfile>classCesiumUtility_1_1IDepotOwningAsset.html</anchorfile>
      <anchor>a42e9f5ac9320922a6c756f645f705b4c</anchor>
      <arglist>(const TAssetType &amp;asset, bool threadOwnsDepotLock)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::IExtensionJsonHandler</name>
    <filename>classCesiumJsonReader_1_1IExtensionJsonHandler.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1IExtensionJsonHandler.html</anchorfile>
      <anchor>a7bfe6c593edc7b9f6fc8cc7d0abfe229</anchor>
      <arglist>(IJsonHandler *pParentHandler, CesiumUtility::ExtensibleObject &amp;o, const std::string_view &amp;extensionName)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler &amp;</type>
      <name>getHandler</name>
      <anchorfile>classCesiumJsonReader_1_1IExtensionJsonHandler.html</anchorfile>
      <anchor>a78172b251a7e17ea16c36b788a4c6b62</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::IgnoreValueJsonHandler</name>
    <filename>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</filename>
    <base>CesiumJsonReader::IJsonHandler</base>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a524fedb394516ecb9b420b0e49a925a3</anchor>
      <arglist>(IJsonHandler *pParent) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a1e4c577192c455945f2100802d499799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a5c091b606fdc0148a6d9c0417236547c</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>ada5e4910598458d30380e385d5df2db9</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a9d96f6dda1abc02c4d16332d6326da55</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a8490083f56d2e7efcda6c74b726d33b0</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>ae855f8651f4fa8d3e7738a0bdb245acb</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>ad2f609a17a63d7b0d76b786e2a4276e8</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a3d1a88da3d3b182177aef971b21584ae</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>aad38723a2fb0768e4d40e09e846382cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectKey</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a46ee8224bc2d70f2698566f9bda361ae</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectEnd</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a5f4b1efadb9065e546ba190d11f6574b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>ad2aa1ef2ec11d6c8240d4a6a24a56849</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a1017ab9a78acd04dac903963f16eaa31</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a449473cdc3080d4e1f733f8d707143ed</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;()) override</arglist>
    </member>
    <member kind="function">
      <type>IJsonHandler *</type>
      <name>parent</name>
      <anchorfile>classCesiumJsonReader_1_1IgnoreValueJsonHandler.html</anchorfile>
      <anchor>a57b328d029a1de9f2d4ae927942aaeb6</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::IJsonHandler</name>
    <filename>classCesiumJsonReader_1_1IJsonHandler.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a3fc9a94422472b47a769d64d155a5991</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a58784ce489baa129f1883a9c6e537432</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>afeac3c5cfb20802cf50bee81c2c5d138</anchor>
      <arglist>(int32_t i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a1889d882d354b86a53faf5ae4057f78b</anchor>
      <arglist>(uint32_t i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>af532d5b74735305f471c3e85051ecdef</anchor>
      <arglist>(int64_t i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a1c80b6fb6752bed66ebec94087ec52b1</anchor>
      <arglist>(uint64_t i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a51c4e890532e6b795cac6615cd04209d</anchor>
      <arglist>(double d)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>add3ecbe6fa607ea43d14f2737c669fe5</anchor>
      <arglist>(const std::string_view &amp;str)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a8a4e59df296408c8d0de57dc9bed88bb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readObjectKey</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a192612321be7ffde9d81a84ac6303893</anchor>
      <arglist>(const std::string_view &amp;str)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readObjectEnd</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a40c2fe56e03277df2efd11414cd0f667</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a0773938f92951d38dab0beee46beff39</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a05e51e1322d6a72ffde139f593d68c49</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1IJsonHandler.html</anchorfile>
      <anchor>a5a278b19a131a6379fb9d30fd9fbe6ec</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;())=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Image</name>
    <filename>structCesiumGltf_1_1Image.html</filename>
    <base>CesiumGltf::ImageSpec</base>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; ImageAsset &gt;</type>
      <name>pAsset</name>
      <anchorfile>structCesiumGltf_1_1Image.html</anchorfile>
      <anchor>ab0a947348552c934b32a1e57a926da26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ImageAsset</name>
    <filename>structCesiumGltf_1_1ImageAsset.html</filename>
    <base>CesiumUtility::SharedAsset&lt; ImageAsset &gt;</base>
    <member kind="function">
      <type></type>
      <name>ImageAsset</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>a902ea99a53ae1321e4d825b6afa36ac2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>a9a37686e909fca6d711c4fa69af16fc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>width</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>aa044e0a78e7faba3c0e795dbbb7cd48c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>height</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>a2770998439df3927050d4b7b8434dafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>channels</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>abfe5967c6bb3ac2e5e5005af54bfa60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bytesPerChannel</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>a12d5659fe92696edbaed0d6e4a34f2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>compressedPixelFormat</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>afb474188b9e198b154eaa53aa4d649aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ImageAssetMipPosition &gt;</type>
      <name>mipPositions</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>a839601bf1a74d9658c3e6a340f027ad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>pixelData</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>afe91734a641b1b7bb0384b9ab8a878f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>sizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ImageAsset.html</anchorfile>
      <anchor>a026cd0dd193d606cdf11a37ae01522f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ImageAssetMipPosition</name>
    <filename>structCesiumGltf_1_1ImageAssetMipPosition.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>byteOffset</name>
      <anchorfile>structCesiumGltf_1_1ImageAssetMipPosition.html</anchorfile>
      <anchor>a75ff609019094554e913870dbc62e494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>byteSize</name>
      <anchorfile>structCesiumGltf_1_1ImageAssetMipPosition.html</anchorfile>
      <anchor>aa50262420f347aa1bae33f6de9c904e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ImageDecoder</name>
    <filename>classCesiumGltfReader_1_1ImageDecoder.html</filename>
    <member kind="function" static="yes">
      <type>static ImageReaderResult</type>
      <name>readImage</name>
      <anchorfile>classCesiumGltfReader_1_1ImageDecoder.html</anchorfile>
      <anchor>a32d0bac022f2e2a76245fac2e895d7a1</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data, const CesiumGltf::Ktx2TranscodeTargets &amp;ktx2TranscodeTargets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; std::string &gt;</type>
      <name>generateMipMaps</name>
      <anchorfile>classCesiumGltfReader_1_1ImageDecoder.html</anchorfile>
      <anchor>ab8de4bab10a1d89701b6840ab7378d1b</anchor>
      <arglist>(CesiumGltf::ImageAsset &amp;image)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>unsafeResize</name>
      <anchorfile>classCesiumGltfReader_1_1ImageDecoder.html</anchorfile>
      <anchor>a26d58923243b0c17bcd838d071347048</anchor>
      <arglist>(const std::byte *pInputPixels, int32_t inputWidth, int32_t inputHeight, int32_t inputStrideBytes, std::byte *pOutputPixels, int32_t outputWidth, int32_t outputHeight, int32_t outputStrideBytes, int32_t channels)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfContent::ImageManipulation</name>
    <filename>classCesiumGltfContent_1_1ImageManipulation.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsafeBlitImage</name>
      <anchorfile>classCesiumGltfContent_1_1ImageManipulation.html</anchorfile>
      <anchor>abf13b7f2ccd59db52900df293a52b188</anchor>
      <arglist>(std::byte *pTarget, size_t targetRowStride, const std::byte *pSource, size_t sourceRowStride, size_t sourceWidth, size_t sourceHeight, size_t bytesPerPixel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>blitImage</name>
      <anchorfile>classCesiumGltfContent_1_1ImageManipulation.html</anchorfile>
      <anchor>a9ea92ed6c75b1f0ea344c442a3f86cb2</anchor>
      <arglist>(CesiumGltf::ImageAsset &amp;target, const PixelRectangle &amp;targetPixels, const CesiumGltf::ImageAsset &amp;source, const PixelRectangle &amp;sourcePixels)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::byte &gt;</type>
      <name>savePng</name>
      <anchorfile>classCesiumGltfContent_1_1ImageManipulation.html</anchorfile>
      <anchor>a48d008b4f35a751ba9546a76266498d5</anchor>
      <arglist>(const CesiumGltf::ImageAsset &amp;image)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>savePng</name>
      <anchorfile>classCesiumGltfContent_1_1ImageManipulation.html</anchorfile>
      <anchor>ad7b529461d783abd84526d3f93901c16</anchor>
      <arglist>(const CesiumGltf::ImageAsset &amp;image, std::vector&lt; std::byte &gt; &amp;output)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ImageReader</name>
    <filename>classCesiumGltfReader_1_1ImageReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ImageReader</name>
      <anchorfile>classCesiumGltfReader_1_1ImageReader.html</anchorfile>
      <anchor>a0eb81186e6b9f4863172f927047cd65a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ImageReader.html</anchorfile>
      <anchor>ac25139900720131495e7e2c680698cf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ImageReader.html</anchorfile>
      <anchor>a1d4c243bdc114635c0b7f671ffc8e27a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Image &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ImageReader.html</anchorfile>
      <anchor>ad8149f1e5ed4f408b7ec59ff8cd88e47</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Image &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ImageReader.html</anchorfile>
      <anchor>a324302c9a5de13ada376bc8ccd3647b2</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Image &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ImageReader.html</anchorfile>
      <anchor>a0097fc24d8d33e9c49721354029ad261</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfReader::ImageReaderResult</name>
    <filename>structCesiumGltfReader_1_1ImageReaderResult.html</filename>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; CesiumGltf::ImageAsset &gt;</type>
      <name>pImage</name>
      <anchorfile>structCesiumGltfReader_1_1ImageReaderResult.html</anchorfile>
      <anchor>ab7935576da072f896518aa9851299514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesiumGltfReader_1_1ImageReaderResult.html</anchorfile>
      <anchor>aa6d574596405add97bcd416eda3151af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesiumGltfReader_1_1ImageReaderResult.html</anchorfile>
      <anchor>aef1bb079f2a9a7128942b3b056a16873</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ImageSpec</name>
    <filename>structCesiumGltf_1_1ImageSpec.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <class kind="struct">CesiumGltf::ImageSpec::MimeType</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ImageSpec.html</anchorfile>
      <anchor>ad61d96dda50174a3dacf6badde510d1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>uri</name>
      <anchorfile>structCesiumGltf_1_1ImageSpec.html</anchorfile>
      <anchor>a8fb528f7f997e4a7e9edddaa2de98b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>mimeType</name>
      <anchorfile>structCesiumGltf_1_1ImageSpec.html</anchorfile>
      <anchor>a1b6e492ef9a2b4af5d561546bc90cb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>bufferView</name>
      <anchorfile>structCesiumGltf_1_1ImageSpec.html</anchorfile>
      <anchor>a6d32adc6c562402ac99850344f8ab4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ImageSpec.html</anchorfile>
      <anchor>a2bb67944cec4dcebbba51fa872cd2b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ImageSpec</name>
      <anchorfile>structCesiumGltf_1_1ImageSpec.html</anchorfile>
      <anchor>a1656d9f88e2d161ee4d7eeaedf63bc96</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::ImplicitTiling</name>
    <filename>structCesium3DTiles_1_1ImplicitTiling.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">Cesium3DTiles::ImplicitTiling::SubdivisionScheme</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1ImplicitTiling.html</anchorfile>
      <anchor>a0c2b0a4cb87f5f344a10792b178f91fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>subdivisionScheme</name>
      <anchorfile>structCesium3DTiles_1_1ImplicitTiling.html</anchorfile>
      <anchor>af98a19bc0b5edd70988e855efdffe5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>subtreeLevels</name>
      <anchorfile>structCesium3DTiles_1_1ImplicitTiling.html</anchorfile>
      <anchor>a6252a01bfbbc5790704d7414c7c394e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>availableLevels</name>
      <anchorfile>structCesium3DTiles_1_1ImplicitTiling.html</anchorfile>
      <anchor>a415e3e502da2339fc09b8f1ccbccdb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Cesium3DTiles::Subtrees</type>
      <name>subtrees</name>
      <anchorfile>structCesium3DTiles_1_1ImplicitTiling.html</anchorfile>
      <anchor>ae6c9dc51fa309eba3ef1d2672a5b58da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1ImplicitTiling.html</anchorfile>
      <anchor>ac590baf0b03e2ecdc29e5a9a654d05d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::ImplicitTilingReader</name>
    <filename>classCesium3DTilesReader_1_1ImplicitTilingReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ImplicitTilingReader</name>
      <anchorfile>classCesium3DTilesReader_1_1ImplicitTilingReader.html</anchorfile>
      <anchor>afc7fa32dcbdedf37dc422ae8972005f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ImplicitTilingReader.html</anchorfile>
      <anchor>a8def5c327e25e3df2535d2bf1511ef1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1ImplicitTilingReader.html</anchorfile>
      <anchor>a988959b79c0d51b75b6a8568ded44d0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::ImplicitTiling &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ImplicitTilingReader.html</anchorfile>
      <anchor>ad668d2eb74013a55c882c16b71251566</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::ImplicitTiling &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ImplicitTilingReader.html</anchorfile>
      <anchor>a3f69a7d27326d8cb0afb3027d4f93b35</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::ImplicitTiling &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1ImplicitTilingReader.html</anchorfile>
      <anchor>af9063fce6120949d0e2dd4f55cabca89</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::ImplicitTilingUtilities</name>
    <filename>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>resolveUrl</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a76075ad810b0717a4dc38dfecb91374f</anchor>
      <arglist>(const std::string &amp;baseUrl, const std::string &amp;urlTemplate, const CesiumGeometry::QuadtreeTileID &amp;quadtreeID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>resolveUrl</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>afe71d529e8da19fde55ab16495ea96b7</anchor>
      <arglist>(const std::string &amp;baseUrl, const std::string &amp;urlTemplate, const CesiumGeometry::OctreeTileID &amp;octreeID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeLevelDenominator</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>aa2401bc6debf7821c1e992f807d89f2f</anchor>
      <arglist>(uint32_t level) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>computeMortonIndex</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>ae4c5e2a350f9d7c279c7136d6e78bae2</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;tileID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>computeMortonIndex</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a52ae81faa2c5b8fd1d557e7a74b69c82</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;tileID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>computeRelativeMortonIndex</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a111964d175bc909f4785f08444f648b5</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;subtreeID, const CesiumGeometry::QuadtreeTileID &amp;tileID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>computeRelativeMortonIndex</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>abc1353ff6372255fa43ca5a37bb9a649</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;subtreeRootID, const CesiumGeometry::OctreeTileID &amp;tileID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeometry::QuadtreeTileID</type>
      <name>getSubtreeRootID</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a6b528c809f0f78bffba680208112dce2</anchor>
      <arglist>(uint32_t subtreeLevels, const CesiumGeometry::QuadtreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeometry::OctreeTileID</type>
      <name>getSubtreeRootID</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a6404d5d51d40150ea60f3f2642fd7222</anchor>
      <arglist>(uint32_t subtreeLevels, const CesiumGeometry::OctreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeometry::QuadtreeTileID</type>
      <name>absoluteTileIDToRelative</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>afe7df68555efc8baa3d3a7fc5ca6e8d7</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;rootID, const CesiumGeometry::QuadtreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeometry::OctreeTileID</type>
      <name>absoluteTileIDToRelative</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a4a5d83775add829b4d208bc628a89561</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;rootID, const CesiumGeometry::OctreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QuadtreeChildren</type>
      <name>getChildren</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>aaea3cbe5dcbb7620b541e5049e46d383</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static OctreeChildren</type>
      <name>getChildren</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>aa7ab59433e9ef614ab9d697e90ec7de5</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Cesium3DTiles::BoundingVolume</type>
      <name>computeBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a9c37f31c952aadb100e6582e8bf66c21</anchor>
      <arglist>(const Cesium3DTiles::BoundingVolume &amp;rootBoundingVolume, const CesiumGeometry::QuadtreeTileID &amp;tileID, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Cesium3DTiles::BoundingVolume</type>
      <name>computeBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>ac8130776b5682d097f37a56ae62d9955</anchor>
      <arglist>(const Cesium3DTiles::BoundingVolume &amp;rootBoundingVolume, const CesiumGeometry::OctreeTileID &amp;tileID, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeospatial::BoundingRegion</type>
      <name>computeBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a45308bd06019c6fa7fa19860f54ebfa1</anchor>
      <arglist>(const CesiumGeospatial::BoundingRegion &amp;rootBoundingVolume, const CesiumGeometry::QuadtreeTileID &amp;tileID, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeospatial::BoundingRegion</type>
      <name>computeBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>abd9f70dbdb912807323689709a99bc02</anchor>
      <arglist>(const CesiumGeospatial::BoundingRegion &amp;rootBoundingVolume, const CesiumGeometry::OctreeTileID &amp;tileID, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeometry::OrientedBoundingBox</type>
      <name>computeBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>ab88b63dc506f1208e852cd29771af568</anchor>
      <arglist>(const CesiumGeometry::OrientedBoundingBox &amp;rootBoundingVolume, const CesiumGeometry::QuadtreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeometry::OrientedBoundingBox</type>
      <name>computeBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a813349866bcd6c5ec461a9d24f9c7ad0</anchor>
      <arglist>(const CesiumGeometry::OrientedBoundingBox &amp;rootBoundingVolume, const CesiumGeometry::OctreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeospatial::S2CellBoundingVolume</type>
      <name>computeBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a57766660df9c87e72db46bce5b2f9924</anchor>
      <arglist>(const CesiumGeospatial::S2CellBoundingVolume &amp;rootBoundingVolume, const CesiumGeometry::QuadtreeTileID &amp;tileID, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumGeospatial::S2CellBoundingVolume</type>
      <name>computeBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1ImplicitTilingUtilities.html</anchorfile>
      <anchor>a2d428583e6c82ba848e310fe750ef31c</anchor>
      <arglist>(const CesiumGeospatial::S2CellBoundingVolume &amp;rootBoundingVolume, const CesiumGeometry::OctreeTileID &amp;tileID, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IndexFromAccessor</name>
    <filename>structCesiumGltf_1_1IndexFromAccessor.html</filename>
    <member kind="function">
      <type>int64_t</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1IndexFromAccessor.html</anchorfile>
      <anchor>a76f90e0904b0cb334643fcbbebbefea6</anchor>
      <arglist>(std::monostate)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1IndexFromAccessor.html</anchorfile>
      <anchor>a3d0a4046d501c243113aaa41fa65d566</anchor>
      <arglist>(const CesiumGltf::AccessorView&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>index</name>
      <anchorfile>structCesiumGltf_1_1IndexFromAccessor.html</anchorfile>
      <anchor>a74ebac504fd44c8f58b2e1fa7219feba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IndicesForFaceFromAccessor</name>
    <filename>structCesiumGltf_1_1IndicesForFaceFromAccessor.html</filename>
    <member kind="function">
      <type>std::array&lt; int64_t, 3 &gt;</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1IndicesForFaceFromAccessor.html</anchorfile>
      <anchor>aafcc6bef548575fe35546daf4ba448e6</anchor>
      <arglist>(std::monostate)</arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; int64_t, 3 &gt;</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1IndicesForFaceFromAccessor.html</anchorfile>
      <anchor>a216e9baca8f7fd6a991f29bea2ad9e0a</anchor>
      <arglist>(const AccessorView&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>faceIndex</name>
      <anchorfile>structCesiumGltf_1_1IndicesForFaceFromAccessor.html</anchorfile>
      <anchor>a5234eeba249ff317ab9ec598cdd0c124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>vertexCount</name>
      <anchorfile>structCesiumGltf_1_1IndicesForFaceFromAccessor.html</anchorfile>
      <anchor>acf9d39f409e42520f9fd6033265cae9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>primitiveMode</name>
      <anchorfile>structCesiumGltf_1_1IndicesForFaceFromAccessor.html</anchorfile>
      <anchor>af0f94a9c14c2fc169c25c0b049adb150</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::InstanceAttributeSemantics</name>
    <filename>structCesiumGltf_1_1InstanceAttributeSemantics.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>TRANSLATION</name>
      <anchorfile>structCesiumGltf_1_1InstanceAttributeSemantics.html</anchorfile>
      <anchor>a39488f689dd3993058bc8f66eb978e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>ROTATION</name>
      <anchorfile>structCesiumGltf_1_1InstanceAttributeSemantics.html</anchorfile>
      <anchor>a08c90dac54c6fd03944a08f06e814ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>SCALE</name>
      <anchorfile>structCesiumGltf_1_1InstanceAttributeSemantics.html</anchorfile>
      <anchor>a81db6b2bf62f2befb88c27da5e93d17c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::array&lt; std::string, 8 &gt;</type>
      <name>FEATURE_ID_n</name>
      <anchorfile>structCesiumGltf_1_1InstanceAttributeSemantics.html</anchorfile>
      <anchor>aacd84e0f12cb8503dc858e0b1d45c18a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::IntegerJsonHandler</name>
    <filename>classCesiumJsonReader_1_1IntegerJsonHandler.html</filename>
    <templarg>typename T</templarg>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1IntegerJsonHandler.html</anchorfile>
      <anchor>aa1dc60c44b5439bbbee7e5fadc24a77d</anchor>
      <arglist>(IJsonHandler *pParent, T *pInteger)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getObject</name>
      <anchorfile>classCesiumJsonReader_1_1IntegerJsonHandler.html</anchorfile>
      <anchor>afa317c4839c422706d9707c35af4aca2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1IntegerJsonHandler.html</anchorfile>
      <anchor>ab321b88a4877d2f2b4885b2c8729948c</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1IntegerJsonHandler.html</anchorfile>
      <anchor>a5d9498254d411e82fa6ecc33eeee41bc</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1IntegerJsonHandler.html</anchorfile>
      <anchor>abdd41e60a85c72e2ef73715ec7b18700</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1IntegerJsonHandler.html</anchorfile>
      <anchor>a76a8c455b7c60814428d6c3355871489</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1IntegerJsonHandler.html</anchorfile>
      <anchor>a647afa1c3fcf0f6d646afe795886b8ea</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1IntegerJsonHandler.html</anchorfile>
      <anchor>af8134db41605e4146f7c84c65557fd31</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::InterpolatedVertex</name>
    <filename>structCesiumGeometry_1_1InterpolatedVertex.html</filename>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>structCesiumGeometry_1_1InterpolatedVertex.html</anchorfile>
      <anchor>ab568d2e4c317de4b8e57d0a72b976e82</anchor>
      <arglist>(const InterpolatedVertex &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>structCesiumGeometry_1_1InterpolatedVertex.html</anchorfile>
      <anchor>a3096f913d3949bed8f6ee390245c8fed</anchor>
      <arglist>(const InterpolatedVertex &amp;other) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>first</name>
      <anchorfile>structCesiumGeometry_1_1InterpolatedVertex.html</anchorfile>
      <anchor>accee1d9ca1efb09e443891d717aaf7c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>second</name>
      <anchorfile>structCesiumGeometry_1_1InterpolatedVertex.html</anchorfile>
      <anchor>ad434be9be59cd9c4dd5f4b6982a22c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>t</name>
      <anchorfile>structCesiumGeometry_1_1InterpolatedVertex.html</anchorfile>
      <anchor>aa5e6178ad9052193734d34f01395f490</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AnimationSampler::Interpolation</name>
    <filename>structCesiumGltf_1_1AnimationSampler_1_1Interpolation.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>LINEAR</name>
      <anchorfile>structCesiumGltf_1_1AnimationSampler_1_1Interpolation.html</anchorfile>
      <anchor>a55254cf21bdbd20dcf2511d41bbc528c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>STEP</name>
      <anchorfile>structCesiumGltf_1_1AnimationSampler_1_1Interpolation.html</anchorfile>
      <anchor>ad51f10aa46ff58ba89a3523538fa5474</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>CUBICSPLINE</name>
      <anchorfile>structCesiumGltf_1_1AnimationSampler_1_1Interpolation.html</anchorfile>
      <anchor>a0dc0e8a0a0ce205d13b23a47903658a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::IntersectionTests</name>
    <filename>classCesiumGeometry_1_1IntersectionTests.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dvec3 &gt;</type>
      <name>rayPlane</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>ae85b6aecffcb8332c835cca6b478ad03</anchor>
      <arglist>(const Ray &amp;ray, const Plane &amp;plane) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dvec2 &gt;</type>
      <name>rayEllipsoid</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a5b2efc7f8944dd7641a2823c3d1bb2b6</anchor>
      <arglist>(const Ray &amp;ray, const glm::dvec3 &amp;radii) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>pointInTriangle</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a86d260111721b2c355a1a5bcf373d94c</anchor>
      <arglist>(const glm::dvec2 &amp;point, const glm::dvec2 &amp;triangleVertA, const glm::dvec2 &amp;triangleVertB, const glm::dvec2 &amp;triangleVertC) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>pointInTriangle</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a1989753ca8a0ea7f2f62b3a0df892b29</anchor>
      <arglist>(const glm::dvec3 &amp;point, const glm::dvec3 &amp;triangleVertA, const glm::dvec3 &amp;triangleVertB, const glm::dvec3 &amp;triangleVertC) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>pointInTriangle</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a6bcf68911b2f35d0eb9a162a46ec0a48</anchor>
      <arglist>(const glm::dvec3 &amp;point, const glm::dvec3 &amp;triangleVertA, const glm::dvec3 &amp;triangleVertB, const glm::dvec3 &amp;triangleVertC, glm::dvec3 &amp;barycentricCoordinates) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dvec3 &gt;</type>
      <name>rayTriangle</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a4ff305f4193325db881e0359e269e317</anchor>
      <arglist>(const Ray &amp;ray, const glm::dvec3 &amp;p0, const glm::dvec3 &amp;p1, const glm::dvec3 &amp;p2, bool cullBackFaces=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>rayTriangleParametric</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a82f34da6c30d8e3402c7cea2032d37c5</anchor>
      <arglist>(const Ray &amp;ray, const glm::dvec3 &amp;p0, const glm::dvec3 &amp;p1, const glm::dvec3 &amp;p2, bool cullBackFaces=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dvec3 &gt;</type>
      <name>rayAABB</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a646aeff4ffc851cd7b4b5a1377bb381e</anchor>
      <arglist>(const Ray &amp;ray, const AxisAlignedBox &amp;aabb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>rayAABBParametric</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a88883b0a131be4e3d827f0700df5f835</anchor>
      <arglist>(const Ray &amp;ray, const AxisAlignedBox &amp;aabb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dvec3 &gt;</type>
      <name>rayOBB</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a27ffcac5fa7a6fb419d5d148b975657f</anchor>
      <arglist>(const Ray &amp;ray, const OrientedBoundingBox &amp;obb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>rayOBBParametric</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a1c67415f8fc888d973c3f71939e5d11c</anchor>
      <arglist>(const Ray &amp;ray, const OrientedBoundingBox &amp;obb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dvec3 &gt;</type>
      <name>raySphere</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>aa4b810b2e32416e74e2f7068b7a368ce</anchor>
      <arglist>(const Ray &amp;ray, const BoundingSphere &amp;sphere)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>raySphereParametric</name>
      <anchorfile>classCesiumGeometry_1_1IntersectionTests.html</anchorfile>
      <anchor>a1ac8914b5ec48122682a2071fd707444</anchor>
      <arglist>(const Ray &amp;ray, const BoundingSphere &amp;sphere)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfContent::GltfUtilities::IntersectResult</name>
    <filename>structCesiumGltfContent_1_1GltfUtilities_1_1IntersectResult.html</filename>
    <member kind="variable">
      <type>std::optional&lt; RayGltfHit &gt;</type>
      <name>hit</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities_1_1IntersectResult.html</anchorfile>
      <anchor>a741bf2c5dbca8b73e916ff3ddd4c83cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities_1_1IntersectResult.html</anchorfile>
      <anchor>aa5376613eb2af2e320aa511fbc1680ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::IntrusivePointer</name>
    <filename>classCesiumUtility_1_1IntrusivePointer.html</filename>
    <templarg>class T</templarg>
    <member kind="function">
      <type></type>
      <name>IntrusivePointer</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>addd8a621acb70b27eede0b2b3c0159cd</anchor>
      <arglist>(T *p=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntrusivePointer</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a6da37310d34090aae0597209913a9d4b</anchor>
      <arglist>(const IntrusivePointer&lt; T &gt; &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntrusivePointer</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a78dfde115322a90143c380e6a71f179f</anchor>
      <arglist>(const IntrusivePointer&lt; U &gt; &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntrusivePointer</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a2d91ff099aa1a3a6112b197fccdf20ab</anchor>
      <arglist>(IntrusivePointer&lt; T &gt; &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntrusivePointer</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a5d65044afa6e2fdbe8b9bc8a0a0319fe</anchor>
      <arglist>(IntrusivePointer&lt; U &gt; &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IntrusivePointer</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>acb51ab4648372358b8dd6a60b8c4ae26</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>emplace</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>ae2d6e87844a2c4983387d4feee41cfc4</anchor>
      <arglist>(ConstructorArgumentTypes &amp;&amp;... constructorArguments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a61927c086b04ed5631e89e293f9d4762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IntrusivePointer &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a2bc346b0d3182cb6ae6ef9b3f775b645</anchor>
      <arglist>(const IntrusivePointer &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IntrusivePointer &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a664189509d487ced2cc7cec185a5e29c</anchor>
      <arglist>(const IntrusivePointer&lt; U &gt; &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IntrusivePointer &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a37df608a9f762f7f132b0d363c1c4c5f</anchor>
      <arglist>(IntrusivePointer &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IntrusivePointer &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>aa76833242b6c9514ce3bdafc126a4323</anchor>
      <arglist>(T *p) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a5c2a158d44a21e621b6e44bd8360bbbb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a0b7b55c93655c45a4b3d7afbb4d95faa</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a5fa1b6053fc911d4a200b545837f62c6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>ae199180250f57d3bff965cae887b1412</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a0001e742980a2edc2d32987c446dc839</anchor>
      <arglist>(const IntrusivePointer&lt; T &gt; &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a1c7b9905ea3f93780f7cde6460103cc9</anchor>
      <arglist>(const IntrusivePointer&lt; U &gt; &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a6e7aa7b341b32aaf5fe6c47b014ef306</anchor>
      <arglist>(const IntrusivePointer&lt; T &gt; &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>aed2fffe4cb520d28547e117848e6b4af</anchor>
      <arglist>(const T *pRhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCesiumUtility_1_1IntrusivePointer.html</anchorfile>
      <anchor>a38276baf8eb65f3051c78d2b0232a89f</anchor>
      <arglist>(const T *pRhs) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::IonRasterOverlay</name>
    <filename>classCesiumRasterOverlays_1_1IonRasterOverlay.html</filename>
    <base>CesiumRasterOverlays::RasterOverlay</base>
    <member kind="function">
      <type></type>
      <name>IonRasterOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1IonRasterOverlay.html</anchorfile>
      <anchor>ad1c5b0a0a87abfd6ec7f280ae9ae8000</anchor>
      <arglist>(const std::string &amp;name, int64_t ionAssetID, const std::string &amp;ionAccessToken, const RasterOverlayOptions &amp;overlayOptions={}, const std::string &amp;ionAssetEndpointUrl=&quot;https://api.cesium.com/&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CesiumAsync::Future&lt; CreateTileProviderResult &gt;</type>
      <name>createTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1IonRasterOverlay.html</anchorfile>
      <anchor>ae0a203f4dcb4489754aa9129765aa4ca</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumUtility::CreditSystem &gt; &amp;pCreditSystem, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; pOwner) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::IPrepareRasterOverlayRendererResources</name>
    <filename>classCesiumRasterOverlays_1_1IPrepareRasterOverlayRendererResources.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>prepareRasterInLoadThread</name>
      <anchorfile>classCesiumRasterOverlays_1_1IPrepareRasterOverlayRendererResources.html</anchorfile>
      <anchor>afe9169e7fd318e7235d0e38ea4371584</anchor>
      <arglist>(CesiumGltf::ImageAsset &amp;image, const std::any &amp;rendererOptions)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>prepareRasterInMainThread</name>
      <anchorfile>classCesiumRasterOverlays_1_1IPrepareRasterOverlayRendererResources.html</anchorfile>
      <anchor>ad47cb3aea9927494583d1494a1b383ce</anchor>
      <arglist>(RasterOverlayTile &amp;rasterTile, void *pLoadThreadResult)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>freeRaster</name>
      <anchorfile>classCesiumRasterOverlays_1_1IPrepareRasterOverlayRendererResources.html</anchorfile>
      <anchor>aeaf5bc3384b6cd8c4da620733729d851</anchor>
      <arglist>(const RasterOverlayTile &amp;rasterTile, void *pLoadThreadResult, void *pMainThreadResult) noexcept=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::IPrepareRendererResources</name>
    <filename>classCesium3DTilesSelection_1_1IPrepareRendererResources.html</filename>
    <base>CesiumRasterOverlays::IPrepareRasterOverlayRendererResources</base>
    <member kind="function" virtualness="pure">
      <type>virtual CesiumAsync::Future&lt; TileLoadResultAndRenderResources &gt;</type>
      <name>prepareInLoadThread</name>
      <anchorfile>classCesium3DTilesSelection_1_1IPrepareRendererResources.html</anchorfile>
      <anchor>adab6d8fa1ab89ac6d5479049930424f7</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, TileLoadResult &amp;&amp;tileLoadResult, const glm::dmat4 &amp;transform, const std::any &amp;rendererOptions)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void *</type>
      <name>prepareInMainThread</name>
      <anchorfile>classCesium3DTilesSelection_1_1IPrepareRendererResources.html</anchorfile>
      <anchor>a64b6b51736d92fc283b1fc1e80cbe660</anchor>
      <arglist>(Tile &amp;tile, void *pLoadThreadResult)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>free</name>
      <anchorfile>classCesium3DTilesSelection_1_1IPrepareRendererResources.html</anchorfile>
      <anchor>a2d047553e0a227094a7e428515aafcf4</anchor>
      <arglist>(Tile &amp;tile, void *pLoadThreadResult, void *pMainThreadResult) noexcept=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>attachRasterInMainThread</name>
      <anchorfile>classCesium3DTilesSelection_1_1IPrepareRendererResources.html</anchorfile>
      <anchor>a43a99582bb62579fac17bb513cba8619</anchor>
      <arglist>(const Tile &amp;tile, int32_t overlayTextureCoordinateID, const CesiumRasterOverlays::RasterOverlayTile &amp;rasterTile, void *pMainThreadRendererResources, const glm::dvec2 &amp;translation, const glm::dvec2 &amp;scale)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>detachRasterInMainThread</name>
      <anchorfile>classCesium3DTilesSelection_1_1IPrepareRendererResources.html</anchorfile>
      <anchor>a0c5a962093bf8bc302e6758fb4451e24</anchor>
      <arglist>(const Tile &amp;tile, int32_t overlayTextureCoordinateID, const CesiumRasterOverlays::RasterOverlayTile &amp;rasterTile, void *pMainThreadRendererResources) noexcept=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataArray</name>
    <filename>structCesiumGltf_1_1IsMetadataArray.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataArray&lt; PropertyArrayCopy&lt; T &gt; &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataArray_3_01PropertyArrayCopy_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataArray&lt; PropertyArrayView&lt; T &gt; &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataArray_3_01PropertyArrayView_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataArray&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataArray_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataBoolean</name>
    <filename>structCesiumGltf_1_1IsMetadataBoolean.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataBoolean&lt; bool &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataBoolean_3_01bool_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataBoolean&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataBoolean_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataBooleanArray</name>
    <filename>structCesiumGltf_1_1IsMetadataBooleanArray.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataBooleanArray&lt; PropertyArrayView&lt; bool &gt; &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataBooleanArray_3_01PropertyArrayView_3_01bool_01_4_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataBooleanArray&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataBooleanArray_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataFloating</name>
    <filename>structCesiumGltf_1_1IsMetadataFloating.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataFloating&lt; double &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataFloating_3_01double_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataFloating&lt; float &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataFloating_3_01float_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataFloating&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataFloating_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; int16_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01int16__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; int32_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01int32__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; int64_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01int64__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; int8_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01int8__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; uint16_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01uint16__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; uint32_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01uint32__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; uint64_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01uint64__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataInteger&lt; uint8_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataInteger_3_01uint8__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataMatN</name>
    <filename>structCesiumGltf_1_1IsMetadataMatN.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataMatN&lt; glm::mat&lt; n, n, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataMatN_3_01glm_1_1mat_3_01n_00_01n_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>glm::length_t n</templarg>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <base>CesiumGltf::IsMetadataScalar&lt; T &gt;</base>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataMatN&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataMatN_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataNumeric</name>
    <filename>structCesiumGltf_1_1IsMetadataNumeric.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataNumeric&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataNumeric_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr bool</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1IsMetadataNumeric_3_01T_01_4.html</anchorfile>
      <anchor>ad54b4a03663453454c58cdb1cd3deb54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataNumericArray</name>
    <filename>structCesiumGltf_1_1IsMetadataNumericArray.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataNumericArray&lt; PropertyArrayCopy&lt; T &gt; &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataNumericArray_3_01PropertyArrayCopy_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr bool</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1IsMetadataNumericArray_3_01PropertyArrayCopy_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a586e63107eb96869f69339ef1f467dd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataNumericArray&lt; PropertyArrayView&lt; T &gt; &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataNumericArray_3_01PropertyArrayView_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr bool</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1IsMetadataNumericArray_3_01PropertyArrayView_3_01T_01_4_01_4.html</anchorfile>
      <anchor>ae661bd0eddf9b3443b2e624b8e86fcb3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataNumericArray&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataNumericArray_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; double &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01double_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; float &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01float_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; int16_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01int16__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; int32_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01int32__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; int64_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01int64__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; int8_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01int8__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; uint16_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01uint16__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; uint32_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01uint32__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; uint64_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01uint64__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataScalar&lt; uint8_t &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataScalar_3_01uint8__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataString</name>
    <filename>structCesiumGltf_1_1IsMetadataString.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataString&lt; std::string_view &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataString_3_01std_1_1string__view_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataString&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataString_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataStringArray</name>
    <filename>structCesiumGltf_1_1IsMetadataStringArray.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataStringArray&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataStringArray_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataStringArray&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataStringArray_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataVecN</name>
    <filename>structCesiumGltf_1_1IsMetadataVecN.html</filename>
    <templarg>typename... T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataVecN&lt; glm::vec&lt; n, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataVecN_3_01glm_1_1vec_3_01n_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>glm::length_t n</templarg>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <base>CesiumGltf::IsMetadataScalar&lt; T &gt;</base>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::IsMetadataVecN&lt; T &gt;</name>
    <filename>structCesiumGltf_1_1IsMetadataVecN_3_01T_01_4.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::ITaskProcessor</name>
    <filename>classCesiumAsync_1_1ITaskProcessor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ITaskProcessor</name>
      <anchorfile>classCesiumAsync_1_1ITaskProcessor.html</anchorfile>
      <anchor>ae1b06d95c7e37b68c5510c18945e9d5d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>startTask</name>
      <anchorfile>classCesiumAsync_1_1ITaskProcessor.html</anchorfile>
      <anchor>a9e22f39f2534c1adfdc0052e16669afc</anchor>
      <arglist>(std::function&lt; void()&gt; f)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::OctreeChildren::iterator</name>
    <filename>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</filename>
    <member kind="typedef">
      <type>std::forward_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>a517204076d1a8b5e32ba3149b7bbe334</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CesiumGeometry::OctreeTileID</type>
      <name>value_type</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>a015ee827382f45c9e46c5840974bda83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>difference_type</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>ab87f42b774bc39f41a5adc7e780958b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CesiumGeometry::OctreeTileID *</type>
      <name>pointer</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>a371a79ee624ecab3ac5da3702e9dc827</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CesiumGeometry::OctreeTileID &amp;</type>
      <name>reference</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>a1a09820f4dcaac72852d929c3f04ba30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>iterator</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>a87023f3920c7a8f517a38bf92fcdd264</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;parentTileID, bool isEnd) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::OctreeTileID &amp;</type>
      <name>operator*</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>a2264ec07041f8222f6ea1d3a3702874d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::OctreeTileID *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>ace8d9dd8a9bf8e83fd646f38b303a3dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>a59c6006b55fa0db9d12440a2f93e0679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>operator++</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>aaf4534293b861d80f6c1718cc0707e4f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>a365ebcae60cb776fc7c70d89c5a85aeb</anchor>
      <arglist>(const iterator &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren_1_1iterator.html</anchorfile>
      <anchor>ac87a473a0ec7d8b25e5a582f43ec358d</anchor>
      <arglist>(const iterator &amp;rhs) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::QuadtreeChildren::iterator</name>
    <filename>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</filename>
    <member kind="typedef">
      <type>std::forward_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>a74dbcd0de7410f29f51484f028acfc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CesiumGeometry::QuadtreeTileID</type>
      <name>value_type</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>ac9bd4c267bfb96013d9da996e21c276b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>difference_type</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>a2b968d0b54e9ea3f4cedf74877a1c775</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CesiumGeometry::QuadtreeTileID *</type>
      <name>pointer</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>ac5337f738c0f229878ff01769830dc66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CesiumGeometry::QuadtreeTileID &amp;</type>
      <name>reference</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>a17d11d01a06079da1bf17392c18bbb96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>iterator</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>afa12da18634e0d29804e717ce1945b3a</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;parentTileID, bool isEnd) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::QuadtreeTileID &amp;</type>
      <name>operator*</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>ad524070caf5cc6419778bae5220f950a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::QuadtreeTileID *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>a6ed2517cda40fc7e770ea65f9a8e973f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>aaba20f978cf8bf379b8c646cf6471afc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>operator++</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>a227edb6f0ca7873296a1e205665a160e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>ad8b3a9c86ae87cf6aa4660ead80b843f</anchor>
      <arglist>(const iterator &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren_1_1iterator.html</anchorfile>
      <anchor>a9c168fca1ca18eb365c9d5c0094b764c</anchor>
      <arglist>(const iterator &amp;rhs) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::ITileExcluder</name>
    <filename>classCesium3DTilesSelection_1_1ITileExcluder.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startNewFrame</name>
      <anchorfile>classCesium3DTilesSelection_1_1ITileExcluder.html</anchorfile>
      <anchor>a5e25be27879df4d3c2dd9a03f305ecb3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>shouldExclude</name>
      <anchorfile>classCesium3DTilesSelection_1_1ITileExcluder.html</anchorfile>
      <anchor>a474f536c03f70c6934023074dcf6d0bc</anchor>
      <arglist>(const Tile &amp;tile) const noexcept=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::ITilesetHeightSampler</name>
    <filename>classCesium3DTilesSelection_1_1ITilesetHeightSampler.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual CesiumAsync::Future&lt; SampleHeightResult &gt;</type>
      <name>sampleHeights</name>
      <anchorfile>classCesium3DTilesSelection_1_1ITilesetHeightSampler.html</anchorfile>
      <anchor>a6a25736a00ea21fe661ca2dac34f8405</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, std::vector&lt; CesiumGeospatial::Cartographic &gt; &amp;&amp;positions)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::JsonHandler</name>
    <filename>classCesiumJsonReader_1_1JsonHandler.html</filename>
    <base>CesiumJsonReader::IJsonHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a01fbb5306c806c1d574db4643c1f6d99</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>ad5da111cc51cc6efbb08f58f22ec9754</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a1ea3a376d363caa01a3889a1c5b41ab6</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>ac99f7c1d7bc76d647a32224057d83293</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a8b6de7d2abb3e507054697bbed8b6fca</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a1c3050c287390a78b3c0902d082e977f</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>ad60f0905ad998e59163ed29124b82d2c</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a95cf23bf65519f9ace5e92698f430ecc</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a3096f970544c85f58bfe6c7cbda6dfc4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectKey</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>ae1485094c6848a547613e149f4ed8745</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectEnd</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>aa910ec0cc0b423fc7da0ad9f19d108c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>ab48b2c3aff8be25a75b6cf9cd9adf513</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a583ada52ddfef765e665cc87d2bd6a20</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a8c5efe7c4a40586c751bc4788025627b</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;()) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>ac3b50c71aec4504a9634bb50a4332f9f</anchor>
      <arglist>(IJsonHandler *pParent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IJsonHandler *</type>
      <name>parent</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>ab3124f81a414ca226a65da0f0981cd13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IJsonHandler *</type>
      <name>ignoreAndReturnToParent</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>a5c9c57876c5bc1c1a59ff36f0b11392b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IJsonHandler *</type>
      <name>ignoreAndContinue</name>
      <anchorfile>classCesiumJsonReader_1_1JsonHandler.html</anchorfile>
      <anchor>aa543f3212ef91616cd5d600e82f41009</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::JsonHelpers</name>
    <filename>classCesiumUtility_1_1JsonHelpers.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>getScalarProperty</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a28da139d05ec260830a149ca2ed2303d</anchor>
      <arglist>(const rapidjson::Value &amp;tileJson, const std::string &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dmat4x4 &gt;</type>
      <name>getTransformProperty</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a5adb5fe9ebe02c531aca4e93dda8684f</anchor>
      <arglist>(const rapidjson::Value &amp;tileJson, const std::string &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; std::vector&lt; double &gt; &gt;</type>
      <name>getDoubles</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>aae60cd58d9fb1803c9e8a537181b6b37</anchor>
      <arglist>(const rapidjson::Value &amp;json, int32_t expectedSize, const std::string &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getStringOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a10c537aa87dafda5a5a2652cb7f79795</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key, const std::string &amp;defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getStringOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a618796570c119412d2ab6cab7bba7fbe</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getDoubleOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>afc2a279e4ab78186c742adcee6c18fef</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key, double defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getDoubleOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a9c7e20c2d668057bf030ac612cf7dbf3</anchor>
      <arglist>(const rapidjson::Value &amp;json, double defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>getUint32OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a84e07fffc790798c290d100b57563022</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key, uint32_t defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>getUint32OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a4f167370451a58ec95c1bd3e48cef78e</anchor>
      <arglist>(const rapidjson::Value &amp;json, uint32_t defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int32_t</type>
      <name>getInt32OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a0adfaaee2c87ede6cd1bc40cb6ce2d6b</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key, int32_t defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int32_t</type>
      <name>getInt32OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a722371ef23d4ed21ff9aba62081c3213</anchor>
      <arglist>(const rapidjson::Value &amp;json, int32_t defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>getUint64OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>ad7410fe059454ddb8fb331640cb7bd79</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key, uint64_t defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>getUint64OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>af31da3918d291dae8e67611f8648409e</anchor>
      <arglist>(const rapidjson::Value &amp;json, uint64_t defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int64_t</type>
      <name>getInt64OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a8a25d1cf081887a80f81acba50a1c914</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key, int64_t defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int64_t</type>
      <name>getInt64OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a999a8923fee43793b8e28ed852d486f2</anchor>
      <arglist>(const rapidjson::Value &amp;json, int64_t defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getBoolOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a99371a7ebfedcdd79564295b62e79032</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key, bool defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getBoolOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a2cb528cd4be14b73afac690fb949840a</anchor>
      <arglist>(const rapidjson::Value &amp;json, bool defaultValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>getStrings</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>ad549aec1fc730d0969ac8a10ba6bf265</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; int64_t &gt;</type>
      <name>getInt64s</name>
      <anchorfile>classCesiumUtility_1_1JsonHelpers.html</anchorfile>
      <anchor>a8e3be2acb7878c84176f80c40e8eb2fd</anchor>
      <arglist>(const rapidjson::Value &amp;json, const std::string &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::JsonObjectJsonHandler</name>
    <filename>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</filename>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>aba24a567583a78f2f284d103a65880c2</anchor>
      <arglist>(IJsonHandler *pParent, CesiumUtility::JsonValue *pValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readNull</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>a62f4fe03fc734b0f504d52c12ab24295</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readBool</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>aa106b0cf0c1676828d3ce2858aa29596</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt32</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>af2d959346d9a71dc39457a3598f60c7c</anchor>
      <arglist>(int32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint32</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>a954d6472f4e71cc75a8e227617ddc27b</anchor>
      <arglist>(uint32_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readInt64</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>ad1720e8a6aab424235520079343ee8a3</anchor>
      <arglist>(int64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readUint64</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>a9e304b0ac8a55e2110d40ebd07601fdb</anchor>
      <arglist>(uint64_t i) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readDouble</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>ae3120bf23ef53e1bce8db3cb1fbf75f8</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>a3adf83d2696809af48050aa67f8d31ef</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>a4a970a1b0d175950ef993899aabccb6e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectKey</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>a16df36d9468d5f6bb6d821a7baf552ec</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectEnd</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>ac7056105f3b5a3f0b43862a368361c16</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayStart</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>a98c7eb1d9c67317b63d42dfce09f40e3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readArrayEnd</name>
      <anchorfile>classCesiumJsonReader_1_1JsonObjectJsonHandler.html</anchorfile>
      <anchor>adf44cd5bf8135b672446175b9afdb569</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::JsonReader</name>
    <filename>classCesiumJsonReader_1_1JsonReader.html</filename>
    <member kind="function" static="yes">
      <type>static ReadJsonResult&lt; typename T::ValueType &gt;</type>
      <name>readJson</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReader.html</anchorfile>
      <anchor>ad63e66b7e27f634da5222f1896930663</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data, T &amp;handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ReadJsonResult&lt; typename T::ValueType &gt;</type>
      <name>readJson</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReader.html</anchorfile>
      <anchor>ad18da21d5ad47fdacfe11e8b428e6541</anchor>
      <arglist>(const rapidjson::Value &amp;jsonValue, T &amp;handler)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::JsonReaderOptions</name>
    <filename>classCesiumJsonReader_1_1JsonReaderOptions.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>getCaptureUnknownProperties</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReaderOptions.html</anchorfile>
      <anchor>af0a6463ed4ddc292930734a8c6090373</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCaptureUnknownProperties</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReaderOptions.html</anchorfile>
      <anchor>a38982076503b448cb150e692f6842cf8</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerExtension</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReaderOptions.html</anchorfile>
      <anchor>a9b189d5e64b47a54aa128a7c50a1fff0</anchor>
      <arglist>(const std::string &amp;extensionName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerExtension</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReaderOptions.html</anchorfile>
      <anchor>ae539217e7e25d8be649c262e84ea9428</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ExtensionState</type>
      <name>getExtensionState</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReaderOptions.html</anchorfile>
      <anchor>a81e0798c697b733e60ea37a85d96e970</anchor>
      <arglist>(const std::string &amp;extensionName) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtensionState</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReaderOptions.html</anchorfile>
      <anchor>ad0997561c011cb063d8589bf58394359</anchor>
      <arglist>(const std::string &amp;extensionName, ExtensionState newState)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; IExtensionJsonHandler &gt;</type>
      <name>createExtensionHandler</name>
      <anchorfile>classCesiumJsonReader_1_1JsonReaderOptions.html</anchorfile>
      <anchor>a0b91dd8fb519c2b8814c0642ab42630c</anchor>
      <arglist>(const std::string_view &amp;extensionName, const std::string &amp;extendedObjectType) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::JsonValue</name>
    <filename>classCesiumUtility_1_1JsonValue.html</filename>
    <member kind="typedef">
      <type>std::nullptr_t</type>
      <name>Null</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>af36b27fef032568520cde7490fab7cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>bool</type>
      <name>Bool</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a7d9da704fb45d5917f5f04e3153417cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>String</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a96e2f9c0104ea4cce62826a32135b1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, JsonValue &gt;</type>
      <name>Object</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a16fc73aeddef5ec406e3b8c39fa64214</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; JsonValue &gt;</type>
      <name>Array</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a491a669c2859bff17d27fd319d335121</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>aa5722a1ba1ad0688cb6693a48ba273db</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a769e90bf6036c24cc4ee6cd04bef4a10</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>aadf8af1b10b26e002cee9d65baef182e</anchor>
      <arglist>(double v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a196b17f64a2f11d4c2eb72f4940950c4</anchor>
      <arglist>(std::int8_t v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ac3154806c70de3d0bb6ed371ed536df8</anchor>
      <arglist>(std::uint8_t v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a370f2359359a8fd5f56382dcc3786d00</anchor>
      <arglist>(std::int16_t v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a6245b32c77212aec8e9fc6e746cf53b5</anchor>
      <arglist>(std::uint16_t v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ace099d24bdc438e09d85b4f67712ca30</anchor>
      <arglist>(std::int32_t v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>abb799d5608208e84d1c3111b8bbb6817</anchor>
      <arglist>(std::uint32_t v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a9fee0eb37eb3547708717e71b47c9083</anchor>
      <arglist>(std::int64_t v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ad0d52e897953d862c8e98b7de1c5345f</anchor>
      <arglist>(std::uint64_t v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a7df7a61c42fca485655a9ad6cf7b4ffc</anchor>
      <arglist>(bool v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>abaf3731fdfd5a8d08b3af28bfc497164</anchor>
      <arglist>(const std::string &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a7714cb0c630e55ed2cebfaf927550e25</anchor>
      <arglist>(std::string &amp;&amp;v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a982b3e1f378db1b69e369dc92e106e0a</anchor>
      <arglist>(const char *v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a1f31783762190d26e670ab3895aab4ec</anchor>
      <arglist>(const std::map&lt; std::string, JsonValue &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>aaf5d92f215fc3156626db49675f9acb0</anchor>
      <arglist>(std::map&lt; std::string, JsonValue &gt; &amp;&amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ae528c77a779bf8729b5c91962b1fa6b5</anchor>
      <arglist>(const std::vector&lt; JsonValue &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a46250cb35a9ad393af6e83c3da96508e</anchor>
      <arglist>(std::vector&lt; JsonValue &gt; &amp;&amp;v) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a615371f90b6bf598ab7dcdb30e9fa001</anchor>
      <arglist>(std::initializer_list&lt; JsonValue &gt; v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonValue</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ae9bbe1fefcd8223dec9f678f2ab288d2</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; const std::string, JsonValue &gt; &gt; v)</arglist>
    </member>
    <member kind="function">
      <type>const JsonValue *</type>
      <name>getValuePtrForKey</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ac0f2b8923c0766c7da8681a2d68f6081</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>JsonValue *</type>
      <name>getValuePtrForKey</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a4dee5c711481f907bb3dc3bea90901a1</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getValuePtrForKey</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a824b02e0fc31115bd09a1fab5a538803</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getValuePtrForKey</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a9f268f78292c5bc4b149f8a49c298dc8</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; To &gt;</type>
      <name>getSafeNumericalValueForKey</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a1b860aad13d08fd650ce83b96c0e2ab9</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>getSafeNumericalValueOrDefaultForKey</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ad9399000ffdc3abbfb3c17f6349745ac</anchor>
      <arglist>(const std::string &amp;key, To defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasKey</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>af775c4456b40dc17c8de411827d16eb5</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; To &gt;</type>
      <name>getSafeNumber</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ad0dee4aacf4b2ca0ad82831ed1449e18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>getSafeNumberOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ab5a5ead79e48599687b3b8a5b4e047c1</anchor>
      <arglist>(To defaultValue) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const JsonValue::Object &amp;</type>
      <name>getObject</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>abe4e050f85471083ff176a605fc370d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonValue::String &amp;</type>
      <name>getString</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a2ff2d67784c7a35525d6a5d9f1ce34ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonValue::Array &amp;</type>
      <name>getArray</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ae0aae4d3a8662c37990debf27fa05fc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getArrayOfStrings</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a054b8bde34d02acba8976b891e51bacc</anchor>
      <arglist>(const std::string &amp;defaultString) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBool</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a1d70cccb551d72c0d3fe0f76d87aa413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDouble</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ab8dc3346b03fb35be55b7c0bfebe6306</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint64_t</type>
      <name>getUint64</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a826e32c7697176e36e05eed9a9620bdd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int64_t</type>
      <name>getInt64</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>aae761d6713d5fb4e092cfb67e613e719</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBoolOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ab4236c46d3d0a759561c1c5d83c22295</anchor>
      <arglist>(bool defaultValue) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const JsonValue::String</type>
      <name>getStringOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a761352b5697d0e6a5a047f25d75d80d5</anchor>
      <arglist>(String defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDoubleOrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a4d837204523d4743f93661eabe939b63</anchor>
      <arglist>(double defaultValue) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::uint64_t</type>
      <name>getUint64OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ac1797cd659e8c880bce2b9fb215a001b</anchor>
      <arglist>(std::uint64_t defaultValue) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::int64_t</type>
      <name>getInt64OrDefault</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a94370394ba90da4680f0905df256e584</anchor>
      <arglist>(std::int64_t defaultValue) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a7f56cb2b96116521c65c3bc8ac4cea6f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNumber</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a375fd6de1238969f19627a77a04ae4a9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBool</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a7047a867f5e2f03c769f4927a40e9f48</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isString</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>aa7bec2d04f65039a6467fde8ad339947</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isObject</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>aaba6074acd037b6a2804d2c58af1795a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArray</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>aa2d2854c45d0a4ca4af2f9630de7f09d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDouble</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a3c2fb7cd27a4d78f55fb6ab2cd7af390</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUint64</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a9dde7f809b10bfa2d4655a6c1c0e5317</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInt64</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a2ceb69079dd4a1c44652120aee5120b7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a82e6e45dbc4fb88d1d38bf60671d9f83</anchor>
      <arglist>(const JsonValue &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>ac6a67b811225f64d13f14917449d079f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>std::variant&lt; Null, double, std::uint64_t, std::int64_t, Bool, String, Object, Array &gt;</type>
      <name>value</name>
      <anchorfile>classCesiumUtility_1_1JsonValue.html</anchorfile>
      <anchor>a6b26b2a8dd2ec6b9f2ea57b2292de282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonWriter::JsonWriter</name>
    <filename>classCesiumJsonWriter_1_1JsonWriter.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Null</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>acc1e99eb7a57663a340f592da0328155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bool</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a79ab6c0e29580a3d37c727384db88983</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Int</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a17a730c25f4a036b487eea62e07ee8f7</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Uint</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>aead10975cdb2d26bbdd999548a905450</anchor>
      <arglist>(unsigned int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Uint64</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ab6cd0c78336670f402abfcc1cc43a35d</anchor>
      <arglist>(std::uint64_t i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Int64</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>afa61b9f6b361bce943991a42992b9ef3</anchor>
      <arglist>(std::int64_t i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Double</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a4ba3ac4a4d8883a567bf7a5be0e30bda</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RawNumber</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a8b2c30c0fd8523690ec3abb3a2e69505</anchor>
      <arglist>(const char *str, unsigned int length, bool copy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Key</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ab06f4b28fe0541ca9bad7a3181fb6cc9</anchor>
      <arglist>(std::string_view string)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>String</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>acf9c8523b20f072b95f03d95bba5f2d6</anchor>
      <arglist>(std::string_view string)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>StartObject</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a45f0f7e35ca6009c4d261f68167de4a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>EndObject</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a76aead99bfe3c7ad8e98495b77011715</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>StartArray</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>afc872d59a1eaab70ab9fc997e5cccba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>EndArray</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ac4eda9269a1493fcae5251f2500b06ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a460fa8d75f225ac159e2eceebb57422a</anchor>
      <arglist>(std::int32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a1f8fae23f6b31ef5e283d8c1a1f2edae</anchor>
      <arglist>(std::uint32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>abb715661bb29a388f7b91ab794cb7d39</anchor>
      <arglist>(std::int64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ac5bd3d0948be08fa24202443dee78d5a</anchor>
      <arglist>(std::uint64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a68e37d66cafc0c2b9e8e61250cdfe1aa</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>aa876a972ad291aeca0bd9212a8b29251</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a4696921fdf8f815db3bb8b351279dfdc</anchor>
      <arglist>(std::nullptr_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>abea6f79cbbbb4515ff0814cae6d53b25</anchor>
      <arglist>(std::string_view string)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ad3a25059e9e9d3d6d6b89e0824f5055f</anchor>
      <arglist>(std::string_view keyName, std::int32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ad18c66ecff6d15013ff8a494922628ab</anchor>
      <arglist>(std::string_view keyName, std::uint32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ab3c2ef30330a48c37224a89a1649c999</anchor>
      <arglist>(std::string_view keyName, std::int64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a3104c432566c77fccad1de6e52cc93cb</anchor>
      <arglist>(std::string_view keyName, std::uint64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a6a79275c703a2cde86a3a08aa392d421</anchor>
      <arglist>(std::string_view keyName, std::string_view value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a59c90ca41ee8e77b6e47aa2a2061ab44</anchor>
      <arglist>(std::string_view keyName, float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a0bdf591f03992c9d47a08620ad1e01b2</anchor>
      <arglist>(std::string_view keyName, double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ac998cca7a67ed8c6c05ecb5eff7d2118</anchor>
      <arglist>(std::string_view keyName, std::nullptr_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyArray</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a6c3c860a7c97e17f2f000a4f7024e202</anchor>
      <arglist>(std::string_view keyName, std::function&lt; void(void)&gt; insideArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>KeyObject</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a8aed938f5bc5c4f0a90403e42a706246</anchor>
      <arglist>(std::string_view keyName, std::function&lt; void(void)&gt; insideObject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a9d8bddb3bf8fa9febeb454b2f00d2418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string_view</type>
      <name>toStringView</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>adbd572efea8d5f9d6bd93645b77af400</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::byte &gt;</type>
      <name>toBytes</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>af9660e877cecbf94156e5e8d214140b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emplaceError</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a8883d9302009936a5da067ded9cde949</anchor>
      <arglist>(ErrorStr &amp;&amp;error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emplaceWarning</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a341dabf6005bbf05b3503f11196e2ed5</anchor>
      <arglist>(WarningStr &amp;&amp;warning)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getErrors</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>a370b0ae8b729374837562ab18c896258</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getWarnings</name>
      <anchorfile>classCesiumJsonWriter_1_1JsonWriter.html</anchorfile>
      <anchor>ae600b0c3f882d4a1cdc5fb9353f9b45d</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::KhrTextureTransform</name>
    <filename>classCesiumGltf_1_1KhrTextureTransform.html</filename>
    <member kind="function">
      <type></type>
      <name>KhrTextureTransform</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>ad0a3ac0064be95a3bf2326195b80a0d9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KhrTextureTransform</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>a13d816f6ec421ade6aee6453c6f168b7</anchor>
      <arglist>(const ExtensionKhrTextureTransform &amp;extension) noexcept</arglist>
    </member>
    <member kind="function">
      <type>KhrTextureTransformStatus</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>aa8072a05a77827a314e2f94fdc9a1809</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec2</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>ae7c1945055c0e46361452c17f16191bd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rotation</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>a410b4943742c66a8f9d5538649c92181</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec2</type>
      <name>rotationSineCosine</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>a0ede37567921f97459d701f33b425b23</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec2</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>a5815c6e78753d47cf963076393cd4c9c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec2</type>
      <name>applyTransform</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>aaddbdce2df5a76e04178e7925d83e12c</anchor>
      <arglist>(double u, double v) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>getTexCoordSetIndex</name>
      <anchorfile>classCesiumGltf_1_1KhrTextureTransform.html</anchorfile>
      <anchor>a773b3b6af99fc497faf8f9c8174cdf9b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Ktx2TranscodeTargets</name>
    <filename>structCesiumGltf_1_1Ktx2TranscodeTargets.html</filename>
    <member kind="function">
      <type></type>
      <name>Ktx2TranscodeTargets</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>a5083bbc5313e39d2c02fd46c2dfdfe05</anchor>
      <arglist>(const SupportedGpuCompressedPixelFormats &amp;supportedFormats, bool preserveHighQuality)</arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>ETC1S_R</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>a774fdd0047d1936ab52d163f7f7804d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>ETC1S_RG</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>ae434a835dacfa86f933aedbcf15fa574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>ETC1S_RGB</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>aadc3df0d4ed64fb97e3b7331efe6bb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>ETC1S_RGBA</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>aa0cbfcfff24e8046bcfc91be3eff733f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>UASTC_R</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>a4d9dfc91def24801bf19313b1893e377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>UASTC_RG</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>a03b3d0fd9e477836bb552f918cc274f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>UASTC_RGB</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>a0caf55ba02dc5408b90aeecade97e698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GpuCompressedPixelFormat</type>
      <name>UASTC_RGBA</name>
      <anchorfile>structCesiumGltf_1_1Ktx2TranscodeTargets.html</anchorfile>
      <anchor>ab448dc989a04ea1601db6ee986100ac9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumQuantizedMeshTerrain::Layer</name>
    <filename>structCesiumQuantizedMeshTerrain_1_1Layer.html</filename>
    <base>CesiumQuantizedMeshTerrain::LayerSpec</base>
    <member kind="function">
      <type>std::optional&lt; CesiumGeospatial::Projection &gt;</type>
      <name>getProjection</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1Layer.html</anchorfile>
      <anchor>afdae893f6b73e3911147ed25c064a005</anchor>
      <arglist>(const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CesiumGeometry::QuadtreeTilingScheme &gt;</type>
      <name>getTilingScheme</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1Layer.html</anchorfile>
      <anchor>ab2f09da93c255a5cac028a426320f1de</anchor>
      <arglist>(const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CesiumGeospatial::BoundingRegion &gt;</type>
      <name>getRootBoundingRegion</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1Layer.html</anchorfile>
      <anchor>afd631bb0d14fe2556e3769c22642567c</anchor>
      <arglist>(const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumQuantizedMeshTerrain::LayerReader</name>
    <filename>classCesiumQuantizedMeshTerrain_1_1LayerReader.html</filename>
    <member kind="function">
      <type></type>
      <name>LayerReader</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerReader.html</anchorfile>
      <anchor>ac9207916a3f250c24c3aa2b9d81d3158</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerReader.html</anchorfile>
      <anchor>a1fac518682ffb66abc8164f1163510e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerReader.html</anchorfile>
      <anchor>a37b7c4317e5c04ccfacab6cee354386f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumQuantizedMeshTerrain::Layer &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerReader.html</anchorfile>
      <anchor>a8684bfc9e3bef1bb53fdb20372ddb2e6</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumQuantizedMeshTerrain::Layer &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerReader.html</anchorfile>
      <anchor>ab45700bdb8bd855058329605069224e0</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumQuantizedMeshTerrain::Layer &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerReader.html</anchorfile>
      <anchor>a4ee167b8564368e37a2dd2ff4daa9ca9</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumQuantizedMeshTerrain::LayerSpec</name>
    <filename>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a117dd81e59c8c7cff884953652ac11ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>attribution</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>adf063c5edff0f092907e0cc01df560ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::vector&lt; CesiumQuantizedMeshTerrain::AvailabilityRectangle &gt; &gt;</type>
      <name>available</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a9d6779abbe9d4cd536113480a040bb6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>bounds</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a77ef760f7232ab63339975cf149af96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>acb7bcb7b780efceedd621863e66bee31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionsProperty</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a3d8e145facc3d2317cc32af7265ddb9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>format</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>ab41e43d11c2fe6926358e3fae32bd7dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>maxzoom</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a759353076c3d16efde5f42fa584a9c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>minzoom</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a155481f06e56422e84d4b0c1af48b33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>metadataAvailability</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>ada9abdb5a447724b4f711bf8f22d1fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a29b51fb7dc69915eefc591f78dc329e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>parentUrl</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a109b229bc247a882ec191b249d6b4893</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>projection</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a875f74c507b23e0a690eca18121bfdf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>scheme</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>aed29e366b1dfdc601295658969877639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tiles</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a6018d6af675320fc9a51f9e18ee48f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>aed4e99377e8c280abc554fbe476e4329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>a28ef1bfbe2ba9eadd2eae03bb8a21442</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LayerSpec</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerSpec.html</anchorfile>
      <anchor>aa0335095c8d30aa663a721270aadbc17</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumQuantizedMeshTerrain::LayerWriter</name>
    <filename>classCesiumQuantizedMeshTerrain_1_1LayerWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>LayerWriter</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerWriter.html</anchorfile>
      <anchor>a23bad9fac66220c3688c10c3d8224692</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerWriter.html</anchorfile>
      <anchor>ad32420d56dbf8af3c325a008d4034a12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerWriter.html</anchorfile>
      <anchor>addea1d20c10836e108c689fdff888534</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LayerWriterResult</type>
      <name>write</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1LayerWriter.html</anchorfile>
      <anchor>ae40a913df8e923235696d10a61e59498</anchor>
      <arglist>(const CesiumQuantizedMeshTerrain::Layer &amp;layer, const LayerWriterOptions &amp;options=LayerWriterOptions()) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumQuantizedMeshTerrain::LayerWriterOptions</name>
    <filename>structCesiumQuantizedMeshTerrain_1_1LayerWriterOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>prettyPrint</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerWriterOptions.html</anchorfile>
      <anchor>a097a8501a5365748bbea517549ab6482</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumQuantizedMeshTerrain::LayerWriterResult</name>
    <filename>structCesiumQuantizedMeshTerrain_1_1LayerWriterResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>bytes</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerWriterResult.html</anchorfile>
      <anchor>ab39e0497c056e27984336fc40c94b407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerWriterResult.html</anchorfile>
      <anchor>a2b12318219b7f59dcc1bb66368653abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1LayerWriterResult.html</anchorfile>
      <anchor>a7f8af4720b4a723a916fc28656f29d8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::ListTokensOptions</name>
    <filename>structCesiumIonClient_1_1ListTokensOptions.html</filename>
    <member kind="variable">
      <type>std::optional&lt; int32_t &gt;</type>
      <name>limit</name>
      <anchorfile>structCesiumIonClient_1_1ListTokensOptions.html</anchorfile>
      <anchor>acadd2624b86e398b71628d12a27e2053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int32_t &gt;</type>
      <name>page</name>
      <anchorfile>structCesiumIonClient_1_1ListTokensOptions.html</anchorfile>
      <anchor>a5a88a9150ccd5da0b0f6c944d1eb32c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>search</name>
      <anchorfile>structCesiumIonClient_1_1ListTokensOptions.html</anchorfile>
      <anchor>a56a3bf6814769eaf3a23605416655139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>sortBy</name>
      <anchorfile>structCesiumIonClient_1_1ListTokensOptions.html</anchorfile>
      <anchor>a9ef670e14e3ad37a9968322c67df0c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; SortOrder &gt;</type>
      <name>sortOrder</name>
      <anchorfile>structCesiumIonClient_1_1ListTokensOptions.html</anchorfile>
      <anchor>af03a162f8d2d9388ce7bd43fa0eaa9ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::LoadedRasterOverlayImage</name>
    <filename>structCesiumRasterOverlays_1_1LoadedRasterOverlayImage.html</filename>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadedRasterOverlayImage.html</anchorfile>
      <anchor>a4480c947244b8a95ac502ca5231b4a53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; CesiumGltf::ImageAsset &gt;</type>
      <name>pImage</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadedRasterOverlayImage.html</anchorfile>
      <anchor>ab71971363cf24ff1815e20e99f93f958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeometry::Rectangle</type>
      <name>rectangle</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadedRasterOverlayImage.html</anchorfile>
      <anchor>a9c83073a0448f74d87e09fdac6f86ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumUtility::Credit &gt;</type>
      <name>credits</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadedRasterOverlayImage.html</anchorfile>
      <anchor>a97795997b2a6b1ca8921a16bd872147c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::ErrorList</type>
      <name>errorList</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadedRasterOverlayImage.html</anchorfile>
      <anchor>a4a76c015e1d8b7b5dd775a8a7ad5ea6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>moreDetailAvailable</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadedRasterOverlayImage.html</anchorfile>
      <anchor>aafd8ad36124b3929bed23fef4f934705</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::LoadTileImageFromUrlOptions</name>
    <filename>structCesiumRasterOverlays_1_1LoadTileImageFromUrlOptions.html</filename>
    <member kind="variable">
      <type>CesiumGeometry::Rectangle</type>
      <name>rectangle</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadTileImageFromUrlOptions.html</anchorfile>
      <anchor>a60ce82c881ec445ba59cdf1a294b98ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumUtility::Credit &gt;</type>
      <name>credits</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadTileImageFromUrlOptions.html</anchorfile>
      <anchor>a8c1a8339f4b5c3b25219291bd9207897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>moreDetailAvailable</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadTileImageFromUrlOptions.html</anchorfile>
      <anchor>a99e9df655a58521b2255d13e792a086e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allowEmptyImages</name>
      <anchorfile>structCesiumRasterOverlays_1_1LoadTileImageFromUrlOptions.html</anchorfile>
      <anchor>af1d0e01e2d2fad67d57038d38129a721</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::LocalHorizontalCoordinateSystem</name>
    <filename>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalHorizontalCoordinateSystem</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>a95c160d217afeab06b96b2feaa4d3dba</anchor>
      <arglist>(const Cartographic &amp;origin, LocalDirection xAxisDirection=LocalDirection::East, LocalDirection yAxisDirection=LocalDirection::North, LocalDirection zAxisDirection=LocalDirection::Up, double scaleToMeters=1.0, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalHorizontalCoordinateSystem</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>af6ba2c0169f909d805a6cde147b3883c</anchor>
      <arglist>(const glm::dvec3 &amp;originEcef, LocalDirection xAxisDirection=LocalDirection::East, LocalDirection yAxisDirection=LocalDirection::North, LocalDirection zAxisDirection=LocalDirection::Up, double scaleToMeters=1.0, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalHorizontalCoordinateSystem</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>aaf605d0fdb98002b2430256cdec40a8c</anchor>
      <arglist>(const glm::dmat4 &amp;localToEcef)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalHorizontalCoordinateSystem</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>a1c715f85332ab5031db71f32fb2f43c5</anchor>
      <arglist>(const glm::dmat4 &amp;localToEcef, const glm::dmat4 &amp;ecefToLocal)</arglist>
    </member>
    <member kind="function">
      <type>const glm::dmat4 &amp;</type>
      <name>getLocalToEcefTransformation</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>aaec3a7f6dd6f3825004adc45bd4f435c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dmat4 &amp;</type>
      <name>getEcefToLocalTransformation</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>a482d398f8215b946786d888b68c08a1e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>localPositionToEcef</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>a68ef33c7d201a161e7225d7adfeaf513</anchor>
      <arglist>(const glm::dvec3 &amp;localPosition) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>ecefPositionToLocal</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>a70dee277832ce2d39710e3d3abaabd17</anchor>
      <arglist>(const glm::dvec3 &amp;ecefPosition) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>localDirectionToEcef</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>a78562df8c089c4ac33e2cd5c6fd21b2a</anchor>
      <arglist>(const glm::dvec3 &amp;localDirection) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>ecefDirectionToLocal</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>a23a7766a5103b6b662f2a24c0b40977b</anchor>
      <arglist>(const glm::dvec3 &amp;ecefDirection) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dmat4</type>
      <name>computeTransformationToAnotherLocal</name>
      <anchorfile>classCesiumGeospatial_1_1LocalHorizontalCoordinateSystem.html</anchorfile>
      <anchor>acbe4a635b388827261d406fcb0944c37</anchor>
      <arglist>(const LocalHorizontalCoordinateSystem &amp;target) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Sampler::MagFilter</name>
    <filename>structCesiumGltf_1_1Sampler_1_1MagFilter.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>NEAREST</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1MagFilter.html</anchorfile>
      <anchor>aa9d077286b1eb726dcc748662f04040e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>LINEAR</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1MagFilter.html</anchorfile>
      <anchor>a4c0540049adfd3ad31cdbd3192999bda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorTypes::MAT2</name>
    <filename>structCesiumGltf_1_1AccessorTypes_1_1MAT2.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1AccessorTypes_1_1MAT2.html</anchorfile>
      <anchor>aa426ab5617777e131490cfb0d97d5663</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorTypes::MAT3</name>
    <filename>structCesiumGltf_1_1AccessorTypes_1_1MAT3.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1AccessorTypes_1_1MAT3.html</anchorfile>
      <anchor>afcf12ce689adc3a9df02ffe1e2e79c1c</anchor>
      <arglist>[9]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorTypes::MAT4</name>
    <filename>structCesiumGltf_1_1AccessorTypes_1_1MAT4.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1AccessorTypes_1_1MAT4.html</anchorfile>
      <anchor>ac144e8a019d82dde5469da0c6c7bf288</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Material</name>
    <filename>structCesiumGltf_1_1Material.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <class kind="struct">CesiumGltf::Material::AlphaMode</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>a6d289899629f229c2a5944d18b42e726</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::MaterialPBRMetallicRoughness &gt;</type>
      <name>pbrMetallicRoughness</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>aadb323eca43cd1b4b1e348967906dba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::MaterialNormalTextureInfo &gt;</type>
      <name>normalTexture</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>a2a10900c103085c0ef356a0ec1e0f490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::MaterialOcclusionTextureInfo &gt;</type>
      <name>occlusionTexture</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>aa84146afc2c3738fafc9b7c78f0b815a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::TextureInfo &gt;</type>
      <name>emissiveTexture</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>ab4e0ff3b9d3381da320e883582521dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>emissiveFactor</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>a305c67469c7cfe8767d2069f9bb95e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>alphaMode</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>a9c1061727c71495d31347075397712db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alphaCutoff</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>a22522f29f6af2d5f14748aa1ab5e6601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>doubleSided</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>a70b87aed6585c29455c59b0a942f3449</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Material.html</anchorfile>
      <anchor>a1701640bd7c88105d82dea2ed0cd0fcd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MaterialNormalTextureInfo</name>
    <filename>structCesiumGltf_1_1MaterialNormalTextureInfo.html</filename>
    <base>CesiumGltf::TextureInfo</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1MaterialNormalTextureInfo.html</anchorfile>
      <anchor>ad86f2f8f6f186f8e88673cb6e58bb512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>scale</name>
      <anchorfile>structCesiumGltf_1_1MaterialNormalTextureInfo.html</anchorfile>
      <anchor>af28bcb9f2b701951f04f5d3a0f8116c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1MaterialNormalTextureInfo.html</anchorfile>
      <anchor>a5d202269b1d6a4cb72bb0e7f439b0b6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::MaterialNormalTextureInfoReader</name>
    <filename>classCesiumGltfReader_1_1MaterialNormalTextureInfoReader.html</filename>
    <member kind="function">
      <type></type>
      <name>MaterialNormalTextureInfoReader</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialNormalTextureInfoReader.html</anchorfile>
      <anchor>a596859991cd3a366525a135c9f6cdd6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialNormalTextureInfoReader.html</anchorfile>
      <anchor>aef4ec5e13e2b0975da1d70d69f261919</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialNormalTextureInfoReader.html</anchorfile>
      <anchor>a369081540276677b4ede0c8c4454159a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::MaterialNormalTextureInfo &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialNormalTextureInfoReader.html</anchorfile>
      <anchor>aad5352e6d57449791a06368b9f85d5e7</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::MaterialNormalTextureInfo &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialNormalTextureInfoReader.html</anchorfile>
      <anchor>a352d698508e4d32fb33c09664b77454f</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::MaterialNormalTextureInfo &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialNormalTextureInfoReader.html</anchorfile>
      <anchor>a9c2f2e448228c3d09196a0f9d2430721</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MaterialOcclusionTextureInfo</name>
    <filename>structCesiumGltf_1_1MaterialOcclusionTextureInfo.html</filename>
    <base>CesiumGltf::TextureInfo</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1MaterialOcclusionTextureInfo.html</anchorfile>
      <anchor>a96dbcccaec164c1caf5a72445c14cbcf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>strength</name>
      <anchorfile>structCesiumGltf_1_1MaterialOcclusionTextureInfo.html</anchorfile>
      <anchor>a328dc233e5b17acbaf50e95cfd51ad94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1MaterialOcclusionTextureInfo.html</anchorfile>
      <anchor>a670672d4eb9ec86907772cfddba83724</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::MaterialOcclusionTextureInfoReader</name>
    <filename>classCesiumGltfReader_1_1MaterialOcclusionTextureInfoReader.html</filename>
    <member kind="function">
      <type></type>
      <name>MaterialOcclusionTextureInfoReader</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialOcclusionTextureInfoReader.html</anchorfile>
      <anchor>a0d533df12721411273531b166d4cbb39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialOcclusionTextureInfoReader.html</anchorfile>
      <anchor>af808dac78275440c766083b3f2f8d172</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialOcclusionTextureInfoReader.html</anchorfile>
      <anchor>a2fab9b02263a49043620fb928ab3e537</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::MaterialOcclusionTextureInfo &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialOcclusionTextureInfoReader.html</anchorfile>
      <anchor>a10a977b800722f25097088577cad39ee</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::MaterialOcclusionTextureInfo &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialOcclusionTextureInfoReader.html</anchorfile>
      <anchor>aa7925d980f5fb3bba050a52d4d049461</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::MaterialOcclusionTextureInfo &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialOcclusionTextureInfoReader.html</anchorfile>
      <anchor>aea6cd2485e92962b66e3d27dc719017e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MaterialPBRMetallicRoughness</name>
    <filename>structCesiumGltf_1_1MaterialPBRMetallicRoughness.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1MaterialPBRMetallicRoughness.html</anchorfile>
      <anchor>a29f58a9e2c311d344770e2201f496105</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>baseColorFactor</name>
      <anchorfile>structCesiumGltf_1_1MaterialPBRMetallicRoughness.html</anchorfile>
      <anchor>a21a844eec27e43a84d29caaed24df292</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::TextureInfo &gt;</type>
      <name>baseColorTexture</name>
      <anchorfile>structCesiumGltf_1_1MaterialPBRMetallicRoughness.html</anchorfile>
      <anchor>a8e0b2e191b77dd51fa3da248eb43b47a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>metallicFactor</name>
      <anchorfile>structCesiumGltf_1_1MaterialPBRMetallicRoughness.html</anchorfile>
      <anchor>a07da921748eddd69c6492cad574458b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>roughnessFactor</name>
      <anchorfile>structCesiumGltf_1_1MaterialPBRMetallicRoughness.html</anchorfile>
      <anchor>acbfcafdce16b421f8913d2554693a266</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::TextureInfo &gt;</type>
      <name>metallicRoughnessTexture</name>
      <anchorfile>structCesiumGltf_1_1MaterialPBRMetallicRoughness.html</anchorfile>
      <anchor>a32cb51517c9dda3906725aefc442df2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1MaterialPBRMetallicRoughness.html</anchorfile>
      <anchor>a15564d7dde7e6bca2060e9181c912606</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::MaterialPBRMetallicRoughnessReader</name>
    <filename>classCesiumGltfReader_1_1MaterialPBRMetallicRoughnessReader.html</filename>
    <member kind="function">
      <type></type>
      <name>MaterialPBRMetallicRoughnessReader</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialPBRMetallicRoughnessReader.html</anchorfile>
      <anchor>ab1730c0f4b7755f4ea906ed2b9ed5055</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialPBRMetallicRoughnessReader.html</anchorfile>
      <anchor>a843f90ad80b949efd5f5b8c1830067be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialPBRMetallicRoughnessReader.html</anchorfile>
      <anchor>affa08a7ee93ee555618e53c70c75cf59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::MaterialPBRMetallicRoughness &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialPBRMetallicRoughnessReader.html</anchorfile>
      <anchor>a8d292dec4753648e2fc58d8f312e194c</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::MaterialPBRMetallicRoughness &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialPBRMetallicRoughnessReader.html</anchorfile>
      <anchor>adb75afe60ddb9456f65f0dc78a132680</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::MaterialPBRMetallicRoughness &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialPBRMetallicRoughnessReader.html</anchorfile>
      <anchor>a5acb84a9313a9f8a57f3f6687ea61a3b</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::MaterialReader</name>
    <filename>classCesiumGltfReader_1_1MaterialReader.html</filename>
    <member kind="function">
      <type></type>
      <name>MaterialReader</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialReader.html</anchorfile>
      <anchor>aa0207da21300743955fadad9ac1da83a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialReader.html</anchorfile>
      <anchor>a6bc3db016ea80c55ba4a98c1c3da4787</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialReader.html</anchorfile>
      <anchor>a5e8bec4c91763bbccd98772c661784d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Material &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialReader.html</anchorfile>
      <anchor>a4a2c7af0168a90c2cdbd17a46159ed39</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Material &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialReader.html</anchorfile>
      <anchor>a00c77a0f12539d22c975100e55c6fd23</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Material &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MaterialReader.html</anchorfile>
      <anchor>adf6d21e9fca724ea0a97acb1488850ba</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::Math</name>
    <filename>classCesiumUtility_1_1Math.html</filename>
    <member kind="function" static="yes">
      <type>static constexpr glm::vec&lt; L, T, Q &gt;</type>
      <name>relativeEpsilonToAbsolute</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a2e5c624823b80d7b0a9e0d26f9fd1f89</anchor>
      <arglist>(const glm::vec&lt; L, T, Q &gt; &amp;a, const glm::vec&lt; L, T, Q &gt; &amp;b, double relativeEpsilon) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>relativeEpsilonToAbsolute</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>aae7f89173323088d19367e42c84a360a</anchor>
      <arglist>(double a, double b, double relativeEpsilon) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool constexpr</type>
      <name>equalsEpsilon</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a548c7372bc2dfc9a27a0780769e1393f</anchor>
      <arglist>(const glm::vec&lt; L, T, Q &gt; &amp;left, const glm::vec&lt; L, T, Q &gt; &amp;right, double relativeEpsilon) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>equalsEpsilon</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a8d401eb548c2fb5516fe0035c91df589</anchor>
      <arglist>(double left, double right, double relativeEpsilon) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>equalsEpsilon</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a341f580fbf91dd4797e71052fd5e549b</anchor>
      <arglist>(double left, double right, double relativeEpsilon, double absoluteEpsilon) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr bool</type>
      <name>equalsEpsilon</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a2437b2df2dc5635233a175acd8fcb7d3</anchor>
      <arglist>(const glm::vec&lt; L, T, Q &gt; &amp;left, const glm::vec&lt; L, T, Q &gt; &amp;right, double relativeEpsilon, double absoluteEpsilon) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>sign</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a4b11770fd4dad64b745158041b8201a1</anchor>
      <arglist>(double value) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>signNotZero</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>aa49e5078b2078880c9cd4f676d9e06b2</anchor>
      <arglist>(double value) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>negativePiToPi</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a774fc8df675918cc4e88e6dad0ed4fc6</anchor>
      <arglist>(double angle) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>zeroToTwoPi</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a8405f313a830db7bffddaa93ec326d44</anchor>
      <arglist>(double angle) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>mod</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a09fa9f9fc1f9d46c76042537b99d79fb</anchor>
      <arglist>(double m, double n) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>degreesToRadians</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a138ef81f1b65afffdb53fbc39987422f</anchor>
      <arglist>(double angleDegrees) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>radiansToDegrees</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a0e7c23a2a21bef46937f36e547b15b0c</anchor>
      <arglist>(double angleRadians) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>lerp</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>aa0897ebec00cb50fe50f01b56b2ed04d</anchor>
      <arglist>(double p, double q, double time) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>clamp</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a9c3d238cd21964aee5fff3bf6903ea71</anchor>
      <arglist>(double value, double min, double max) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>toSNorm</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a3d538073be66423908acc0f926e010d6</anchor>
      <arglist>(double value, double rangeMaximum=255.0) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr double</type>
      <name>fromSNorm</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>ad3bcf60bd07c294f9c85714a97f32b60</anchor>
      <arglist>(double value, double rangeMaximum=255.0) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>convertLongitudeRange</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>aa13d506da7f26e5f2230d936cf0e096b</anchor>
      <arglist>(double angle) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>roundUp</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a749681dd18be454482e10ea987d6701d</anchor>
      <arglist>(double value, double tolerance) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>roundDown</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a92e221d8e61303c8648484420453a265</anchor>
      <arglist>(double value, double tolerance) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static glm::vec&lt; 3, T, Q &gt;</type>
      <name>perpVec</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a2e8b378b9b86fcc099fc674da2827d20</anchor>
      <arglist>(const glm::vec&lt; 3, T, Q &gt; &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static glm::qua&lt; T, Q &gt;</type>
      <name>rotation</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a2441e1bfdd248a62f638452d8942f903</anchor>
      <arglist>(const glm::vec&lt; 3, T, Q &gt; &amp;vec1, const glm::vec&lt; 3, T, Q &gt; &amp;vec2)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon1</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a5f49ece5936348bdfb4276f38ec0519e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon2</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a7123d08f65e962764aa6ee4457eccc8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon3</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>ac8853bf77eaccdb25cce5a7e4c5d6060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon4</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a31e393b79481b0c0b9318f2828e78597</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon5</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>ad2096b1cc95e58d679ad877d433a36d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon6</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>ac052825dd859f422d324a8c4ba7f4adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon7</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>ac5541db9f0444cbda0f4aa7cc769b555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon8</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>af4f2727fa9b615f28abc78214347e917</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon9</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a2ba1d9ab3b3dfa59f7adcd582c0babc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon10</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a901c053c4fff083723a8bc092569e2f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon11</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>ad9506d219f6d8eac53491b2c9bbedf22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon12</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a1f66a5cabfbaf7cd501947f946104370</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon13</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a563a4a3f9b697b36aa2987cb67829b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon14</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a0648bab92bd63f2a005e7e3eced625d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon15</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>aaf9b0b85984c72c541924ea8f82653ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon16</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a5920a607614607e4379f74e03f42a92a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon17</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a9e699d3ae56b3610767e098efc952ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon18</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a8fce427ece258909259993a0607e444f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon19</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>af2fc841d0e9d88c6f75015b3e856bbdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon20</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a20d6cf3b2697aec4a681bb4c90505c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>Epsilon21</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a3b54c28986c1cfa1b7a76bd0e5d45990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>OnePi</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a6a41ce03763e1710ba7f54cf176a640b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>TwoPi</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a4b66b112fcd793f88c5e18cedf0d4071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>PiOverTwo</name>
      <anchorfile>classCesiumUtility_1_1Math.html</anchorfile>
      <anchor>a539077924731389b2db7c52cd1fcc0ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Mesh</name>
    <filename>structCesiumGltf_1_1Mesh.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Mesh.html</anchorfile>
      <anchor>ac615efcd104f25b52e1ca44dc108d4da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::MeshPrimitive &gt;</type>
      <name>primitives</name>
      <anchorfile>structCesiumGltf_1_1Mesh.html</anchorfile>
      <anchor>a4bdacf645455dec43ead388890edc43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>weights</name>
      <anchorfile>structCesiumGltf_1_1Mesh.html</anchorfile>
      <anchor>a3a46c1343d3ee976ca8c4ba7664c2159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Mesh.html</anchorfile>
      <anchor>a0f3526dddae0ea3cf35542308f25213a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MeshPrimitive</name>
    <filename>structCesiumGltf_1_1MeshPrimitive.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">CesiumGltf::MeshPrimitive::Mode</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive.html</anchorfile>
      <anchor>ad03807ac4bb3b746309592f3eddaddf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, int32_t &gt;</type>
      <name>attributes</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive.html</anchorfile>
      <anchor>aa33f4e93b8dc49d315129a6879b4c4b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>indices</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive.html</anchorfile>
      <anchor>a33db1245d16aae037f3a066b93d4e563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>material</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive.html</anchorfile>
      <anchor>a59af3eb5ea132ff1e748e3b6f739f0a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>mode</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive.html</anchorfile>
      <anchor>abefd6eb6b1c6825d9e71bc140fe0201d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::unordered_map&lt; std::string, int32_t &gt; &gt;</type>
      <name>targets</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive.html</anchorfile>
      <anchor>a8d9050d798d28909c67e15100d8a6811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive.html</anchorfile>
      <anchor>aed1512d62c5bd4cac9b7c1660bf6170c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::MeshPrimitiveReader</name>
    <filename>classCesiumGltfReader_1_1MeshPrimitiveReader.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshPrimitiveReader</name>
      <anchorfile>classCesiumGltfReader_1_1MeshPrimitiveReader.html</anchorfile>
      <anchor>a04ea2c698a2038df278e447cdd83866f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MeshPrimitiveReader.html</anchorfile>
      <anchor>ac0f5512533c4113d219acdcc56d6fa76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MeshPrimitiveReader.html</anchorfile>
      <anchor>a3056d7eec7df0d13b99c4c33a8be0f5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::MeshPrimitive &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MeshPrimitiveReader.html</anchorfile>
      <anchor>ae5d68a798a87b0ba8d2c633a67efa60b</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::MeshPrimitive &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MeshPrimitiveReader.html</anchorfile>
      <anchor>ae1af8408ea137682a4e21bacef720c8a</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::MeshPrimitive &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MeshPrimitiveReader.html</anchorfile>
      <anchor>af01b857b1957c4984a3eace74b2e1e99</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::MeshReader</name>
    <filename>classCesiumGltfReader_1_1MeshReader.html</filename>
    <member kind="function">
      <type></type>
      <name>MeshReader</name>
      <anchorfile>classCesiumGltfReader_1_1MeshReader.html</anchorfile>
      <anchor>a05b7d34902a2695deccf3e108c7c7ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MeshReader.html</anchorfile>
      <anchor>ab4b0dc62678be2809f4d057215cfe363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1MeshReader.html</anchorfile>
      <anchor>a20d4d549526c4bfcc0e9b3cb03834722</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Mesh &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MeshReader.html</anchorfile>
      <anchor>aa162157bea3607bfb38facbfb180f9e2</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Mesh &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MeshReader.html</anchorfile>
      <anchor>a5408e7b4637471f6035a0a6bd6b58b4c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Mesh &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1MeshReader.html</anchorfile>
      <anchor>a6f4960dce19a4e0c37104d6dfa2fa7f6</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataArrayType</name>
    <filename>structCesiumGltf_1_1MetadataArrayType.html</filename>
    <templarg>typename T</templarg>
    <member kind="typedef">
      <type>void</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1MetadataArrayType.html</anchorfile>
      <anchor>a6e8894f0659ec16fdd3406a4b841fb86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataArrayType&lt; CesiumGltf::PropertyArrayCopy&lt; T &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataArrayType_3_01CesiumGltf_1_1PropertyArrayCopy_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1MetadataArrayType_3_01CesiumGltf_1_1PropertyArrayCopy_3_01T_01_4_01_4.html</anchorfile>
      <anchor>aa60fa41431eb948be358e7796bafb0bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataArrayType&lt; CesiumGltf::PropertyArrayView&lt; T &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataArrayType_3_01CesiumGltf_1_1PropertyArrayView_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1MetadataArrayType_3_01CesiumGltf_1_1PropertyArrayView_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a1a335e6d30fc70bc5a62af4242d47d2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions</name>
    <filename>structCesiumGltf_1_1MetadataConversions.html</filename>
    <templarg>typename TTo</templarg>
    <templarg>typename TFrom</templarg>
    <templarg>typename Enable</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions.html</anchorfile>
      <anchor>ae116094ab42a15ee240b27eed4d68764</anchor>
      <arglist>(TFrom)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; bool, std::string &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01bool_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; bool &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01bool_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a43e9f15d2e7037a2af02b2e8b16e027a</anchor>
      <arglist>(const std::string &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; bool, std::string_view &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01bool_00_01std_1_1string__view_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; bool &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01bool_00_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ac410f524855806cff6656b06784b03f1</anchor>
      <arglist>(const std::string_view &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; bool, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataScalar&lt; TFrom &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01bool_00_01TFrom_00_01std_1_1enable__if__t_3_01Cesiuma97880b9fb5b5409d1ac0a933899b878.html</filename>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; bool &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01bool_00_01TFrom_00_01std_1_1enable__if__t_3_01Cesiuma97880b9fb5b5409d1ac0a933899b878.html</anchorfile>
      <anchor>af6ac4112f535310ea60437ce2628e04a</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; double, bool &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01double_00_01bool_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01double_00_01bool_01_4.html</anchorfile>
      <anchor>aedbcaae177c80c746c64c3a04dd686c5</anchor>
      <arglist>(bool from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; double, float &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01double_00_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01double_00_01float_01_4.html</anchorfile>
      <anchor>a3f7c13a375ea6946a3faea0272643597</anchor>
      <arglist>(float from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; double, std::string &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01double_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01double_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a642f3af4dfdecfb1e198c8aac0d3b6f8</anchor>
      <arglist>(const std::string &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; double, std::string_view &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01double_00_01std_1_1string__view_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01double_00_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a9955ae6c5e7f9f2387eab4f54304a6f4</anchor>
      <arglist>(const std::string_view &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; double, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TFrom &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01double_00_01TFrom_00_01std_1_1enable__if__t_3_01Cesi06005ff6b5995fe879976126e5a633f2.html</filename>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; double &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01double_00_01TFrom_00_01std_1_1enable__if__t_3_01Cesi06005ff6b5995fe879976126e5a633f2.html</anchorfile>
      <anchor>a04dba0f9c4c440da75d698e35a85071b</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; float, bool &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01float_00_01bool_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; float &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01float_00_01bool_01_4.html</anchorfile>
      <anchor>a5c435c8de3600abe2f0e2160ec39ede5</anchor>
      <arglist>(bool from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; float, double &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01float_00_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; float &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01float_00_01double_01_4.html</anchorfile>
      <anchor>afc2e29b2c4fade4f6fdebcea91c48a6b</anchor>
      <arglist>(double from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; float, std::string &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01float_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; float &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01float_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>aae6a193a2960eb87fa6dfd29d718b372</anchor>
      <arglist>(const std::string &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; float, std::string_view &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01float_00_01std_1_1string__view_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; float &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01float_00_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ab85060ce8f2ab376c6ecf5164e2c5e5b</anchor>
      <arglist>(const std::string_view &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; float, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TFrom &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01float_00_01TFrom_00_01std_1_1enable__if__t_3_01Cesiu4b206e4137a0fa01bfa4d2ae901c2919.html</filename>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; float &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01float_00_01TFrom_00_01std_1_1enable__if__t_3_01Cesiu4b206e4137a0fa01bfa4d2ae901c2919.html</anchorfile>
      <anchor>a09d46b280afc964c862fbcd72dc3d1fb</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; std::string, bool &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01std_1_1string_00_01bool_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; std::string &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01std_1_1string_00_01bool_01_4.html</anchorfile>
      <anchor>a114be11236f2292a45d7987779f0dc33</anchor>
      <arglist>(bool from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; std::string, std::string_view &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01std_1_1string_00_01std_1_1string__view_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; std::string &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01std_1_1string_00_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>af96a1523a01095b7076d3e8c0049ef6e</anchor>
      <arglist>(const std::string_view &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; std::string, TFrom, std::enable_if_t&lt; IsMetadataScalar&lt; TFrom &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01std_1_1string_00_01TFrom_00_01std_1_1enable__if__t_3580db25a5d2c53f6d1b365a222306f37.html</filename>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; std::string &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01std_1_1string_00_01TFrom_00_01std_1_1enable__if__t_3580db25a5d2c53f6d1b365a222306f37.html</anchorfile>
      <anchor>afd9ba4c8997643ea11a48a3844159e7f</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; std::string, TFrom, std::enable_if_t&lt; IsMetadataVecN&lt; TFrom &gt;::value||IsMetadataMatN&lt; TFrom &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01std_1_1string_00_01TFrom_00_01std_1_1enable__if__t_345890a9b7f167d2d3091e59cafe7f5da.html</filename>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; std::string &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01std_1_1string_00_01TFrom_00_01std_1_1enable__if__t_345890a9b7f167d2d3091e59cafe7f5da.html</anchorfile>
      <anchor>ad5614035a75137748b9fba24da166699</anchor>
      <arglist>(const TFrom &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; T, T &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01T_00_01T_01_4.html</filename>
    <templarg>typename T</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; T &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01T_00_01T_01_4.html</anchorfile>
      <anchor>a91fbf236a480689a115b7fb8c8715a9c</anchor>
      <arglist>(T from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, bool, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01bool_00_01std_1_1enable__if__t_3_01CesiumGl5b84e61cb31d553b84a6d746aa08b755.html</filename>
    <templarg>typename TTo</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01bool_00_01std_1_1enable__if__t_3_01CesiumGl5b84e61cb31d553b84a6d746aa08b755.html</anchorfile>
      <anchor>a9787717554dde9dfc3a888ecb5f06cbf</anchor>
      <arglist>(bool from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, bool, std::enable_if_t&lt; IsMetadataMatN&lt; TTo &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01bool_00_01std_1_1enable__if__t_3_01IsMetada9c9f38f5f006d13cc89b8f437e924973.html</filename>
    <templarg>typename TTo</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01bool_00_01std_1_1enable__if__t_3_01IsMetada9c9f38f5f006d13cc89b8f437e924973.html</anchorfile>
      <anchor>a5f576df7db16d2936e5941c4f5e409c6</anchor>
      <arglist>(bool from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, bool, std::enable_if_t&lt; IsMetadataVecN&lt; TTo &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01bool_00_01std_1_1enable__if__t_3_01IsMetadad412fba8f834969bf2f0ced8fe2c6477.html</filename>
    <templarg>typename TTo</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01bool_00_01std_1_1enable__if__t_3_01IsMetadad412fba8f834969bf2f0ced8fe2c6477.html</anchorfile>
      <anchor>a10c525b17d6e3f95604629a23e7f4e1c</anchor>
      <arglist>(bool from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, std::string, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &amp;&amp;!std::is_signed_v&lt; TTo &gt; &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01std_1_1string_00_01std_1_1enable__if__t_3_09c46f6793e1963751ee12692d9b1b90a.html</filename>
    <templarg>typename TTo</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01std_1_1string_00_01std_1_1enable__if__t_3_09c46f6793e1963751ee12692d9b1b90a.html</anchorfile>
      <anchor>a766362f6a5f200cd95ab249a66890b91</anchor>
      <arglist>(const std::string &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, std::string, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &amp;&amp;std::is_signed_v&lt; TTo &gt; &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01std_1_1string_00_01std_1_1enable__if__t_3_077efe2d0d80b27ab86b53a49dba48c09.html</filename>
    <templarg>typename TTo</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01std_1_1string_00_01std_1_1enable__if__t_3_077efe2d0d80b27ab86b53a49dba48c09.html</anchorfile>
      <anchor>a8c69a23f2cf938ddf6f87122c4c1e528</anchor>
      <arglist>(const std::string &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, std::string_view, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01std_1_1string__view_00_01std_1_1enable__if_106de5a74bceaa1d1625a2b153dfe0ae.html</filename>
    <templarg>typename TTo</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01std_1_1string__view_00_01std_1_1enable__if_106de5a74bceaa1d1625a2b153dfe0ae.html</anchorfile>
      <anchor>a0e4e5db1c0908f18fca3d5d49300657f</anchor>
      <arglist>(const std::string_view &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataFloating&lt; TFrom &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumG675ddf160d6617a0e8a3d787919e938b.html</filename>
    <templarg>typename TTo</templarg>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumG675ddf160d6617a0e8a3d787919e938b.html</anchorfile>
      <anchor>ac3f29376ebea3af662e98464647d191a</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataInteger&lt; TFrom &gt;::value &amp;&amp;!std::is_same_v&lt; TTo, TFrom &gt; &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumG22af27724db4d99181ee0019b97637f3.html</filename>
    <templarg>typename TTo</templarg>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumG22af27724db4d99181ee0019b97637f3.html</anchorfile>
      <anchor>ad53c651f8855c1a21df2610a7c0b849f</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataMatN&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataMatN&lt; TFrom &gt;::value &amp;&amp;!std::is_same_v&lt; TTo, TFrom &gt; &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumGbd99036533c5c47f0172684c69ecf181.html</filename>
    <templarg>typename TTo</templarg>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumGbd99036533c5c47f0172684c69ecf181.html</anchorfile>
      <anchor>a6e163a7fc940bf5495f6acefec8b60e6</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataMatN&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataScalar&lt; TFrom &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumGd3cf2e3c1986482bf3d24ecf86ac322d.html</filename>
    <templarg>typename TTo</templarg>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumGd3cf2e3c1986482bf3d24ecf86ac322d.html</anchorfile>
      <anchor>adabddc9ad32e094f81300405daf737f8</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataVecN&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataScalar&lt; TFrom &gt;::value &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumGf9d7b450fd09dfe47055174c8192909c.html</filename>
    <templarg>typename TTo</templarg>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumGf9d7b450fd09dfe47055174c8192909c.html</anchorfile>
      <anchor>a99cc68e72b75a6f1e32eb9c00c3bfe95</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataVecN&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataVecN&lt; TFrom &gt;::value &amp;&amp;!std::is_same_v&lt; TTo, TFrom &gt; &gt; &gt;</name>
    <filename>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumG99d627b723c172c5e3b1602c7379fc23.html</filename>
    <templarg>typename TTo</templarg>
    <templarg>typename TFrom</templarg>
    <member kind="function" static="yes">
      <type>static std::optional&lt; TTo &gt;</type>
      <name>convert</name>
      <anchorfile>structCesiumGltf_1_1MetadataConversions_3_01TTo_00_01TFrom_00_01std_1_1enable__if__t_3_01CesiumG99d627b723c172c5e3b1602c7379fc23.html</anchorfile>
      <anchor>adb78f1bc0faa035cfa6f60e188987f8e</anchor>
      <arglist>(TFrom from)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::MetadataEntity</name>
    <filename>structCesium3DTiles_1_1MetadataEntity.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1MetadataEntity.html</anchorfile>
      <anchor>ab3e40f3357529c01ead7613baf9f46e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>classProperty</name>
      <anchorfile>structCesium3DTiles_1_1MetadataEntity.html</anchorfile>
      <anchor>adc9c848d3c9bbe50a0f78d69f4d24852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumUtility::JsonValue &gt;</type>
      <name>properties</name>
      <anchorfile>structCesium3DTiles_1_1MetadataEntity.html</anchorfile>
      <anchor>aec3bfa46343db420ee3e8469f9a5e133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1MetadataEntity.html</anchorfile>
      <anchor>ab496471b1d557c5bd04a1ca7b2110ad3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::MetadataEntityReader</name>
    <filename>classCesium3DTilesReader_1_1MetadataEntityReader.html</filename>
    <member kind="function">
      <type></type>
      <name>MetadataEntityReader</name>
      <anchorfile>classCesium3DTilesReader_1_1MetadataEntityReader.html</anchorfile>
      <anchor>a91dea145271ff13858c8901ef938e51c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1MetadataEntityReader.html</anchorfile>
      <anchor>ab51261f7b5a95fd85fd233d1d296dbf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1MetadataEntityReader.html</anchorfile>
      <anchor>ab5a81c7eba757fd7ad9e4f985af334c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::MetadataEntity &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1MetadataEntityReader.html</anchorfile>
      <anchor>a6fe8eba6ddc3377b59dba994d1ebb21e</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::MetadataEntity &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1MetadataEntityReader.html</anchorfile>
      <anchor>a08024466c181b65c3ae4d959aa66bac0</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::MetadataEntity &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1MetadataEntityReader.html</anchorfile>
      <anchor>a3c60da720271ab27a1b78d915182cbfc</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTiles::MetadataQuery</name>
    <filename>classCesium3DTiles_1_1MetadataQuery.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; FoundMetadataProperty &gt;</type>
      <name>findFirstPropertyWithSemantic</name>
      <anchorfile>classCesium3DTiles_1_1MetadataQuery.html</anchorfile>
      <anchor>a1f1c3c27a591329673ee504dff9a6e64</anchor>
      <arglist>(const Schema &amp;schema, const MetadataEntity &amp;entity, const std::string &amp;semantic)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ImageSpec::MimeType</name>
    <filename>structCesiumGltf_1_1ImageSpec_1_1MimeType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>image_jpeg</name>
      <anchorfile>structCesiumGltf_1_1ImageSpec_1_1MimeType.html</anchorfile>
      <anchor>a3232c4d1553bef425c628b5c901abb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>image_png</name>
      <anchorfile>structCesiumGltf_1_1ImageSpec_1_1MimeType.html</anchorfile>
      <anchor>a9c1fcd57a804f789504caa0b19a3cf0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Sampler::MinFilter</name>
    <filename>structCesiumGltf_1_1Sampler_1_1MinFilter.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>NEAREST</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1MinFilter.html</anchorfile>
      <anchor>aae415f6151e25ded694a835f4caeec54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>LINEAR</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1MinFilter.html</anchorfile>
      <anchor>ae55efd25106174721173f71dbde203f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>NEAREST_MIPMAP_NEAREST</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1MinFilter.html</anchorfile>
      <anchor>a35abd623e6726ca1ed89b6f63958143d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>LINEAR_MIPMAP_NEAREST</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1MinFilter.html</anchorfile>
      <anchor>a4fed2c5e80eb090851e54a0c5e519721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>NEAREST_MIPMAP_LINEAR</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1MinFilter.html</anchorfile>
      <anchor>ad758d2c4a46e477c48d3c770e3796a83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>LINEAR_MIPMAP_LINEAR</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1MinFilter.html</anchorfile>
      <anchor>adcce2f51548aabbd57aba4ccc5887a50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ExtensionBufferViewExtMeshoptCompression::Mode</name>
    <filename>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Mode.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>ATTRIBUTES</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Mode.html</anchorfile>
      <anchor>ae54727ab12f579d6494649a69a5dfbac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>TRIANGLES</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Mode.html</anchorfile>
      <anchor>a9ea6d75f2ad3f4281e7ecb15dbe82348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INDICES</name>
      <anchorfile>structCesiumGltf_1_1ExtensionBufferViewExtMeshoptCompression_1_1Mode.html</anchorfile>
      <anchor>ab29afb1473a194269c5329ea9c068da0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::MeshPrimitive::Mode</name>
    <filename>structCesiumGltf_1_1MeshPrimitive_1_1Mode.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>POINTS</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive_1_1Mode.html</anchorfile>
      <anchor>ac5b3d55f48e29d87a96dc3005df72a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>LINES</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive_1_1Mode.html</anchorfile>
      <anchor>a412bc774bbcde8cb9cb491e194b8e4c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>LINE_LOOP</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive_1_1Mode.html</anchorfile>
      <anchor>a2598e8ab2930f40a7e89acb61b9ac9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>LINE_STRIP</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive_1_1Mode.html</anchorfile>
      <anchor>a97869afb0c4fc5a898d32c47e82e8835</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>TRIANGLES</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive_1_1Mode.html</anchorfile>
      <anchor>a34950080315ac83bc0b8c0cf21a1d5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>TRIANGLE_STRIP</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive_1_1Mode.html</anchorfile>
      <anchor>ae7dceb1c9b13e8f2ebfb8ae824330a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>TRIANGLE_FAN</name>
      <anchorfile>structCesiumGltf_1_1MeshPrimitive_1_1Mode.html</anchorfile>
      <anchor>adc9bf41aa6cccef19f2e86958ae38f61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Model</name>
    <filename>structCesiumGltf_1_1Model.html</filename>
    <base>CesiumGltf::ModelSpec</base>
    <member kind="typedef">
      <type>void</type>
      <name>ForEachRootNodeInSceneCallback</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>ac4ce1d62972c88e60fb7af47002886ce</anchor>
      <arglist>(Model &amp;gltf, Node &amp;node)</arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ForEachRootNodeInSceneConstCallback</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>ace9ec609b9e3da0f6f25ee6595b6da86</anchor>
      <arglist>(const Model &amp;gltf, const Node &amp;node)</arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ForEachNodeInSceneCallback</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a0f18065e0736d2dee1eb1cc935867824</anchor>
      <arglist>(Model &amp;gltf, Node &amp;node, const glm::dmat4 &amp;transform)</arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ForEachNodeInSceneConstCallback</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a47dec9a101f8176ca7d8001c0303acf0</anchor>
      <arglist>(const Model &amp;gltf, const Node &amp;node, const glm::dmat4 &amp;transform)</arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ForEachPrimitiveInSceneCallback</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>ac12930fe2e783f751f8bcb065a7ae0b6</anchor>
      <arglist>(Model &amp;gltf, Node &amp;node, Mesh &amp;mesh, MeshPrimitive &amp;primitive, const glm::dmat4 &amp;transform)</arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ForEachPrimitiveInSceneConstCallback</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a7f33bbf3e625f7470fa91f39230db8a2</anchor>
      <arglist>(const Model &amp;gltf, const Node &amp;node, const Mesh &amp;mesh, const MeshPrimitive &amp;primitive, const glm::dmat4 &amp;transform)</arglist>
    </member>
    <member kind="function">
      <type>CesiumUtility::ErrorList</type>
      <name>merge</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>af4e082bc8cc85dc82a699744e52f255f</anchor>
      <arglist>(Model &amp;&amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachRootNodeInScene</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a7d83814d09db76dca9b2139b564b46ab</anchor>
      <arglist>(int32_t sceneID, std::function&lt; ForEachRootNodeInSceneCallback &gt; &amp;&amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachRootNodeInScene</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a9d45db35135f50a194ffed3c9e57d830</anchor>
      <arglist>(int32_t sceneID, std::function&lt; ForEachRootNodeInSceneConstCallback &gt; &amp;&amp;callback) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachNodeInScene</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a8b808f2898420539de231a45b0701327</anchor>
      <arglist>(int32_t sceneID, std::function&lt; ForEachNodeInSceneCallback &gt; &amp;&amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachNodeInScene</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a357d7a615dc43bf4e58e8104bad446d5</anchor>
      <arglist>(int32_t sceneID, std::function&lt; ForEachNodeInSceneConstCallback &gt; &amp;&amp;callback) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachPrimitiveInScene</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a6782264b34187dd2c0b89bfa34a848ef</anchor>
      <arglist>(int32_t sceneID, std::function&lt; ForEachPrimitiveInSceneCallback &gt; &amp;&amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachPrimitiveInScene</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>ae709e8815517c807dc2b63540ba9e5e2</anchor>
      <arglist>(int32_t sceneID, std::function&lt; ForEachPrimitiveInSceneConstCallback &gt; &amp;&amp;callback) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateMissingNormalsSmooth</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a64928f1c18d45b4b5f0bc4c6350af055</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExtensionUsed</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>ab9834aa4d54b0fd9d04677e68a39da4b</anchor>
      <arglist>(const std::string &amp;extensionName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExtensionRequired</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a0b561f0fb8037ea395305ab4c9b949f0</anchor>
      <arglist>(const std::string &amp;extensionName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeExtensionUsed</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a9fa37aa4384a3dd0fe7d6de585ba55f4</anchor>
      <arglist>(const std::string &amp;extensionName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeExtensionRequired</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a0739a41b7690e876cc57b0f9ea25ed36</anchor>
      <arglist>(const std::string &amp;extensionName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionUsed</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a4a9168a0aaa55996dbef08aff4df506b</anchor>
      <arglist>(const std::string &amp;extensionName) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExtensionRequired</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a62021d65817e732056b4d7f571d0763d</anchor>
      <arglist>(const std::string &amp;extensionName) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T &amp;</type>
      <name>getSafe</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>ab457463e6f8cffc6434b616ac81120c3</anchor>
      <arglist>(const std::vector&lt; T &gt; &amp;items, int32_t index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T *</type>
      <name>getSafe</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a9d05e31d44dfb4c21f83e75d7ff0e914</anchor>
      <arglist>(const std::vector&lt; T &gt; *pItems, int32_t index) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>getSafe</name>
      <anchorfile>structCesiumGltf_1_1Model.html</anchorfile>
      <anchor>a432af104d7ef57210b5657e1dc4473e9</anchor>
      <arglist>(std::vector&lt; T &gt; *pItems, int32_t index) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::ModelReader</name>
    <filename>classCesiumGltfReader_1_1ModelReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ModelReader</name>
      <anchorfile>classCesiumGltfReader_1_1ModelReader.html</anchorfile>
      <anchor>ac53b4e7d7205f91d4878023ff342811d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ModelReader.html</anchorfile>
      <anchor>aa511dc1200c10bd098ebd8508edb9783</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1ModelReader.html</anchorfile>
      <anchor>ae22fd96cab7edc3ca4f59ecda0a64de1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Model &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ModelReader.html</anchorfile>
      <anchor>af4f58bc991db024e42ed5ccfdab489fc</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Model &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ModelReader.html</anchorfile>
      <anchor>a4ae404ff5543ce9e49a4820c1221cc9d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Model &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1ModelReader.html</anchorfile>
      <anchor>ab77293ede63f49e891fd94c7cfc736c7</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ModelSpec</name>
    <filename>structCesiumGltf_1_1ModelSpec.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>ad6c29153d0885cd96934ba539dd7d18a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionsUsed</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>ad2db871668c05320be9fe1b8c40211f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionsRequired</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>aac0f3f63f49d4a5d2a2b0265559b92df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Accessor &gt;</type>
      <name>accessors</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>ac663d15ff98850b9face710915d9bef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Animation &gt;</type>
      <name>animations</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a5c457f8606da6514edac19d3e11cb5dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGltf::Asset</type>
      <name>asset</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a9e6e4979bb6efe2fc6ad26fb601bf237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Buffer &gt;</type>
      <name>buffers</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>af77093917cf40528622507cefada094b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::BufferView &gt;</type>
      <name>bufferViews</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a26cf36c148bce80ef01393b9fbaab3df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Camera &gt;</type>
      <name>cameras</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a1cfff69fa6e42bdd93da720f943eafc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Image &gt;</type>
      <name>images</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>abd224c09e8ebf4f182984fee95feb813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Material &gt;</type>
      <name>materials</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a8a2cb5355e7b67f582e9456c8876d34b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Mesh &gt;</type>
      <name>meshes</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>ab41902830ebe26c613c33569a704bbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Node &gt;</type>
      <name>nodes</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>ab52f74ddd98057d67efc7d86fe0eb29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Sampler &gt;</type>
      <name>samplers</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a658792c62e5bba772e1a2ac096a8ccbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>scene</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>aa9c0fe1f9f310cce96422705f567a00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Scene &gt;</type>
      <name>scenes</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a20457516532726e39901432f5cd16e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Skin &gt;</type>
      <name>skins</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a21d1ce9ec4280b6c14835876ca1129a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGltf::Texture &gt;</type>
      <name>textures</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>ad226c051178dca5c6e8d484831176b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a24132139840b7efe440fbe64ea6d3039</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ModelSpec</name>
      <anchorfile>structCesiumGltf_1_1ModelSpec.html</anchorfile>
      <anchor>a21a0dd5d43102f64b5be55bdc0d6be9f</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::NamedObject</name>
    <filename>structCesiumGltf_1_1NamedObject.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1NamedObject.html</anchorfile>
      <anchor>a400e97ea26d3adbdc2e6063deb2993bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1NamedObject.html</anchorfile>
      <anchor>a4d2bfa1ff26e4c5534fe5f5f836e564b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumAsync::NetworkAssetDescriptor</name>
    <filename>structCesiumAsync_1_1NetworkAssetDescriptor.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structCesiumAsync_1_1NetworkAssetDescriptor.html</anchorfile>
      <anchor>a82edbf1e81346ed34996306a89e21732</anchor>
      <arglist>(const NetworkAssetDescriptor &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; std::shared_ptr&lt; CesiumAsync::IAssetRequest &gt; &gt;</type>
      <name>loadFromNetwork</name>
      <anchorfile>structCesiumAsync_1_1NetworkAssetDescriptor.html</anchorfile>
      <anchor>a7ee0caa79c232571546e331b92690010</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; IAssetAccessor &gt; &amp;pAssetAccessor) const</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; CesiumUtility::Result&lt; std::vector&lt; std::byte &gt; &gt; &gt;</type>
      <name>loadBytesFromNetwork</name>
      <anchorfile>structCesiumAsync_1_1NetworkAssetDescriptor.html</anchorfile>
      <anchor>a6522a1bdbfaf1fbcefbb2e2ff1687191</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; IAssetAccessor &gt; &amp;pAssetAccessor) const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>structCesiumAsync_1_1NetworkAssetDescriptor.html</anchorfile>
      <anchor>a4226fe3818eada116efe3d98dc72ed07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; IAssetAccessor::THeader &gt;</type>
      <name>headers</name>
      <anchorfile>structCesiumAsync_1_1NetworkAssetDescriptor.html</anchorfile>
      <anchor>a85affefdbbfaf02dea2e0c63a0340e7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfReader::NetworkImageAssetDescriptor</name>
    <filename>structCesiumGltfReader_1_1NetworkImageAssetDescriptor.html</filename>
    <base>CesiumAsync::NetworkAssetDescriptor</base>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structCesiumGltfReader_1_1NetworkImageAssetDescriptor.html</anchorfile>
      <anchor>ad94db0d3126d781624a32cc145797c13</anchor>
      <arglist>(const NetworkImageAssetDescriptor &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; CesiumUtility::ResultPointer&lt; CesiumGltf::ImageAsset &gt; &gt;</type>
      <name>load</name>
      <anchorfile>structCesiumGltfReader_1_1NetworkImageAssetDescriptor.html</anchorfile>
      <anchor>a04eebd340e4cd7e5c78093eb446d3d77</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor) const</arglist>
    </member>
    <member kind="variable">
      <type>CesiumGltf::Ktx2TranscodeTargets</type>
      <name>ktx2TranscodeTargets</name>
      <anchorfile>structCesiumGltfReader_1_1NetworkImageAssetDescriptor.html</anchorfile>
      <anchor>acc30772e12924b168be749a4d2035078</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfReader::NetworkSchemaAssetDescriptor</name>
    <filename>structCesiumGltfReader_1_1NetworkSchemaAssetDescriptor.html</filename>
    <base>CesiumAsync::NetworkAssetDescriptor</base>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structCesiumGltfReader_1_1NetworkSchemaAssetDescriptor.html</anchorfile>
      <anchor>ae88167eb094a8d744add83b48a6cd369</anchor>
      <arglist>(const NetworkSchemaAssetDescriptor &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; CesiumUtility::ResultPointer&lt; CesiumGltf::Schema &gt; &gt;</type>
      <name>load</name>
      <anchorfile>structCesiumGltfReader_1_1NetworkSchemaAssetDescriptor.html</anchorfile>
      <anchor>a8544141d0065690790e2564d24f47e93</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Node</name>
    <filename>structCesiumGltf_1_1Node.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>aff79dfe0171c8c25f2ba0726bb3144a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>camera</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>ac0fda8ccff27ce3b6a7fc0c427baeb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int32_t &gt;</type>
      <name>children</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>a576120a397ba823369059613d22e07e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>skin</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>ae06849bbdc68ec3956520c3c179f51cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>matrix</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>a00a5e48dacfcf4e9717d1b23844f8177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>mesh</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>ae7b18a6d149c6adfba4c1d4ae427c341</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>rotation</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>a3ef7ac1b6c4712e736f9c1811c6c63b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>scale</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>a3f55d3dc17c224774488bb946d1b94ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>translation</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>a0b2337242ff59e9aac341d4366e2049f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>weights</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>a94a1e33af9db051674253634c4ba2ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Node.html</anchorfile>
      <anchor>aae5964f0122946940b9859d6d2f8965b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::NodeReader</name>
    <filename>classCesiumGltfReader_1_1NodeReader.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeReader</name>
      <anchorfile>classCesiumGltfReader_1_1NodeReader.html</anchorfile>
      <anchor>ad78044b1e62b28b2572ff7f90587d5fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1NodeReader.html</anchorfile>
      <anchor>a3b239d277cb722ff1c9b76bbb742dca9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1NodeReader.html</anchorfile>
      <anchor>a6603d095edb275978576164af66514f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Node &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1NodeReader.html</anchorfile>
      <anchor>a6f6f776f3cf7193154ec10e39bc3a5de</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Node &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1NodeReader.html</anchorfile>
      <anchor>a4671bb03bc8e23ded786ea48542e71c2</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Node &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1NodeReader.html</anchorfile>
      <anchor>a18ea6e5b90f2a4cf85d40da8065b85d5</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::NoValue</name>
    <filename>structCesiumIonClient_1_1NoValue.html</filename>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::ObjectJsonHandler</name>
    <filename>classCesiumJsonReader_1_1ObjectJsonHandler.html</filename>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectStart</name>
      <anchorfile>classCesiumJsonReader_1_1ObjectJsonHandler.html</anchorfile>
      <anchor>a2cb620c9b21ea9f14b5f9cf875c0c7c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readObjectEnd</name>
      <anchorfile>classCesiumJsonReader_1_1ObjectJsonHandler.html</anchorfile>
      <anchor>a2b07caf371949b2cb63e9ddb0b6a9daa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>StartSubObject</name>
      <anchorfile>classCesiumJsonReader_1_1ObjectJsonHandler.html</anchorfile>
      <anchor>abaa7aa5c5951b6ebbf53d2b283844bf4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>EndSubObject</name>
      <anchorfile>classCesiumJsonReader_1_1ObjectJsonHandler.html</anchorfile>
      <anchor>a17f68441fe82947f7b70bc863d0bc727</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IJsonHandler *</type>
      <name>property</name>
      <anchorfile>classCesiumJsonReader_1_1ObjectJsonHandler.html</anchorfile>
      <anchor>a0d25afbf9a9b943fff57ed558f27fe63</anchor>
      <arglist>(const char *currentKey, TAccessor &amp;accessor, TProperty &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>getCurrentKey</name>
      <anchorfile>classCesiumJsonReader_1_1ObjectJsonHandler.html</anchorfile>
      <anchor>af439383716e87fc6af8b6218d069eac6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>reportWarning</name>
      <anchorfile>classCesiumJsonReader_1_1ObjectJsonHandler.html</anchorfile>
      <anchor>aeb71f3e989205dc8f3165335e5966caa</anchor>
      <arglist>(const std::string &amp;warning, std::vector&lt; std::string &gt; &amp;&amp;context=std::vector&lt; std::string &gt;()) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCurrentKey</name>
      <anchorfile>classCesiumJsonReader_1_1ObjectJsonHandler.html</anchorfile>
      <anchor>a6c582bc542bb23a5588583d7b12debfb</anchor>
      <arglist>(const char *key) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::OctreeAvailability</name>
    <filename>classCesiumGeometry_1_1OctreeAvailability.html</filename>
    <member kind="function">
      <type></type>
      <name>OctreeAvailability</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>a0795821ebe8fb44580aa310de36c93fc</anchor>
      <arglist>(uint32_t subtreeLevels, uint32_t maximumLevel) noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>computeAvailability</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>abf71a9040d7de4d839086ebe04cf8f27</anchor>
      <arglist>(const OctreeTileID &amp;tileID) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSubtree</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>ae720206973230d40cc622eb513aa9658</anchor>
      <arglist>(const OctreeTileID &amp;tileID, AvailabilitySubtree &amp;&amp;newSubtree) noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>computeAvailability</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>ab35b02f586f0682f85f628b4f8cd0a1b</anchor>
      <arglist>(const OctreeTileID &amp;tileID, const AvailabilityNode *pNode) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AvailabilityNode *</type>
      <name>addNode</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>aba71cdcacebf0cb6502e378f412aca12</anchor>
      <arglist>(const OctreeTileID &amp;tileID, AvailabilityNode *pParentNode) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addLoadedSubtree</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>a0d9cfe751ea9466bb69066f294a9408b</anchor>
      <arglist>(AvailabilityNode *pNode, AvailabilitySubtree &amp;&amp;newSubtree) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>findChildNodeIndex</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>a0bff911944a0405611d2f53763859c29</anchor>
      <arglist>(const OctreeTileID &amp;tileID, const AvailabilityNode *pParentNode) const</arglist>
    </member>
    <member kind="function">
      <type>AvailabilityNode *</type>
      <name>findChildNode</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>a1a3c17a197732ba5e63de80a21f05528</anchor>
      <arglist>(const OctreeTileID &amp;tileID, AvailabilityNode *pParentNode) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr uint32_t</type>
      <name>getSubtreeLevels</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>a5003a5bda16a135c616f3ebeebc701dc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr uint32_t</type>
      <name>getMaximumLevel</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>a9df6fa40c85581cfc7b8566bfdbf92b4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AvailabilityNode *</type>
      <name>getRootNode</name>
      <anchorfile>classCesiumGeometry_1_1OctreeAvailability.html</anchorfile>
      <anchor>aec8bf93dbf213bd93b75b428ff383162</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::OctreeChildren</name>
    <filename>classCesium3DTilesContent_1_1OctreeChildren.html</filename>
    <class kind="class">Cesium3DTilesContent::OctreeChildren::iterator</class>
    <member kind="typedef">
      <type>iterator</type>
      <name>const_iterator</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren.html</anchorfile>
      <anchor>a26c905170affa614ef458394d0935d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OctreeChildren</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren.html</anchorfile>
      <anchor>af9efd9e29da51641fc6ffc924a3cdc06</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren.html</anchorfile>
      <anchor>af81c5ec0f013128c964933b6500c0cab</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren.html</anchorfile>
      <anchor>a4e7540083573ce26a0ca2bc57eec6c36</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr int64_t</type>
      <name>size</name>
      <anchorfile>classCesium3DTilesContent_1_1OctreeChildren.html</anchorfile>
      <anchor>a2de883f24e5682c369e0db6ddc7a13bd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::OctreeTileID</name>
    <filename>structCesiumGeometry_1_1OctreeTileID.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>OctreeTileID</name>
      <anchorfile>structCesiumGeometry_1_1OctreeTileID.html</anchorfile>
      <anchor>a8821492c1431517e371557ecad12fb6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>OctreeTileID</name>
      <anchorfile>structCesiumGeometry_1_1OctreeTileID.html</anchorfile>
      <anchor>a364e5d8bfba76c99355e54778504e103</anchor>
      <arglist>(uint32_t level_, uint32_t x_, uint32_t y_, uint32_t z_) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>structCesiumGeometry_1_1OctreeTileID.html</anchorfile>
      <anchor>aff1032ba9eb4ae949c7bbf366cd97c2a</anchor>
      <arglist>(const OctreeTileID &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>structCesiumGeometry_1_1OctreeTileID.html</anchorfile>
      <anchor>aae3da50fd5e1e37bdf69e4e7c5e8916d</anchor>
      <arglist>(const OctreeTileID &amp;other) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>level</name>
      <anchorfile>structCesiumGeometry_1_1OctreeTileID.html</anchorfile>
      <anchor>a64f33d532c44fe961274f69078f52af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>x</name>
      <anchorfile>structCesiumGeometry_1_1OctreeTileID.html</anchorfile>
      <anchor>a274ffff959033560668a0c4a4d9ad376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>y</name>
      <anchorfile>structCesiumGeometry_1_1OctreeTileID.html</anchorfile>
      <anchor>a8a12a8af85879cef4bce57fd18ac15a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>z</name>
      <anchorfile>structCesiumGeometry_1_1OctreeTileID.html</anchorfile>
      <anchor>a710fe73a8fd372c3b2d68c7544632632</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::OctreeTilingScheme</name>
    <filename>classCesiumGeometry_1_1OctreeTilingScheme.html</filename>
    <member kind="function">
      <type></type>
      <name>OctreeTilingScheme</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>aa7708fe9c50bc21370a361af61f23f85</anchor>
      <arglist>(const AxisAlignedBox &amp;box, uint32_t rootTilesX, uint32_t rootTilesY, uint32_t rootTilesZ) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const AxisAlignedBox &amp;</type>
      <name>getBox</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>a1b4c296e04b00d5745cf0b161c1b13f2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getRootTilesX</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>a4a79334cad82d4231f1c0944357f9a13</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getRootTilesY</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>acfcf23ad433f3b8bf8dc52a62f617ffb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getRootTilesZ</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>a6b463f4b5f3a9dcd6ef05b7f5113605a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getNumberOfXTilesAtLevel</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>a10d91e37f5cb662575d36a5d4c2bf094</anchor>
      <arglist>(uint32_t level) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getNumberOfYTilesAtLevel</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>ae2c8ba56ec9f9691372a0f803fd6f19a</anchor>
      <arglist>(uint32_t level) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getNumberOfZTilesAtLevel</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>af5d4e7b51a157286b3ff9fe3213961f8</anchor>
      <arglist>(uint32_t level) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CesiumGeometry::OctreeTileID &gt;</type>
      <name>positionToTile</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>a4464b82d65dd46179714d3b6a751a834</anchor>
      <arglist>(const glm::dvec3 &amp;position, uint32_t level) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AxisAlignedBox</type>
      <name>tileToBox</name>
      <anchorfile>classCesiumGeometry_1_1OctreeTilingScheme.html</anchorfile>
      <anchor>ab7aa548dc6c97be5e6214ed401d4f60c</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;tileID) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::OrientedBoundingBox</name>
    <filename>classCesiumGeometry_1_1OrientedBoundingBox.html</filename>
    <member kind="function">
      <type></type>
      <name>OrientedBoundingBox</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>a9cff581d37f5528b42055dcfaa1a4e57</anchor>
      <arglist>(const glm::dvec3 &amp;center, const glm::dmat3 &amp;halfAxes) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr const glm::dvec3 &amp;</type>
      <name>getCenter</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>aa6d3bd270fde9e40737a791418fcfc0f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr const glm::dmat3 &amp;</type>
      <name>getHalfAxes</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>a4ed7cf3ed5615dc742d19f1dc1ed3dfe</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr const glm::dmat3 &amp;</type>
      <name>getInverseHalfAxes</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>aad5a61ecfe3031f47288ba9de7dd55d2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr const glm::dvec3 &amp;</type>
      <name>getLengths</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>ab6222305e9cceb1dd6bb8259f2f826f0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CullingResult</type>
      <name>intersectPlane</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>a6015b4402c9b39c2f154b42f231450cb</anchor>
      <arglist>(const Plane &amp;plane) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>a2a6e7763fca3aedeeea728934e779de3</anchor>
      <arglist>(const glm::dvec3 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>aefd7d506c2eabd1eec343243a79f0188</anchor>
      <arglist>(const glm::dvec3 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>OrientedBoundingBox</type>
      <name>transform</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>a31418aa531ae28856f49cb912609a7c4</anchor>
      <arglist>(const glm::dmat4 &amp;transformation) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AxisAlignedBox</type>
      <name>toAxisAligned</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>a98c4c486a199adffeb2d5f3c9aff2a73</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BoundingSphere</type>
      <name>toSphere</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>ac2e84cf23c68e6e9d7dbb4ff71213c4e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static OrientedBoundingBox</type>
      <name>fromAxisAligned</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>a6510fd2d0b7fc4d66fe84c979e4d8069</anchor>
      <arglist>(const AxisAlignedBox &amp;axisAligned) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static OrientedBoundingBox</type>
      <name>fromSphere</name>
      <anchorfile>classCesiumGeometry_1_1OrientedBoundingBox.html</anchorfile>
      <anchor>a7949e3bd9abddd38af054f22b5ad1fd5</anchor>
      <arglist>(const BoundingSphere &amp;sphere) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumAsync::CesiumImpl::ParameterizedTaskUnwrapper</name>
    <filename>structCesiumAsync_1_1CesiumImpl_1_1ParameterizedTaskUnwrapper.html</filename>
    <templarg>typename R</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AnimationChannelTarget::Path</name>
    <filename>structCesiumGltf_1_1AnimationChannelTarget_1_1Path.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>translation</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannelTarget_1_1Path.html</anchorfile>
      <anchor>a1382ff8622e0dda663130fc7a604dab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>rotation</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannelTarget_1_1Path.html</anchorfile>
      <anchor>a25197b1b95cbd134bb806b768cd9fae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>scale</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannelTarget_1_1Path.html</anchorfile>
      <anchor>abf9aa43e0c981bada36a9ff25127c78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>weights</name>
      <anchorfile>structCesiumGltf_1_1AnimationChannelTarget_1_1Path.html</anchorfile>
      <anchor>a6632f9025c70b5c81935b40208612e6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfContent::PixelRectangle</name>
    <filename>structCesiumGltfContent_1_1PixelRectangle.html</filename>
    <member kind="variable">
      <type>int32_t</type>
      <name>x</name>
      <anchorfile>structCesiumGltfContent_1_1PixelRectangle.html</anchorfile>
      <anchor>ad667a1769b8b6bee24c9356dfacf171a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>y</name>
      <anchorfile>structCesiumGltfContent_1_1PixelRectangle.html</anchorfile>
      <anchor>af53149b5c5e7a4ba8639006fdfcada67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>width</name>
      <anchorfile>structCesiumGltfContent_1_1PixelRectangle.html</anchorfile>
      <anchor>a50948faa9dc28b56f70d87ebc42c32a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>height</name>
      <anchorfile>structCesiumGltfContent_1_1PixelRectangle.html</anchorfile>
      <anchor>abe6385d3ba142fbe114f67d615da232a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::Plane</name>
    <filename>classCesiumGeometry_1_1Plane.html</filename>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>ad030465f35b6cc6a0df0b4a94b57dd62</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>a5dd3ea583b27e5b0c8b1c8618b458000</anchor>
      <arglist>(const glm::dvec3 &amp;normal, double distance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plane</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>a80cb61ea891fe39d6468eca8dbb67291</anchor>
      <arglist>(const glm::dvec3 &amp;point, const glm::dvec3 &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getNormal</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>a4d92a3349650ca02dd11725197a3059f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDistance</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>aed10746f588f6b3fba165ed7f2eda12d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPointDistance</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>a4a20435c82b06bee7068d967fe5b4421</anchor>
      <arglist>(const glm::dvec3 &amp;point) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>projectPointOntoPlane</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>ad7cb903a61d45eff57d79aeb41f7a07f</anchor>
      <arglist>(const glm::dvec3 &amp;point) const noexcept</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Plane</type>
      <name>ORIGIN_XY_PLANE</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>aedc018ef4a00a1bbdc6335abc20572e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Plane</type>
      <name>ORIGIN_YZ_PLANE</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>a8a34e7fdcbeb0aa76b6ace047bee60f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Plane</type>
      <name>ORIGIN_ZX_PLANE</name>
      <anchorfile>classCesiumGeometry_1_1Plane.html</anchorfile>
      <anchor>a30196e35d6019096e285da3dce2815cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::PntsToGltfConverter</name>
    <filename>structCesium3DTilesContent_1_1PntsToGltfConverter.html</filename>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; GltfConverterResult &gt;</type>
      <name>convert</name>
      <anchorfile>structCesium3DTilesContent_1_1PntsToGltfConverter.html</anchorfile>
      <anchor>a49f3b25c77e99270e3ac8cad817929cc</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;pntsBinary, const CesiumGltfReader::GltfReaderOptions &amp;options, const AssetFetcher &amp;assetFetcher)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonWriter::PrettyJsonWriter</name>
    <filename>classCesiumJsonWriter_1_1PrettyJsonWriter.html</filename>
    <base>CesiumJsonWriter::JsonWriter</base>
    <member kind="function">
      <type>bool</type>
      <name>Null</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a1cf66df11ddebfdf04f3e950811f125a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bool</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a5a9f3afcae1ed75cd6a3020371f1b20a</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Int</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>ab34be71961d8f133df87ea2a1149477f</anchor>
      <arglist>(int i) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Uint</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a7770c287da7b692467a21f51aedcb775</anchor>
      <arglist>(unsigned int i) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Uint64</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>af081f55914adeaf2c3f5b4b6c043c1cc</anchor>
      <arglist>(std::uint64_t i) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Int64</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>ab3a458b7b536f79072eefdf1f4b05f2b</anchor>
      <arglist>(std::int64_t i) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Double</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a8a8f13a14974414d7e5090ba21ad5e5e</anchor>
      <arglist>(double d) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RawNumber</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a4e8aab14f983599f120e726ceae0c915</anchor>
      <arglist>(const char *str, unsigned int length, bool copy) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Key</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a94680eba46c583f581ec5456993e973f</anchor>
      <arglist>(std::string_view string) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>String</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a24a4ce5b64701075867fbc1b7ae90041</anchor>
      <arglist>(std::string_view string) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartObject</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a8148cfa7e4a6bced5be17e72e403d588</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EndObject</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>add7ff3ef4c81b502f7f2cdc851885057</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartArray</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a16690405cebfd881208794f77a4724de</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EndArray</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a7c721890ebcb1f041b45251cc9cdb65e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a1334373b5ef26b63c4dbd0688d66c208</anchor>
      <arglist>(std::int32_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a80a3996c03b447861a54717c4ae6f636</anchor>
      <arglist>(std::uint32_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>ae6d61d43dd8895d65c6e83c6e0131a4a</anchor>
      <arglist>(std::int64_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>ad48cb140ed09be0cca388885f709f943</anchor>
      <arglist>(std::uint64_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a794c8967a409667dcc69575ac1c175fc</anchor>
      <arglist>(float value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a2173b196d3969a614fdd2199b86bb3fd</anchor>
      <arglist>(double value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>aff37092cbf62057b2cee1fca95972c0c</anchor>
      <arglist>(std::nullptr_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Primitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a9e309abf85902dbdcdabea0196d78da6</anchor>
      <arglist>(std::string_view string) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a897b1bfbdf35a87296a2aca1e1a29ac9</anchor>
      <arglist>(std::string_view keyName, std::int32_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>ac169f199959db646f79b3ce3aeb47d82</anchor>
      <arglist>(std::string_view keyName, std::uint32_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>af82a28b7ff715f8f5ae7981a2336a1bc</anchor>
      <arglist>(std::string_view keyName, std::int64_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a381eb5b19fd3347a7d392b8e45ea5bce</anchor>
      <arglist>(std::string_view keyName, std::uint64_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>ac8103c3e80513304083fbccb4555854b</anchor>
      <arglist>(std::string_view keyName, std::string_view value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a458cb06c70571915d3766ec86147798d</anchor>
      <arglist>(std::string_view keyName, float value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a63eeccfa8c1172213660d0f805f761ba</anchor>
      <arglist>(std::string_view keyName, double value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyPrimitive</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a0453e757cc4103839f8931df04cfdcf5</anchor>
      <arglist>(std::string_view keyName, std::nullptr_t value) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyArray</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>ad29898472cf0ca6fbadbc4d6135a4f81</anchor>
      <arglist>(std::string_view keyName, std::function&lt; void(void)&gt; insideArray) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeyObject</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a3f7b34a1720b19088f0a9595aed14093</anchor>
      <arglist>(std::string_view keyName, std::function&lt; void(void)&gt; insideObject) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a1dc02ad424d8ea98bc99d5d5862167e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::string_view</type>
      <name>toStringView</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a4ef65d37fa5f96349ec044f26eb6877c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>toBytes</name>
      <anchorfile>classCesiumJsonWriter_1_1PrettyJsonWriter.html</anchorfile>
      <anchor>a9c7c3a94ea0d7c7b8a776532cfe1460d</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::Profile</name>
    <filename>structCesiumIonClient_1_1Profile.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>id</name>
      <anchorfile>structCesiumIonClient_1_1Profile.html</anchorfile>
      <anchor>a65b588fc794948f4bfd94527cab1fba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>scopes</name>
      <anchorfile>structCesiumIonClient_1_1Profile.html</anchorfile>
      <anchor>abcaa7d4046d692e7a8b26c4ed30cdd6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>username</name>
      <anchorfile>structCesiumIonClient_1_1Profile.html</anchorfile>
      <anchor>a53a00f51336904067e1d5996be74cb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>email</name>
      <anchorfile>structCesiumIonClient_1_1Profile.html</anchorfile>
      <anchor>a1a073d66fa655f70e9883bce8374c36f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>emailVerified</name>
      <anchorfile>structCesiumIonClient_1_1Profile.html</anchorfile>
      <anchor>a85f5d9a13af1b995a8dbfb41eaf8c7d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>avatar</name>
      <anchorfile>structCesiumIonClient_1_1Profile.html</anchorfile>
      <anchor>ab1d7df3e33651517894089ac00eb1f8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ProfileStorage</type>
      <name>storage</name>
      <anchorfile>structCesiumIonClient_1_1Profile.html</anchorfile>
      <anchor>ae27bdb9e2dfac1cd3b07b33ffd123516</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::ProfileStorage</name>
    <filename>structCesiumIonClient_1_1ProfileStorage.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>used</name>
      <anchorfile>structCesiumIonClient_1_1ProfileStorage.html</anchorfile>
      <anchor>aab9be9a7f0bd90f8bcd6ae0ad585572c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>available</name>
      <anchorfile>structCesiumIonClient_1_1ProfileStorage.html</anchorfile>
      <anchor>a44cbee0281dc798b87470e934c63659e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>total</name>
      <anchorfile>structCesiumIonClient_1_1ProfileStorage.html</anchorfile>
      <anchor>a3f537127d6dc57858c9fc174bba1b64d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::Promise</name>
    <filename>classCesiumAsync_1_1Promise.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type>void</type>
      <name>resolve</name>
      <anchorfile>classCesiumAsync_1_1Promise.html</anchorfile>
      <anchor>a8ae4009eaf3d2e85d610e4114678c276</anchor>
      <arglist>(T &amp;&amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resolve</name>
      <anchorfile>classCesiumAsync_1_1Promise.html</anchorfile>
      <anchor>a4b3afc5fdc964c76f60f2e93da9981f7</anchor>
      <arglist>(const T &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classCesiumAsync_1_1Promise.html</anchorfile>
      <anchor>a9a158ea6ba977f3d846814ed95584d79</anchor>
      <arglist>(TException error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classCesiumAsync_1_1Promise.html</anchorfile>
      <anchor>a5f75876a0c6a7239cecb930cdf013641</anchor>
      <arglist>(const std::exception_ptr &amp;error) const</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; T &gt;</type>
      <name>getFuture</name>
      <anchorfile>classCesiumAsync_1_1Promise.html</anchorfile>
      <anchor>ab7c0060c20a4f96e0903eeb3b9e03fd9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::Promise&lt; void &gt;</name>
    <filename>classCesiumAsync_1_1Promise_3_01void_01_4.html</filename>
    <member kind="function">
      <type>void</type>
      <name>resolve</name>
      <anchorfile>classCesiumAsync_1_1Promise_3_01void_01_4.html</anchorfile>
      <anchor>a0577d402a2f11d9e0b2e81b9194bbb3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classCesiumAsync_1_1Promise_3_01void_01_4.html</anchorfile>
      <anchor>ab8ff932dfd3e9632dbf53e6ee65ed51f</anchor>
      <arglist>(TException error) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reject</name>
      <anchorfile>classCesiumAsync_1_1Promise_3_01void_01_4.html</anchorfile>
      <anchor>a25779cc73aec02cbe1eabda4818af77a</anchor>
      <arglist>(const std::exception_ptr &amp;error) const</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; void &gt;</type>
      <name>getFuture</name>
      <anchorfile>classCesiumAsync_1_1Promise_3_01void_01_4.html</anchorfile>
      <anchor>a4f48b2d4685595dbc88b65dd19647bdc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Properties</name>
    <filename>structCesium3DTiles_1_1Properties.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Properties.html</anchorfile>
      <anchor>ac77d62ef8cdbbf0e32aef5181bb9c0ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>structCesium3DTiles_1_1Properties.html</anchorfile>
      <anchor>abc0345337e229ca4a6acfa45270b2ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>structCesium3DTiles_1_1Properties.html</anchorfile>
      <anchor>a2dd118c5f46c0815eb349ce8fb21c0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Properties.html</anchorfile>
      <anchor>acf945842cd6e87e60477a4f31a65d64e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::PropertiesReader</name>
    <filename>classCesium3DTilesReader_1_1PropertiesReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertiesReader</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertiesReader.html</anchorfile>
      <anchor>a31aed4f9c36f866d9095a4a59a4a3e51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertiesReader.html</anchorfile>
      <anchor>a46efbd04d2af003e7dc6c20fb2fd4bbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertiesReader.html</anchorfile>
      <anchor>a4c77116077daff857d6875235e0054a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Properties &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertiesReader.html</anchorfile>
      <anchor>af68802fc5d8adfe88e59e7a171b5d5b3</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Properties &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertiesReader.html</anchorfile>
      <anchor>a650fb4ba10fde035e6c208054e395066</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Properties &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertiesReader.html</anchorfile>
      <anchor>a0f383e63b213a68aa5b5ef55ba2aa37e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyArrayCopy</name>
    <filename>classCesiumGltf_1_1PropertyArrayCopy.html</filename>
    <templarg>typename ElementType</templarg>
    <member kind="function">
      <type></type>
      <name>PropertyArrayCopy</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>ae06ee628f4dbcaf77084ef7ee9ef30ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyArrayCopy</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a22c19b4015607bd8e124afb2822bc4c1</anchor>
      <arglist>(const std::vector&lt; ElementType &gt; &amp;values) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyArrayCopy</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>ade04a01a7e18b1f75822b8b7ac5a78bc</anchor>
      <arglist>(PropertyArrayCopy &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>PropertyArrayCopy &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a7b65e73b123da3d0174d20e686c751ca</anchor>
      <arglist>(PropertyArrayCopy &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyArrayCopy</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a7ca0e94cfdd58b7da2750b1e2b2146b8</anchor>
      <arglist>(std::vector&lt; std::byte &gt; &amp;&amp;buffer) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyArrayCopy</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a8209aea9150a5b53b3148c1e75cb6e5f</anchor>
      <arglist>(const PropertyArrayCopy &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>PropertyArrayCopy &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a1f9527d7633d37012d544eacf5fb55e8</anchor>
      <arglist>(const PropertyArrayCopy &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const ElementType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a967fafcef3177a79d5e65301e58285aa</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a8904188981da9441f5270d70411b1a06</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>begin</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a710d4c9e862a74b9f4864c957917f517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>end</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a868a4914bda93244833da724fb875e9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>begin</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a2354564ac1fc8c0ad22dff44f325b3ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>end</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>a2d34cbc6715f1b5e2c5121f6ddffd098</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PropertyArrayView&lt; ElementType &gt; &amp;</type>
      <name>view</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>abadf658cbe552868b7e42905f48b2dfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PropertyArrayView&lt; ElementType &gt;</type>
      <name>toViewAndExternalBuffer</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayCopy.html</anchorfile>
      <anchor>ae4d15a2e0aad3b64f992599f985a2ed5</anchor>
      <arglist>(std::vector&lt; std::byte &gt; &amp;outBuffer) &amp;&amp;</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyArrayView</name>
    <filename>classCesiumGltf_1_1PropertyArrayView.html</filename>
    <templarg>typename ElementType</templarg>
    <member kind="function">
      <type></type>
      <name>PropertyArrayView</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView.html</anchorfile>
      <anchor>ace2b29e639dc0830464a060079c98e3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyArrayView</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView.html</anchorfile>
      <anchor>ab9dd6def92aead4cd8ed7620b491e80c</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;buffer) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const ElementType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView.html</anchorfile>
      <anchor>a92b0fc0986249ff0502d750c17b6fc22</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView.html</anchorfile>
      <anchor>ae869ce0aa789433a5289806133ee0397</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>begin</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView.html</anchorfile>
      <anchor>adcf6f8939ba382770e54f3099ad17016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>end</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView.html</anchorfile>
      <anchor>a1f91682cfefe7bb406e7fb265d206ce7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>begin</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView.html</anchorfile>
      <anchor>ad8c8a742a98729041c1d14f5fe5abd3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>end</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView.html</anchorfile>
      <anchor>aa4028d0712c64dc7f3ca9314a82a789a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyArrayView&lt; bool &gt;</name>
    <filename>classCesiumGltf_1_1PropertyArrayView_3_01bool_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyArrayView</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView_3_01bool_01_4.html</anchorfile>
      <anchor>a458b21690b97fe621ea9d2e00ef6c7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyArrayView</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView_3_01bool_01_4.html</anchorfile>
      <anchor>a6174642e425a31c27783decc06f2408b</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;buffer, int64_t bitOffset, int64_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator[]</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView_3_01bool_01_4.html</anchorfile>
      <anchor>aea35fd9d1631623b555d6286736ded4b</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView_3_01bool_01_4.html</anchorfile>
      <anchor>af74bad36b3fea23545bbe029f3207d7d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyArrayView&lt; std::string_view &gt;</name>
    <filename>classCesiumGltf_1_1PropertyArrayView_3_01std_1_1string__view_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyArrayView</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>af000298f20131974c29a74cdcff17ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyArrayView</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a385127606352c6496b29863fe024612f</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;values, const std::span&lt; const std::byte &gt; &amp;stringOffsets, PropertyComponentType stringOffsetType, int64_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string_view</type>
      <name>operator[]</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a08488e776486e2eba01c0df61d6b732a</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyArrayView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ad27e617b67c400a16021bd12c420d286</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::PropertyAttribute</name>
    <filename>structCesiumGltf_1_1PropertyAttribute.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttribute.html</anchorfile>
      <anchor>a58e498d7cdf2aed4625b24670376ad22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttribute.html</anchorfile>
      <anchor>a09ec4f8657dafffa9c611e66d559cd11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>classProperty</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttribute.html</anchorfile>
      <anchor>a7eb08d5918bc1dd7c6d8e5f70d4d3686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumGltf::PropertyAttributeProperty &gt;</type>
      <name>properties</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttribute.html</anchorfile>
      <anchor>af33750044fb006e3f2ed3c011fcb8c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttribute.html</anchorfile>
      <anchor>ac45150d8fd8070c87018330d442ade87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::PropertyAttributeProperty</name>
    <filename>structCesiumGltf_1_1PropertyAttributeProperty.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttributeProperty.html</anchorfile>
      <anchor>a4e4a3140ea88c3acc817b0eb47aafbc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>attribute</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttributeProperty.html</anchorfile>
      <anchor>a137f22b72f0d7c894d2a8a709eed5e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>offset</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttributeProperty.html</anchorfile>
      <anchor>aab34e4c473e9e5e206c49b029e3e896e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>scale</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttributeProperty.html</anchorfile>
      <anchor>af3d58ff4f7ced6e60efa223b5de3aeee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>max</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttributeProperty.html</anchorfile>
      <anchor>a32889ffaf0f4d0723605fa0f93d0037b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>min</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttributeProperty.html</anchorfile>
      <anchor>aa1a77e79f21239dcd795ba5bba34335d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1PropertyAttributeProperty.html</anchorfile>
      <anchor>aed2e366f985d0405dc2ef116e8edc9be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::PropertyAttributePropertyReader</name>
    <filename>classCesiumGltfReader_1_1PropertyAttributePropertyReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyReader</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributePropertyReader.html</anchorfile>
      <anchor>abd2f43d3e9854fb3e54c05586783359f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributePropertyReader.html</anchorfile>
      <anchor>abaf2ea923cf3b9d1dba87fc72c51125b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributePropertyReader.html</anchorfile>
      <anchor>a089fc81da6d08d4fae74b84690757d3f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyAttributeProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributePropertyReader.html</anchorfile>
      <anchor>a3ab2ca4d96ff3a041449516a07d4298e</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyAttributeProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributePropertyReader.html</anchorfile>
      <anchor>a896495dddc0cbc0ad1042cee2cecb2a7</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::PropertyAttributeProperty &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributePropertyReader.html</anchorfile>
      <anchor>abaef78785f937e380a4b60bca5633260</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyAttributePropertyView</name>
    <filename>classCesiumGltf_1_1PropertyAttributePropertyView.html</filename>
    <templarg>typename ElementType</templarg>
    <templarg>bool Normalized</templarg>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyAttributePropertyView&lt; ElementType, false &gt;</name>
    <filename>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01false_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <base>CesiumGltf::PropertyView&lt; ElementType, false &gt;</base>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>aa4b9efd37a2a0b8194209a710e4e9f35</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a3be96879968c79ed23d9d7d61f3ba134</anchor>
      <arglist>(PropertyViewStatusType status) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>ace751873dc9e707b2cdc92627ca25b77</anchor>
      <arglist>(const ClassProperty &amp;classProperty, int64_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>aed4ada14ea6102899b2d4559fd5e904b</anchor>
      <arglist>(const PropertyAttributeProperty &amp;property, const ClassProperty &amp;classProperty, const AccessorView&lt; ElementType &gt; &amp;accessorView) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ElementType &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a0e6747bcd2f96a88175cff6d78fa9d04</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>getRaw</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a7a66f3964a74fc932fff33329b0d4b7b</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>ae6137cd8df71fefbcb4ce25b8ee35581</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyAttributePropertyView&lt; ElementType, true &gt;</name>
    <filename>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01true_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <base>CesiumGltf::PropertyView&lt; ElementType, true &gt;</base>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>acf2ffda4e34ef5d606e564e7989cf873</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a906cb5f33c7ad93608ebe385fa151514</anchor>
      <arglist>(PropertyViewStatusType status) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ae583f7a819092fb9fad194547fc1b84a</anchor>
      <arglist>(const ClassProperty &amp;classProperty, int64_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyAttributePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a514def39bfc0be22bccd07d22963f5c5</anchor>
      <arglist>(const PropertyAttributeProperty &amp;property, const ClassProperty &amp;classProperty, const AccessorView&lt; ElementType &gt; &amp;accessorView) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; NormalizedType &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a77856c3e634fb90c266d62ea2b6f2615</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>getRaw</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a0fe87b74a20819d7d2c459b7de4b8b55</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a5fec27745bbbe9b5029af47483dd35d1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyAttributePropertyViewStatus</name>
    <filename>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</filename>
    <base>CesiumGltf::PropertyViewStatus</base>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidPropertyAttribute</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>ad5c60759dab5fdffa589ee0884e8bbb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorUnsupportedProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>ac7414004046a62405aba9b8fa41765af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorMissingAttribute</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>a5cf8e359f22296604defe5ddde97bbd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidAccessor</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>a55340c8df2d6355b2b52f143489761b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorAccessorTypeMismatch</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>acbab79e9ac305bd6a83b8c17eaae2dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorAccessorComponentTypeMismatch</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>aa2d37da1ff29a96b533f1609160b2f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorAccessorNormalizationMismatch</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>a3cbe9026bb40dc6a0744ea44ee1f5b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidBufferView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>a08f2634ca056d8975bcbdc5826b865db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidBuffer</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>a3509a382d510c7a6fae2a30acb6e0d1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorAccessorOutOfBounds</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>af14ebceeb4483c4bc594c073832be9b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorBufferViewOutOfBounds</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributePropertyViewStatus.html</anchorfile>
      <anchor>af68f95f366b38ed2b805ab6b99319943</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::PropertyAttributeReader</name>
    <filename>classCesiumGltfReader_1_1PropertyAttributeReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyAttributeReader</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributeReader.html</anchorfile>
      <anchor>a06956ab07e688821388c786477ad96ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributeReader.html</anchorfile>
      <anchor>ac6d52c1beb595bbdd9996a61b395bd65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributeReader.html</anchorfile>
      <anchor>a649735e8ff1d1b0dbbdfcb7c0a9b0087</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyAttribute &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributeReader.html</anchorfile>
      <anchor>ae43f8d39bf04cf49031be2f748885387</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyAttribute &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributeReader.html</anchorfile>
      <anchor>a01e64245a50bf5b45bfaec7c77f4eb49</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::PropertyAttribute &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyAttributeReader.html</anchorfile>
      <anchor>a3d8ad4cff47d95816bac5e66e6b5c4ef</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyAttributeView</name>
    <filename>classCesiumGltf_1_1PropertyAttributeView.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyAttributeView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributeView.html</anchorfile>
      <anchor>a1dfd7bfb849a6c7d6f8ae3f5a1fe3207</anchor>
      <arglist>(const Model &amp;model, const PropertyAttribute &amp;propertyAttribute) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PropertyAttributeViewStatus</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributeView.html</anchorfile>
      <anchor>a34d6e5a1ac1446db7f10a9b465d6c64a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributeView.html</anchorfile>
      <anchor>aa714a28b5dc6b481cfaca51e85ebf927</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Class *</type>
      <name>getClass</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributeView.html</anchorfile>
      <anchor>af81b340a90a7e8a383a1d0f68feb8f75</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const ClassProperty *</type>
      <name>getClassProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributeView.html</anchorfile>
      <anchor>a23b774cf456c463ca2133e37c1eca043</anchor>
      <arglist>(const std::string &amp;propertyId) const</arglist>
    </member>
    <member kind="function">
      <type>PropertyAttributePropertyView&lt; T, Normalized &gt;</type>
      <name>getPropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributeView.html</anchorfile>
      <anchor>a8f4b19fda2443cfb5447b2a08552500d</anchor>
      <arglist>(const MeshPrimitive &amp;primitive, const std::string &amp;propertyId) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributeView.html</anchorfile>
      <anchor>adb01db1dbfb3c9fea72e5d50efed37ad</anchor>
      <arglist>(const MeshPrimitive &amp;primitive, const std::string &amp;propertyId, Callback &amp;&amp;callback) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyAttributeView.html</anchorfile>
      <anchor>addc4a48246e68246372af4129202b0c8</anchor>
      <arglist>(const MeshPrimitive &amp;primitive, Callback &amp;&amp;callback) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::PropertyStatistics</name>
    <filename>structCesium3DTiles_1_1PropertyStatistics.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>ae61f5ee4800b6b88c9957b53dec20667</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>min</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>ade47d2b29eeeb3583958015f5ede7215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>max</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>a19a8baa683ae9c344230abe681d17cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>mean</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>a398ec6d77dcfa0a156e56fac1bd8ce6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>median</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>a823e3d9422bbbeac920edcc44786cfba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>standardDeviation</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>a75dc404193923123147106981d52a32e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>variance</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>abe77eb650c8bab16584a9e25b5626466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>sum</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>aef9968eca8b61043e7a70899548de8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumUtility::JsonValue &gt;</type>
      <name>occurrences</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>ac12e2d2d6a64de76cd5362fd51805382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1PropertyStatistics.html</anchorfile>
      <anchor>a987bd1bebaa5f28904f883dbb4427aed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::PropertyStatisticsReader</name>
    <filename>classCesium3DTilesReader_1_1PropertyStatisticsReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyStatisticsReader</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyStatisticsReader.html</anchorfile>
      <anchor>a491a0ea96422a3ae11ff0aaaf3a69fda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyStatisticsReader.html</anchorfile>
      <anchor>a374750297c4ceaae7f9166404799ff4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyStatisticsReader.html</anchorfile>
      <anchor>a07ad82a4f04d3eb3b414fdb4bb638d69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::PropertyStatistics &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyStatisticsReader.html</anchorfile>
      <anchor>a0d08df50f9b9c09b77b37c4c7c1d3089</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::PropertyStatistics &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyStatisticsReader.html</anchorfile>
      <anchor>a10e998bf8d2fe0f213102cb8529d5bc1</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::PropertyStatistics &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyStatisticsReader.html</anchorfile>
      <anchor>ac0cc7484efe2fe0be3e5621d6a4e89bc</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::PropertyTable</name>
    <filename>structCesium3DTiles_1_1PropertyTable.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTable.html</anchorfile>
      <anchor>aca4d8c2eb07980b98a5447b1cf02c0f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTable.html</anchorfile>
      <anchor>af7b7ddef42e7ecbb4e3fab74c34b58b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>classProperty</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTable.html</anchorfile>
      <anchor>a12e23004b552e92a069a8d46ab6f60de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>count</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTable.html</anchorfile>
      <anchor>aa42ab32dc064697ba64fe54df63e96ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, Cesium3DTiles::PropertyTableProperty &gt;</type>
      <name>properties</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTable.html</anchorfile>
      <anchor>a317fece040763b4c4ced67fa9a0424c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTable.html</anchorfile>
      <anchor>a8f25edd2f183eaff7a3418a24a0d46a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::PropertyTable</name>
    <filename>structCesiumGltf_1_1PropertyTable.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1PropertyTable.html</anchorfile>
      <anchor>a7ee06d50aa4acce3be4a7c408ac0506c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1PropertyTable.html</anchorfile>
      <anchor>ab0c7aea08eb44846d1958ffa19aabe2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>classProperty</name>
      <anchorfile>structCesiumGltf_1_1PropertyTable.html</anchorfile>
      <anchor>a97ea760d253d8a0aaaa6cc5b4037c79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>count</name>
      <anchorfile>structCesiumGltf_1_1PropertyTable.html</anchorfile>
      <anchor>ab580cda74db867cdfa5710d917c96a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumGltf::PropertyTableProperty &gt;</type>
      <name>properties</name>
      <anchorfile>structCesiumGltf_1_1PropertyTable.html</anchorfile>
      <anchor>a14724643bb2f7ba8a6abcd70c35ddff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1PropertyTable.html</anchorfile>
      <anchor>a52ad9fca0a86ac0f7dd30ecae787c871</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::PropertyTableProperty</name>
    <filename>structCesium3DTiles_1_1PropertyTableProperty.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">Cesium3DTiles::PropertyTableProperty::ArrayOffsetType</class>
    <class kind="struct">Cesium3DTiles::PropertyTableProperty::StringOffsetType</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a1e7b06f660698c2375bfc1e575264c36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>values</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>adc9862455ea6483d3c21ca5442fba78f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>arrayOffsets</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>acaede2b0c30e53681cd43e2b558d2b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>stringOffsets</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a1e9e2380b0899057a72e7b18b20ee9b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>arrayOffsetType</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>aac3f23b8761a3124f0ee59c7ca80f65d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>stringOffsetType</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>afbb05d11e3001008028c24339ce65490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>offset</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a7bb52e3635ff6c40b2c515489ca4da29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>scale</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a0dff5d7a2fa68e6b16e246ca91d958af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>max</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a6bb38bd974bccf35552219e7439fd02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>min</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a1fcd6f18331210b9754c27c6fab011df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a0ede49c9606dff99639d55855c12f97e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::PropertyTableProperty</name>
    <filename>structCesiumGltf_1_1PropertyTableProperty.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">CesiumGltf::PropertyTableProperty::ArrayOffsetType</class>
    <class kind="struct">CesiumGltf::PropertyTableProperty::StringOffsetType</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a6b94928b65c74f8603baac7d44cdec6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>values</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a852488fa6ded99a83370cd913a719fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>arrayOffsets</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a786441062c4285e8b6a994d4262a653c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>stringOffsets</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a77849790c93f1ea422a40824c382a120</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>arrayOffsetType</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a8d968214fba80eefe2eac91fa95bf885</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>stringOffsetType</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a91700be2bb3f92374402e336c8db69a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>offset</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a2fb9b96003d47401096e3aaa55b7eb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>scale</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a2edbae3a040742fb56e71f2612329609</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>max</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a148ae2453746f124cc51fdec27204260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>min</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a8ade0eb8226d485c8acaed79a2ddef4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty.html</anchorfile>
      <anchor>a02cadbbaa5c99754300f9bb3e7402731</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::PropertyTablePropertyReader</name>
    <filename>classCesium3DTilesReader_1_1PropertyTablePropertyReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyReader</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>abff5c9aa974519abff9b24fd6a027228</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>afd47da7f28567f9a2a972e8ae81b36cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>a91a21c53d6e7b5b4ae0d6247685ff1ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::PropertyTableProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>ada218e2af153cfc08dcd915586d444b3</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::PropertyTableProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>a8678c5bd494d73b08b0e0c0c5962ab3d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::PropertyTableProperty &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>a510985e9ef3ef4bc2fcbdf461cdaeba2</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::PropertyTablePropertyReader</name>
    <filename>classCesiumGltfReader_1_1PropertyTablePropertyReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyReader</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>a544dae03b87b86433fece892385147a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>a125e4377e9be1408eaf290ca760e4145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>af16a6d22cea449bfb4abf5cae202a2bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyTableProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>a59d874b7acc78e59faf40beb8da77bbb</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyTableProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>a0c295c60fbb36c7eac1a7b9bbde8f6e6</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::PropertyTableProperty &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTablePropertyReader.html</anchorfile>
      <anchor>afb98336047e622ce71c14dd48ad7235c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTablePropertyView</name>
    <filename>classCesiumGltf_1_1PropertyTablePropertyView.html</filename>
    <templarg>typename ElementType</templarg>
    <templarg>bool Normalized</templarg>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTablePropertyView&lt; ElementType, false &gt;</name>
    <filename>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <base>CesiumGltf::PropertyView&lt; ElementType, false &gt;</base>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a2e575a56da75553c31d4073d0527c026</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a7ac88562716a922487101b55a316bb67</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a2650545d009a04de79584d3f25c4d185</anchor>
      <arglist>(const ClassProperty &amp;classProperty, int64_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>ac2ae5ebca09eed5734bcdb89bfa2f187</anchor>
      <arglist>(const PropertyTableProperty &amp;property, const ClassProperty &amp;classProperty, int64_t size, std::span&lt; const std::byte &gt; values) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a2ba86597b88428003d91b50f07e8be96</anchor>
      <arglist>(const PropertyTableProperty &amp;property, const ClassProperty &amp;classProperty, int64_t size, std::span&lt; const std::byte &gt; values, std::span&lt; const std::byte &gt; arrayOffsets, std::span&lt; const std::byte &gt; stringOffsets, PropertyComponentType arrayOffsetType, PropertyComponentType stringOffsetType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyValueViewToCopy&lt; ElementType &gt; &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a466f04f2684e27fb25345eba2b08bdcd</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>getRaw</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a6dd341d95c9e4bd79912bda723d04e38</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a958717cf3661056db4da7a39ce5818df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTablePropertyView&lt; ElementType, true &gt;</name>
    <filename>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <base>CesiumGltf::PropertyView&lt; ElementType, true &gt;</base>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a15eea7d168a24e8ffa3d05560567b59e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ae770c948e0cf24ee22d5fac4606a4726</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>af7c717f36da07351c0c243d4d40187de</anchor>
      <arglist>(const ClassProperty &amp;classProperty, int64_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ac2765728a1b47723655087dbc3d3c616</anchor>
      <arglist>(const PropertyTableProperty &amp;property, const ClassProperty &amp;classProperty, int64_t size, std::span&lt; const std::byte &gt; values) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTablePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>aeb8a20d06dceab278db2513710480737</anchor>
      <arglist>(const PropertyTableProperty &amp;property, const ClassProperty &amp;classProperty, int64_t size, std::span&lt; const std::byte &gt; values, std::span&lt; const std::byte &gt; arrayOffsets, PropertyComponentType arrayOffsetType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyValueViewToCopy&lt; NormalizedType &gt; &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a21a5886307ba483217b9642f300e47f7</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>getRaw</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a816084cf877dd035a964e73e176d0cc3</anchor>
      <arglist>(int64_t index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>af7af4ada16fbb94e5646b9972f3d66fc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTablePropertyViewStatus</name>
    <filename>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</filename>
    <base>CesiumGltf::PropertyViewStatus</base>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidPropertyTable</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a6c4cdd0f90acb4ce927ebe32a8a65cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidValueBufferView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a28c49bb579cad77ba48cf4a9f537aab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidArrayOffsetBufferView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a1446421b456999809ba66272a0facfa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidStringOffsetBufferView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a75a8f4380485a7d66a1e907100d6caa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidValueBuffer</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a71c19a0a3db1c71a86e1a19bca2050f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidArrayOffsetBuffer</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a3898ad9c930f46fbc5e085a8da275e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidStringOffsetBuffer</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a2a5db862ef74e78ce9e7c67e648db885</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorBufferViewOutOfBounds</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a1ace2a07bb61100c2876ea6aa7917440</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorBufferViewSizeNotDivisibleByTypeSize</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>af0718578899fe4a231e4b8b020e84779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorBufferViewSizeDoesNotMatchPropertyTableCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a033e77fdb7be5a57af48033256fa408e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorArrayCountAndOffsetBufferCoexist</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a1b71ce7135d6b3ea2c6c552c0d29288d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorArrayCountAndOffsetBufferDontExist</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a314658d1a15cc10317343437d69f7ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidArrayOffsetType</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a95be771adf87aa3bf9054c023c8683b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidStringOffsetType</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a2cb0d6ff70f38a0e5ce8f26696edbd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorArrayOffsetsNotSorted</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a351e1a96a4c7f7f8988cb08c73d02b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorStringOffsetsNotSorted</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>ac01064150e51c3a09d5e31a80198c4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorArrayOffsetOutOfBounds</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>a528b7fe0b2f588cd0fbfadf470aed7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorStringOffsetOutOfBounds</name>
      <anchorfile>classCesiumGltf_1_1PropertyTablePropertyViewStatus.html</anchorfile>
      <anchor>aebb257274c495fbda8ff4ae7d5bbff73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::PropertyTableReader</name>
    <filename>classCesium3DTilesReader_1_1PropertyTableReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyTableReader</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a88f599387e0a6ebd444c73e074b8dc14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a77951cc468c5478984cc1b08a708eb5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a23b179a535bf6af533ae270e7a99ba97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::PropertyTable &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a652c782c4a1db33e0bbd2ff8fb47e21e</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::PropertyTable &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a16414fadd538bbfa90c8a97666f719c3</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::PropertyTable &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>af154f64fc3d19da1e344cbeb9260641e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::PropertyTableReader</name>
    <filename>classCesiumGltfReader_1_1PropertyTableReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyTableReader</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>adfe8cf7c4206c7a3d1ec70e1a2b8f4f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a8d539e34e3d8cc3fae4e4cdd5b28ac1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a436de274780c11226f795b132eab37ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyTable &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a893f1fe3d22ce5a38a09c1349508be96</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyTable &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a82c49e474496ffff26c04c36033874f2</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::PropertyTable &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTableReader.html</anchorfile>
      <anchor>a3ffd2a49b0edce1226444fba3772ee3a</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTableView</name>
    <filename>classCesiumGltf_1_1PropertyTableView.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyTableView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>ac69f594d0754380936a1d38e69f341ab</anchor>
      <arglist>(const Model &amp;model, const PropertyTable &amp;propertyTable)</arglist>
    </member>
    <member kind="function">
      <type>PropertyTableViewStatus</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>a0c6a7ac03724236a49da90efd353c409</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>aa09c9b0d865bcaa9ca1358ba71f52ebf</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>size</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>a7cdff10e112d7b7f4f0f046fe0f93a2a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Class *</type>
      <name>getClass</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>a65d434044f0c78de9c18bd4e0bc4054b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const ClassProperty *</type>
      <name>getClassProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>ab4e1300a210c75ee9673b54189881b63</anchor>
      <arglist>(const std::string &amp;propertyId) const</arglist>
    </member>
    <member kind="function">
      <type>PropertyTablePropertyView&lt; T, Normalized &gt;</type>
      <name>getPropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>a7cc05649b28658efe348a438d730b724</anchor>
      <arglist>(const std::string &amp;propertyId) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>a20c9ebb3208ee69e3b83b5eae9b1f43b</anchor>
      <arglist>(const std::string &amp;propertyId, Callback &amp;&amp;callback) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyTableView.html</anchorfile>
      <anchor>aa5b2b9bacc38f2d361b60247dd074b71</anchor>
      <arglist>(Callback &amp;&amp;callback) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::PropertyTexture</name>
    <filename>structCesiumGltf_1_1PropertyTexture.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1PropertyTexture.html</anchorfile>
      <anchor>ad66b7eed6e8fcfba931c2201e0a375a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1PropertyTexture.html</anchorfile>
      <anchor>a1e58dda2d4cab1a8e9b6ba999ded833d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>classProperty</name>
      <anchorfile>structCesiumGltf_1_1PropertyTexture.html</anchorfile>
      <anchor>a390b23ebed5bbdcb985db6a745ff0021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumGltf::PropertyTextureProperty &gt;</type>
      <name>properties</name>
      <anchorfile>structCesiumGltf_1_1PropertyTexture.html</anchorfile>
      <anchor>a4859fdf3539cc92b03f1cf33ed39dedc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1PropertyTexture.html</anchorfile>
      <anchor>a56f9162690552b7579a512c7ebc51323</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::PropertyTextureProperty</name>
    <filename>structCesiumGltf_1_1PropertyTextureProperty.html</filename>
    <base>CesiumGltf::TextureInfo</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1PropertyTextureProperty.html</anchorfile>
      <anchor>a7a6c14686cd72186f139526c734f45e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int64_t &gt;</type>
      <name>channels</name>
      <anchorfile>structCesiumGltf_1_1PropertyTextureProperty.html</anchorfile>
      <anchor>ab8a3f4e7a224df4eeac0dd014567b4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>offset</name>
      <anchorfile>structCesiumGltf_1_1PropertyTextureProperty.html</anchorfile>
      <anchor>a5a6bd36f116fd13b7a959dd705788514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>scale</name>
      <anchorfile>structCesiumGltf_1_1PropertyTextureProperty.html</anchorfile>
      <anchor>aebafe2e7756320998d5ff482aa5acce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>max</name>
      <anchorfile>structCesiumGltf_1_1PropertyTextureProperty.html</anchorfile>
      <anchor>af9cda48ceb05ccf686c3a26f5cb2ded8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumUtility::JsonValue &gt;</type>
      <name>min</name>
      <anchorfile>structCesiumGltf_1_1PropertyTextureProperty.html</anchorfile>
      <anchor>a2c75dc9ef2a3abb42eeedf2a96e49a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1PropertyTextureProperty.html</anchorfile>
      <anchor>a9db442da5904c889cd870e8e0610ff60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::PropertyTexturePropertyReader</name>
    <filename>classCesiumGltfReader_1_1PropertyTexturePropertyReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyReader</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTexturePropertyReader.html</anchorfile>
      <anchor>a5634d8ccb1be18667cbc84f64cd2069b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTexturePropertyReader.html</anchorfile>
      <anchor>a2623c3f914ba92c43a1779b3f11f2f16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTexturePropertyReader.html</anchorfile>
      <anchor>a304e14107851f521b17bf048c20386f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyTextureProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTexturePropertyReader.html</anchorfile>
      <anchor>ae82654fa7b27a438d1bab5fcf9c1986f</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyTextureProperty &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTexturePropertyReader.html</anchorfile>
      <anchor>aa13b959a36ac4afd30afb535b477457c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::PropertyTextureProperty &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTexturePropertyReader.html</anchorfile>
      <anchor>add1880b76f0a21f4c6ff13bed43da72c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTexturePropertyView</name>
    <filename>classCesiumGltf_1_1PropertyTexturePropertyView.html</filename>
    <templarg>typename ElementType</templarg>
    <templarg>bool Normalized</templarg>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTexturePropertyView&lt; ElementType, false &gt;</name>
    <filename>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <base>CesiumGltf::PropertyView&lt; ElementType, false &gt;</base>
    <base>CesiumGltf::TextureView</base>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a9ac7be367803143a05d579ea24fba431</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a42340053ad6675a31045aedff58d2f98</anchor>
      <arglist>(PropertyViewStatusType status) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a5d138e4824e198f400ea8f313d249f12</anchor>
      <arglist>(const ClassProperty &amp;classProperty) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>aee4465256e8a395539382417ef977446</anchor>
      <arglist>(const PropertyTextureProperty &amp;property, const ClassProperty &amp;classProperty, const Sampler &amp;sampler, const ImageAsset &amp;image, const TextureViewOptions &amp;options=TextureViewOptions()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyValueViewToCopy&lt; ElementType &gt; &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a3ddc711b664e1c2fbd8df5d6663b9bee</anchor>
      <arglist>(double u, double v) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>PropertyValueViewToCopy&lt; ElementType &gt;</type>
      <name>getRaw</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a4ca2ff4f9943b6802669ad0de96ca690</anchor>
      <arglist>(double u, double v) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int64_t &gt; &amp;</type>
      <name>getChannels</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>aee6c307c23b34e23e70df8b94aa8e81c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getSwizzle</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a3225fd59b7cd9c26652ee9efb7781000</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTexturePropertyView&lt; ElementType, true &gt;</name>
    <filename>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <base>CesiumGltf::PropertyView&lt; ElementType, true &gt;</base>
    <base>CesiumGltf::TextureView</base>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a4ca49f2a0defc6f6c9f436bda7b25741</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>aa5e2c0bb4195193a7eb104700277cc47</anchor>
      <arglist>(PropertyViewStatusType status) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a3d7dda90bd6d044ae1c27abfc29c82c5</anchor>
      <arglist>(const ClassProperty &amp;classProperty) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTexturePropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>aecce40dd8007069f3db1d28562b1c821</anchor>
      <arglist>(const PropertyTextureProperty &amp;property, const ClassProperty &amp;classProperty, const Sampler &amp;sampler, const ImageAsset &amp;image, const TextureViewOptions &amp;options=TextureViewOptions()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyValueViewToCopy&lt; NormalizedType &gt; &gt;</type>
      <name>get</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ad69ce617a9027ee8090acbead7e184f8</anchor>
      <arglist>(double u, double v) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>PropertyValueViewToCopy&lt; ElementType &gt;</type>
      <name>getRaw</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a0c4a1f39fc6cc71904f8129ffef740f0</anchor>
      <arglist>(double u, double v) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int64_t &gt; &amp;</type>
      <name>getChannels</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>afb2a946d7d4e21a8ca0dc9d416d4f70f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getSwizzle</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a44cb076ceba39efba94404ea73515776</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTexturePropertyViewStatus</name>
    <filename>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</filename>
    <base>CesiumGltf::PropertyViewStatus</base>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidPropertyTexture</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>aab10a7fc7d52ce7e58b2248111a6a745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorUnsupportedProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>a0f89fa36a6821fbfc3848d11c53b365e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidTexture</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>ac59db5c8b91007f24c99e4f58efe4790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidSampler</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>aa33acc1904ec6880873640e4dbe401ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidImage</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>a3b54e4d69e7378b1e33f75a778851ea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorEmptyImage</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>afef832dec9c89ebbfeb8c6380d56a793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidBytesPerChannel</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>aa1f81b99174c6fed635cae28dc69589f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorInvalidChannels</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>a519ac445eb84b43e8d20ad58b5c19da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ErrorChannelsAndTypeMismatch</name>
      <anchorfile>classCesiumGltf_1_1PropertyTexturePropertyViewStatus.html</anchorfile>
      <anchor>a2649c953dd56ded899c8c527cd5bea3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::PropertyTextureReader</name>
    <filename>classCesiumGltfReader_1_1PropertyTextureReader.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyTextureReader</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTextureReader.html</anchorfile>
      <anchor>ac6532e7368c91d8012694433f58c125f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTextureReader.html</anchorfile>
      <anchor>ae73e940ed72c8cf4d4418cecc404aa80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTextureReader.html</anchorfile>
      <anchor>ac4826370ea8047dc2d3ede23ee49aa3a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyTexture &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTextureReader.html</anchorfile>
      <anchor>a81778197f806504fed8219402205f276</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::PropertyTexture &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTextureReader.html</anchorfile>
      <anchor>aa294aacd0c3bce13f6f1433bfa64431d</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::PropertyTexture &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1PropertyTextureReader.html</anchorfile>
      <anchor>a948748d5f624009be6c16a968852c608</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyTextureView</name>
    <filename>classCesiumGltf_1_1PropertyTextureView.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyTextureView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTextureView.html</anchorfile>
      <anchor>a0d5e0dd3f9116ce841d1ddea3c726462</anchor>
      <arglist>(const Model &amp;model, const PropertyTexture &amp;propertyTexture) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PropertyTextureViewStatus</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyTextureView.html</anchorfile>
      <anchor>a1c891b2397f5fc1ac3755a2cd6f94efe</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyTextureView.html</anchorfile>
      <anchor>acb57aa7165a643548df0b7275ab1461a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Class *</type>
      <name>getClass</name>
      <anchorfile>classCesiumGltf_1_1PropertyTextureView.html</anchorfile>
      <anchor>ae3d0b67f223308b3024b81f82d5ceeff</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const ClassProperty *</type>
      <name>getClassProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyTextureView.html</anchorfile>
      <anchor>a57a5006fe0a4bc45eb1f72c72b4cc5e1</anchor>
      <arglist>(const std::string &amp;propertyId) const</arglist>
    </member>
    <member kind="function">
      <type>PropertyTexturePropertyView&lt; T, Normalized &gt;</type>
      <name>getPropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTextureView.html</anchorfile>
      <anchor>a194b2fb955e9bf1321c55e1cc58f2aaa</anchor>
      <arglist>(const std::string &amp;propertyId, const TextureViewOptions &amp;propertyOptions=TextureViewOptions()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyTextureView.html</anchorfile>
      <anchor>a2a056eaa0e6717a17f607fa8b924757f</anchor>
      <arglist>(const std::string &amp;propertyId, Callback &amp;&amp;callback, const TextureViewOptions &amp;propertyOptions=TextureViewOptions()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyTextureView.html</anchorfile>
      <anchor>a2763ebe386e453b78724e5c21c9753ef</anchor>
      <arglist>(Callback &amp;&amp;callback, const TextureViewOptions &amp;propertyOptions=TextureViewOptions()) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView</name>
    <filename>classCesiumGltf_1_1PropertyView.html</filename>
    <templarg>typename ElementType</templarg>
    <templarg>bool Normalized</templarg>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView&lt; bool &gt;</name>
    <filename>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a9a75d3b6053490456a589bd8b183d0e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a76bea77fea2726c54d2dd1a1dc7f98c4</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a03d8cb07e8d86705cb1ce0acf29daf85</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a1c09658e8d73e3d1eb3ed2bb953097cd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>semantic</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a5d9930ddda2e1cda8b57a14c553d6948</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>description</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a323d57fc1e19d883ccb4c9222108d253</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>arrayCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a2e30f99a46bcfa810f79534e402354dc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a7e82dbdf30ecc7b6c8030a647028d89e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; bool &gt;</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>aad68acbd72d6b89a72e22b14dbdc98ca</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; bool &gt;</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a4d75cd398963cf454f702cfb9da0aaae</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; bool &gt;</type>
      <name>max</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>ae4eba887c49f7e9d015ad8f9b8f52dd1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; bool &gt;</type>
      <name>min</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a0aa705c84291a2adb24ccde51338bbdc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>required</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a2ad834d8c916ae0b41ddfc8ca9464c22</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; bool &gt;</type>
      <name>noData</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a0e33db4a0e517cdb121f72402a4d7045</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; bool &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>aa3e0f9b77ccdfaa7aa471f4bd3bff817</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>abb0383068c516d045ee93a866bd6c59d</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a71a32a889e531dee29026913ce8490b2</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTableProperty &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyViewStatusType</type>
      <name>_status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01bool_01_4.html</anchorfile>
      <anchor>a953eed9bbea6f14a997c6dd0e4899413</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView&lt; ElementType, false &gt;</name>
    <filename>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>af96d60c97027b59429445c16bd8e2636</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a989db0e9c738e35650e1d12ad2005b70</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>aa95ecf4cb23b580ad923ce9303cf8d85</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a5aa493e106b4daadb6b1da73c0432d8e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>semantic</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a67f93b5095944a2ad781dc7fe6ab2110</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>description</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>af3152317b8e63fcae43d69fdec062fdc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>arrayCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a9e215186e64e785948dec4a77c789ae3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a78ca3ee9267abbbb085b5e825d827029</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ElementType &gt;</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a022da441b03465475e236d3dddb22b96</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ElementType &gt;</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a05d0f43db02f20d022c19c381ff0f46e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ElementType &gt;</type>
      <name>max</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>abedc80236e66120a802adab9c09d8ad3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ElementType &gt;</type>
      <name>min</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>ab20c0ce6689471358500f5f4a28a6eca</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>required</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a116158d2256ff2014d9f329259dfcf49</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ElementType &gt;</type>
      <name>noData</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>aad1499f5cadd9110ee5250559db1d024</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ElementType &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a19ed03bf334716bf429cf6a242161c33</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>ac15ef6993ff36e6a1ef37bb8065036f8</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a68efbf8b39922d095874470d58695786</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTableProperty &amp;property)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a9b9ab188c59184d143a822bea93e0bd2</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTextureProperty &amp;property)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>abeb461ce97b247648f7a70ef96243975</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyAttributeProperty &amp;property)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyViewStatusType</type>
      <name>_status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01false_01_4.html</anchorfile>
      <anchor>a62e58493efac7ad4dd2f138adba20b49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView&lt; ElementType, true &gt;</name>
    <filename>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a7a9e0f4c35417e15594b2f0b34240527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ac4ac5e1b9d2e9b14d72f09729061afe6</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ab4792ff951d847dcb6db4a86cf7986af</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ae98c7494ae10439d40129ff712ddc8d2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>semantic</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a2181d87b85fddb9668c69093dfb324ed</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>description</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a36da1b16785a60b4c594967362a59c32</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>arrayCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>adc9d8e007194adf936699d88b91b1db6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a7641b5a9f0d3a21023e16512a692ce74</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; NormalizedType &gt;</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ac68ed0b0b9265929a0781694881ee9cd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; NormalizedType &gt;</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a6e12c248880ca11244644a35339f1661</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; NormalizedType &gt;</type>
      <name>max</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a27ea764dd3c20f311e7193a66f092815</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; NormalizedType &gt;</type>
      <name>min</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>adf9539330065ac8ad7779fcec5fb2c22</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>required</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>ac3d7413284988d6ec72450417a5c8f74</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ElementType &gt;</type>
      <name>noData</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a1f67d8c8c3d3a04f308aecdab1e50437</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; NormalizedType &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a85a58e71beb1a6225dcd08318b9c87a8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a2c69b5999deec822bcbd9873ca61487f</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a0a788f334a9310bba97b6f4acba2c1fb</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTableProperty &amp;property)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a4c288607f9e5b6be620a3eabd2b0529b</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTextureProperty &amp;property)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a4ee8e2214f57f2e0a6ea7070cdd4defe</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyAttributeProperty &amp;property)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyViewStatusType</type>
      <name>_status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01ElementType_00_01true_01_4.html</anchorfile>
      <anchor>a58e0d3aab8ce2396636e284e0d6e0bb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView&lt; PropertyArrayView&lt; bool &gt; &gt;</name>
    <filename>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a6459adb51ef870803551db50f0c5f667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>aa5a8be0bacd693cc8902190ae96307b3</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>ad43b9ea4f86506892ccaf9fac8f89c91</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>ae9cd713cbccfe625f086a79da62b7f5d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>semantic</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a3ba378eedafe908040d992c58ad99f9f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>description</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a2f4fb94b1270cf57cbdccd971ed564a6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>arrayCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a187bbba4036505226b5f607f6e99f15c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>aed3553a00bf9a2acbb88b3fac6b444dd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; bool &gt; &gt;</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a934709fd0c3d2bc018fcdff771ae0889</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; bool &gt; &gt;</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>aa8f4c89ccb9062f9621d832b9bbc467f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; bool &gt; &gt;</type>
      <name>max</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a4d0c4e548885daa4484a77adc1072a62</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; bool &gt; &gt;</type>
      <name>min</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a08bcd2cd6a1fce518f5e7329343d3115</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>required</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a752e453dc90050eaeea698706c8c857e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; bool &gt; &gt;</type>
      <name>noData</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>aaacb933b8dfac1bbd7ee982c79fc3c9d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; bool &gt; &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a639ae6ab59647dc46bfcd737784c2534</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>aa5c528ef11442465e3360c8ad2b1875d</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>aa9496d2468564d60b9cc3460549f36ef</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTableProperty &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyViewStatusType</type>
      <name>_status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01bool_01_4_01_4.html</anchorfile>
      <anchor>a69a94cf7dddc3a450870ab952c8405a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView&lt; PropertyArrayView&lt; ElementType &gt;, false &gt;</name>
    <filename>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>ac321f1d5a6753d67d30a264b27920226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>a379f2b0e7c64a3c94005a22c7183e25f</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>a24ad6bdf7e543598c292f7ddb27b0ede</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>ad95037f7ad5d136bcf094f3b0bd0539a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>semantic</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>af45d081cca39fbc4ceb8c17d95bd8f1f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>description</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>ac240cf60d99a4a1151aea514140d077f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>arrayCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>a5c22df5ffbbaba7d490c2bdb785ae640</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>aa3e684952b40c435b7509a58e700062c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; ElementType &gt; &gt;</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>a5fc9d5024e393d4b78fd42dfd9c5e219</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; ElementType &gt; &gt;</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>af87b752a099df9f2e08324f5a323782e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; ElementType &gt; &gt;</type>
      <name>max</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>a61d64f72bf82ccc2ac3464699d23886d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; ElementType &gt; &gt;</type>
      <name>min</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>aa2458a4398b93881838ca5d6e2f1ecdc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>required</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>adbca22f63762af4a1ca94823aefce76b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; ElementType &gt; &gt;</type>
      <name>noData</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>a2ce85df00d00897db9244900646e3c67</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; ElementType &gt; &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>a727bcc5293fd7b7a4b6b9983faf04b26</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>aa73e2f900792b28ce86f5b6d4c7d5d41</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>adfd65433534a613044a90ce71e730a02</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTableProperty &amp;property)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>ad4b3b33eeefd7c69e7766ca489ad5216</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTextureProperty &amp;property)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyViewStatusType</type>
      <name>_status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01false_01_4.html</anchorfile>
      <anchor>afde186e0d713dc69dbbaeacc75f2337a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView&lt; PropertyArrayView&lt; ElementType &gt;, true &gt;</name>
    <filename>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</filename>
    <templarg>typename ElementType</templarg>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a3cef49ef08c9e9b20e4089f3ab64578f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>aa8e1c39483cdb4cfdadc1177445043d6</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a0df03e6d3401858c37b6b0374b1894bf</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>ad6a9b8b74527f54876240df33dd05bb9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>semantic</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>ab24c076ce8ff77e1ce1d2052c2869a07</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>description</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>aa7b9d2c1677de5499ec817e42eab2dae</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>arrayCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>ad2ece8f2c05ab086bb24cf4f100284d6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>af048cc04e570584af2dea592447452ba</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; NormalizedType &gt; &gt;</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a55633536fe5a7410701295613db7266d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; NormalizedType &gt; &gt;</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a33aade489ae97f4b267c4a57acf9b5f7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; NormalizedType &gt; &gt;</type>
      <name>max</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a12a249f0c1068d1c4dbf8b43b4b4e0cc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; NormalizedType &gt; &gt;</type>
      <name>min</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a3df82c7aaecc7d2739ff2bebec775979</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>required</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>ae61533ec67dc7efd253eed25ff1fa4a3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; ElementType &gt; &gt;</type>
      <name>noData</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a34aa585426494f886deebf0684e8d516</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; NormalizedType &gt; &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>ab237d34e40499510fe3c5411c6ebb1ad</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a6cc518fcdf0e11e27b903d3abecd43d1</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a5940c391977ef9cca8e0d8b2e902a1cc</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTableProperty &amp;property)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a4726f72ed4309054e5df3b5734c2bd31</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTextureProperty &amp;property)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyViewStatusType</type>
      <name>_status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01ElementType_01_4_00_01true_01_4.html</anchorfile>
      <anchor>a1333d9dd414c8ffb6a651381a939c887</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</name>
    <filename>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a51509b9572e217a3fe6665098ff7e894</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a198a192d6802c3246810115753275d70</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a48fdaac38448f4c27fb8707be31307db</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a59ee82d51f18738c6298d5a11ec7a5b7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>semantic</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a357795ecb70dc8cd4435da85e96a224b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>description</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a8e93e0b9fb4552b6d3effd511f5cbfb3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>arrayCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a88f53258fa6838ab50cf4c1ce5503ea7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>ade7bafe114727f3905873b2b753033e5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a60adfe69ef970456aaa5dc3fc7d76e18</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>aeb316bcbc103f4e41db14e7e53b2f02d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</type>
      <name>max</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a0fd0260f479e7c8a3b7babc1fb9d892f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</type>
      <name>min</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a8e726236b8335376b60c5b28f368a7a2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>required</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a9a042c4540b4f946be672c93c51bf8ce</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</type>
      <name>noData</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a90958e3666a6a130150ce63b579f41d9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>aeac481096b16ec3cdbece52c75b52e83</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>ae1043f7e002d4e14b45f76cdf954e0b8</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a133b2163c6c75399e1c4b33de4af52a0</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTableProperty &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyViewStatusType</type>
      <name>_status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01PropertyArrayView_3_01std_1_1string__view_01_4_01_4.html</anchorfile>
      <anchor>a65869a86b902a3f29a1f2172517d455e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyView&lt; std::string_view &gt;</name>
    <filename>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a375131da8afdbd1d62df5a0afb386f0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a637968c3b8931e306d74ee57398254fc</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ae7f350b9d3ca62e51474e748c3f9a725</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>name</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a1fa52c83dc9dd52df6d40f33a8b8df14</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>semantic</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ad810d1edcb5e0acdd5e62552d96acd8f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; std::string &gt; &amp;</type>
      <name>description</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a7abd1f78f8d310f44d02bb9a56b55a85</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>arrayCount</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>acfe735952deba0a74162bc0ce417f096</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>normalized</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ade3eb2b28d68a4380b0731e28588552c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string_view &gt;</type>
      <name>offset</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a4be1780f0442875a44a57192db8a67df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string_view &gt;</type>
      <name>scale</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a726dba60be3c539aedd9190f39e7727f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string_view &gt;</type>
      <name>max</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ad70abe7818f3d945880ac6e702da605b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string_view &gt;</type>
      <name>min</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a4545cbb8aefa4ab090f3902e6d46b9ef</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>required</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a1f02f9d18267db76b20806bee9231803</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string_view &gt;</type>
      <name>noData</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ad2d862ca69cc149be59e8ffa009321b5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string_view &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>aac2f489fb54bcd44539ec7ec151e789c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>ad12298cef5b9e4c7022c312040e3e8a0</anchor>
      <arglist>(PropertyViewStatusType status)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PropertyView</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a0f3d3540af1afe56ec2d04cf0f0dc617</anchor>
      <arglist>(const ClassProperty &amp;classProperty, const PropertyTableProperty &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyViewStatusType</type>
      <name>_status</name>
      <anchorfile>classCesiumGltf_1_1PropertyView_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a5f1fb409d9cf3eddbdd23bc441ed3e5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::PropertyViewStatus</name>
    <filename>classCesiumGltf_1_1PropertyViewStatus.html</filename>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>Valid</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a908efdc3d160a64207442eba70ea7e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>EmptyPropertyWithDefault</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>ab34b3bc659b8447f4d76901d37eb1c8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorNonexistentProperty</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a947b8de3eb361476359c19141f7fc8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorTypeMismatch</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a21ea206933df49514bd4e3169c65182d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorComponentTypeMismatch</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>aeefb03f2af921b229ce37101cc725f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorArrayTypeMismatch</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a9c541f443f0178abb91ab7ef5e7354a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidNormalization</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a9ac78f70355d796be0d9f2c222fd9384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorNormalizationMismatch</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>ab25042ceab042a7daa4092cbfe24e59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidOffset</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a7735af3d80c90a118c5780b49e1d81bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidScale</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>ae11b2f10da9e5df96a3905857300b50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidMax</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a685d008a37b4c5332cc2f62e3173364f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidMin</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a54992fc7b5b981cf272397beb34f9a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidNoDataValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>aac9d9c6c0d9e3c2e68bb8973665b34b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const PropertyViewStatusType</type>
      <name>ErrorInvalidDefaultValue</name>
      <anchorfile>classCesiumGltf_1_1PropertyViewStatus.html</anchorfile>
      <anchor>a37a314b0e12dfb9a0415958e0a897192</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::QuadtreeAvailability</name>
    <filename>classCesiumGeometry_1_1QuadtreeAvailability.html</filename>
    <member kind="function">
      <type></type>
      <name>QuadtreeAvailability</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a4599ba6f7dfd47d023d32ec734bc024d</anchor>
      <arglist>(uint32_t subtreeLevels, uint32_t maximumLevel) noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>computeAvailability</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a4640328e0b10d9abac723702f4185b27</anchor>
      <arglist>(const QuadtreeTileID &amp;tileID) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSubtree</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a96a4580e16e1b9e6f4a530f18869b87a</anchor>
      <arglist>(const QuadtreeTileID &amp;tileID, AvailabilitySubtree &amp;&amp;newSubtree) noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>computeAvailability</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a45ba9c60391a17e2db5b6a56651183dc</anchor>
      <arglist>(const QuadtreeTileID &amp;tileID, const AvailabilityNode *pNode) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AvailabilityNode *</type>
      <name>addNode</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a0cc0fc6c30bb6173905665f9ce2919f8</anchor>
      <arglist>(const QuadtreeTileID &amp;tileID, AvailabilityNode *pParentNode) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addLoadedSubtree</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a1fa1608441ace9f919ed6190c96d92e7</anchor>
      <arglist>(AvailabilityNode *pNode, AvailabilitySubtree &amp;&amp;newSubtree) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>findChildNodeIndex</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a53b33c86fbdeabe19ddbc7a69a5598cd</anchor>
      <arglist>(const QuadtreeTileID &amp;tileID, const AvailabilityNode *pParentNode) const</arglist>
    </member>
    <member kind="function">
      <type>AvailabilityNode *</type>
      <name>findChildNode</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>aa409a3f16776c53cc9d0a3f804b8b8d0</anchor>
      <arglist>(const QuadtreeTileID &amp;tileID, AvailabilityNode *pParentNode) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr uint32_t</type>
      <name>getSubtreeLevels</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a05e1534403b6448af111dadcbea57b2b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr uint32_t</type>
      <name>getMaximumLevel</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a77ca1b7677d212a6f775a860a10772eb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AvailabilityNode *</type>
      <name>getRootNode</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeAvailability.html</anchorfile>
      <anchor>a0f030761d0c9e0491164a1a11c26690f</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::QuadtreeChildren</name>
    <filename>classCesium3DTilesContent_1_1QuadtreeChildren.html</filename>
    <class kind="class">Cesium3DTilesContent::QuadtreeChildren::iterator</class>
    <member kind="typedef">
      <type>iterator</type>
      <name>const_iterator</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren.html</anchorfile>
      <anchor>afc92cd8d079663303fbd42edf9389a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuadtreeChildren</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren.html</anchorfile>
      <anchor>a68a8dc3adfbdb585b5207f1cdb5815c6</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;tileID) noexcept</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren.html</anchorfile>
      <anchor>ac5b76340a8efd9591932cbd8a655af30</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren.html</anchorfile>
      <anchor>aff9ff0c906b390bd790536129b3039e3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr int64_t</type>
      <name>size</name>
      <anchorfile>classCesium3DTilesContent_1_1QuadtreeChildren.html</anchorfile>
      <anchor>a5db1b6658f1027648fe26e78a1ecb01f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::QuadtreeRasterOverlayTileProvider</name>
    <filename>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</filename>
    <base>CesiumRasterOverlays::RasterOverlayTileProvider</base>
    <member kind="function">
      <type></type>
      <name>QuadtreeRasterOverlayTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</anchorfile>
      <anchor>a82bcbb70f64fb1b9e93c1d3dcaded65f</anchor>
      <arglist>(const CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; &amp;pOwner, const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, std::optional&lt; CesiumUtility::Credit &gt; credit, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, const CesiumGeospatial::Projection &amp;projection, const CesiumGeometry::QuadtreeTilingScheme &amp;tilingScheme, const CesiumGeometry::Rectangle &amp;coverageRectangle, uint32_t minimumLevel, uint32_t maximumLevel, uint32_t imageWidth, uint32_t imageHeight) noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getMinimumLevel</name>
      <anchorfile>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</anchorfile>
      <anchor>a735c6f6b70bd97da5e92177e925851e5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getMaximumLevel</name>
      <anchorfile>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</anchorfile>
      <anchor>aa70cbd66bd82c703e986939bb0388add</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getWidth</name>
      <anchorfile>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</anchorfile>
      <anchor>a9acc2c76776c57f64aee27c6d0745d6a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getHeight</name>
      <anchorfile>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</anchorfile>
      <anchor>a2796aef9382ce97afe7cb3045508fc8d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::QuadtreeTilingScheme &amp;</type>
      <name>getTilingScheme</name>
      <anchorfile>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</anchorfile>
      <anchor>ac6b9d802e5ac84ad8ec0a6cb345a5360</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>computeLevelFromTargetScreenPixels</name>
      <anchorfile>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</anchorfile>
      <anchor>a6f55cef91be4c1ba0003c259ba1b2f16</anchor>
      <arglist>(const CesiumGeometry::Rectangle &amp;rectangle, const glm::dvec2 &amp;screenPixels)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual CesiumAsync::Future&lt; LoadedRasterOverlayImage &gt;</type>
      <name>loadQuadtreeTileImage</name>
      <anchorfile>classCesiumRasterOverlays_1_1QuadtreeRasterOverlayTileProvider.html</anchorfile>
      <anchor>aa65868580a8264365ae380f7ddcaf581</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;tileID) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::QuadtreeRectangleAvailability</name>
    <filename>classCesiumGeometry_1_1QuadtreeRectangleAvailability.html</filename>
    <member kind="function">
      <type></type>
      <name>QuadtreeRectangleAvailability</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeRectangleAvailability.html</anchorfile>
      <anchor>a6106a00a605b515803657f560c4bda76</anchor>
      <arglist>(const QuadtreeTilingScheme &amp;tilingScheme, uint32_t maximumLevel) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAvailableTileRange</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeRectangleAvailability.html</anchorfile>
      <anchor>a33749635b1a1ede029b4cb8b578c9407</anchor>
      <arglist>(const QuadtreeTileRectangularRange &amp;range) noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>computeMaximumLevelAtPosition</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeRectangleAvailability.html</anchorfile>
      <anchor>a40037e268641f1090981351914d5e55f</anchor>
      <arglist>(const glm::dvec2 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>isTileAvailable</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeRectangleAvailability.html</anchorfile>
      <anchor>a61f1241257dbbbc88e3aa4d3dcc18d35</anchor>
      <arglist>(const QuadtreeTileID &amp;id) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::QuadtreeTileID</name>
    <filename>structCesiumGeometry_1_1QuadtreeTileID.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>QuadtreeTileID</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileID.html</anchorfile>
      <anchor>ab1d44c3938fc9b9e5c5fc0f2b2098b2a</anchor>
      <arglist>(uint32_t level_, uint32_t x_, uint32_t y_) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileID.html</anchorfile>
      <anchor>a38f3c0bd95ba7dcb617c406fc74a302c</anchor>
      <arglist>(const QuadtreeTileID &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileID.html</anchorfile>
      <anchor>aa2a02d6adc2d421442c763c9cd40be86</anchor>
      <arglist>(const QuadtreeTileID &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>computeInvertedY</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileID.html</anchorfile>
      <anchor>a142c4549ec1a2c4d74eb96409f8f6c21</anchor>
      <arglist>(const QuadtreeTilingScheme &amp;tilingScheme) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr QuadtreeTileID</type>
      <name>getParent</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileID.html</anchorfile>
      <anchor>aa3183c646da8de1c87fc05bca2134c96</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>level</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileID.html</anchorfile>
      <anchor>a6e57ce596c92c94cb09bf78918f83bb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>x</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileID.html</anchorfile>
      <anchor>a5afc59db03cbc8381fa926a3a741b8a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>y</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileID.html</anchorfile>
      <anchor>a2eab4402496d22dd54e50ed338223ae0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::QuadtreeTileRectangularRange</name>
    <filename>structCesiumGeometry_1_1QuadtreeTileRectangularRange.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>level</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileRectangularRange.html</anchorfile>
      <anchor>a81aa9f6d4838528ff8fba338bd21f00c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>minimumX</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileRectangularRange.html</anchorfile>
      <anchor>a7b7b7c08f052c1dbf30470f585268fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>minimumY</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileRectangularRange.html</anchorfile>
      <anchor>ad3ab39d1cd79a2accbef7f5bc5250020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>maximumX</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileRectangularRange.html</anchorfile>
      <anchor>a6c5927708ae3d4d1a7b23be440e2c66a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>maximumY</name>
      <anchorfile>structCesiumGeometry_1_1QuadtreeTileRectangularRange.html</anchorfile>
      <anchor>a4f64cb98df39ba61bd8148d622c6f86b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::QuadtreeTilingScheme</name>
    <filename>classCesiumGeometry_1_1QuadtreeTilingScheme.html</filename>
    <member kind="function">
      <type></type>
      <name>QuadtreeTilingScheme</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeTilingScheme.html</anchorfile>
      <anchor>a1767626d53bc2fb64824cabec29bf631</anchor>
      <arglist>(const CesiumGeometry::Rectangle &amp;rectangle, uint32_t rootTilesX, uint32_t rootTilesY) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::Rectangle &amp;</type>
      <name>getRectangle</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeTilingScheme.html</anchorfile>
      <anchor>a8a9afe7c3d8893af7a4b4d4bb6a2e79c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getRootTilesX</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeTilingScheme.html</anchorfile>
      <anchor>a81e5172f9f602c988d4f49848926b6bc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getRootTilesY</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeTilingScheme.html</anchorfile>
      <anchor>a0cec726804d9a0728dee32ae42307656</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getNumberOfXTilesAtLevel</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeTilingScheme.html</anchorfile>
      <anchor>ac4e7c4d171960190a7ee560433f58c88</anchor>
      <arglist>(uint32_t level) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getNumberOfYTilesAtLevel</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeTilingScheme.html</anchorfile>
      <anchor>a0be499680601a95cc3a205d088b38335</anchor>
      <arglist>(uint32_t level) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CesiumGeometry::QuadtreeTileID &gt;</type>
      <name>positionToTile</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeTilingScheme.html</anchorfile>
      <anchor>a5d18ba77b7e29ebfa74b3678ee4807bb</anchor>
      <arglist>(const glm::dvec2 &amp;position, uint32_t level) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeometry::Rectangle</type>
      <name>tileToRectangle</name>
      <anchorfile>classCesiumGeometry_1_1QuadtreeTilingScheme.html</anchorfile>
      <anchor>ae04aea281a18d400ea32bd1390964057</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;tileID) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumQuantizedMeshTerrain::QuantizedMeshLoader</name>
    <filename>classCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoader.html</filename>
    <member kind="function" static="yes">
      <type>static QuantizedMeshLoadResult</type>
      <name>load</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoader.html</anchorfile>
      <anchor>a264aa425994bed9fd86057c504dd80f3</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;tileID, const CesiumGeospatial::BoundingRegion &amp;tileBoundingVolume, const std::string &amp;url, const std::span&lt; const std::byte &gt; &amp;data, bool enableWaterMask, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QuantizedMeshMetadataResult</type>
      <name>loadMetadata</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoader.html</anchorfile>
      <anchor>a26776105a66cde0973c64b2c9e413415</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data, const CesiumGeometry::QuadtreeTileID &amp;tileID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QuantizedMeshMetadataResult</type>
      <name>loadAvailabilityRectangles</name>
      <anchorfile>classCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoader.html</anchorfile>
      <anchor>a239bb93fc802cc7897d39ec5e68cf521</anchor>
      <arglist>(const rapidjson::Document &amp;layerJson, uint32_t startingLevel)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumQuantizedMeshTerrain::QuantizedMeshLoadResult</name>
    <filename>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoadResult.html</filename>
    <member kind="variable">
      <type>std::optional&lt; CesiumGltf::Model &gt;</type>
      <name>model</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoadResult.html</anchorfile>
      <anchor>a09a1d2ccfc0059d33872967695614aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGeospatial::BoundingRegion &gt;</type>
      <name>updatedBoundingVolume</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoadResult.html</anchorfile>
      <anchor>a33236fe290a4ec322273a6c50160accd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGeometry::QuadtreeTileRectangularRange &gt;</type>
      <name>availableTileRectangles</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoadResult.html</anchorfile>
      <anchor>a194635ec5dc98f27d6505600b54179a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; CesiumAsync::IAssetRequest &gt;</type>
      <name>pRequest</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoadResult.html</anchorfile>
      <anchor>a60ab69c01f381d14bb95e57e7805d9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::ErrorList</type>
      <name>errors</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshLoadResult.html</anchorfile>
      <anchor>a1aefec9876a9c4c3622703574d1b3e3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumQuantizedMeshTerrain::QuantizedMeshMetadataResult</name>
    <filename>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshMetadataResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; CesiumGeometry::QuadtreeTileRectangularRange &gt;</type>
      <name>availability</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshMetadataResult.html</anchorfile>
      <anchor>a46f6da1942b429e37dd1d5c60a1b8935</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::ErrorList</type>
      <name>errors</name>
      <anchorfile>structCesiumQuantizedMeshTerrain_1_1QuantizedMeshMetadataResult.html</anchorfile>
      <anchor>a766d2ed6b7df6a76aab66edad839e90b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::QuickAddAsset</name>
    <filename>structCesiumIonClient_1_1QuickAddAsset.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddAsset.html</anchorfile>
      <anchor>acfd22aaa43c3a3aa402a98beb2507bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>objectName</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddAsset.html</anchorfile>
      <anchor>a77d5555febf206dd4e0b9dd8b2a16a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddAsset.html</anchorfile>
      <anchor>a917f39d2e5add487216b6a16bc292a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>assetId</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddAsset.html</anchorfile>
      <anchor>a53a8901f57d995d5a5b7fba04180b41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddAsset.html</anchorfile>
      <anchor>a1b4ffb6b9143c1201961d358180985b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>subscribed</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddAsset.html</anchorfile>
      <anchor>a237bc79ae3deb82d1f12342d65da8686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; QuickAddRasterOverlay &gt;</type>
      <name>rasterOverlays</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddAsset.html</anchorfile>
      <anchor>a133e6bc9a2f04b849cdd360fd47bcc8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::QuickAddRasterOverlay</name>
    <filename>structCesiumIonClient_1_1QuickAddRasterOverlay.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddRasterOverlay.html</anchorfile>
      <anchor>a07fc9909aef574ed64842ccf7ed23364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>assetId</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddRasterOverlay.html</anchorfile>
      <anchor>a464e251c387c810c2289a9db66e9448e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>subscribed</name>
      <anchorfile>structCesiumIonClient_1_1QuickAddRasterOverlay.html</anchorfile>
      <anchor>ae6adeda09d6b03c1e52dfc52d480d634</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::RasterizedPolygonsOverlay</name>
    <filename>classCesiumRasterOverlays_1_1RasterizedPolygonsOverlay.html</filename>
    <base>CesiumRasterOverlays::RasterOverlay</base>
    <member kind="function">
      <type></type>
      <name>RasterizedPolygonsOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterizedPolygonsOverlay.html</anchorfile>
      <anchor>aaae794c566b93886232f5f45552db6a1</anchor>
      <arglist>(const std::string &amp;name, const std::vector&lt; CesiumGeospatial::CartographicPolygon &gt; &amp;polygons, bool invertSelection, const CesiumGeospatial::Ellipsoid &amp;ellipsoid, const CesiumGeospatial::Projection &amp;projection, const RasterOverlayOptions &amp;overlayOptions={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CesiumAsync::Future&lt; CreateTileProviderResult &gt;</type>
      <name>createTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterizedPolygonsOverlay.html</anchorfile>
      <anchor>a22745c96b10d6799cc9ac728d64b18f8</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumUtility::CreditSystem &gt; &amp;pCreditSystem, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; pOwner) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CesiumGeospatial::CartographicPolygon &gt; &amp;</type>
      <name>getPolygons</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterizedPolygonsOverlay.html</anchorfile>
      <anchor>a205b5d3cfbe88ae6e71b0ba376cc21b4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getInvertSelection</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterizedPolygonsOverlay.html</anchorfile>
      <anchor>a249bfa2dbf3e77f56d6a1d3ef660acaf</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeospatial::Ellipsoid &amp;</type>
      <name>getEllipsoid</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterizedPolygonsOverlay.html</anchorfile>
      <anchor>a9b5262c5d68d74a6e1bbaa4aec6f84ab</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::RasterizedPolygonsTileExcluder</name>
    <filename>classCesium3DTilesSelection_1_1RasterizedPolygonsTileExcluder.html</filename>
    <base>Cesium3DTilesSelection::ITileExcluder</base>
    <member kind="function">
      <type></type>
      <name>RasterizedPolygonsTileExcluder</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterizedPolygonsTileExcluder.html</anchorfile>
      <anchor>a2ee7297d7931929a0129ce81ac964768</anchor>
      <arglist>(const CesiumUtility::IntrusivePointer&lt; const CesiumRasterOverlays::RasterizedPolygonsOverlay &gt; &amp;pOverlay) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldExclude</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterizedPolygonsTileExcluder.html</anchorfile>
      <anchor>a276d58c976e207ab6d72c6e858ef9fbc</anchor>
      <arglist>(const Tile &amp;tile) const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>const CesiumRasterOverlays::RasterizedPolygonsOverlay &amp;</type>
      <name>getOverlay</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterizedPolygonsTileExcluder.html</anchorfile>
      <anchor>a1af6d57c79fc6538afbd685c2563634f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::RasterMappedTo3DTile</name>
    <filename>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>AttachmentState</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>a4312fcdabd3849417316f0167bb48b6f</anchor>
      <arglist></arglist>
      <enumvalue file="classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html" anchor="a4312fcdabd3849417316f0167bb48b6faf03dae1c1c6c8af30048105bdb8de037">Unattached</enumvalue>
      <enumvalue file="classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html" anchor="a4312fcdabd3849417316f0167bb48b6fa7846a9be91d51af093c109d1953d37fa">TemporarilyAttached</enumvalue>
      <enumvalue file="classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html" anchor="a4312fcdabd3849417316f0167bb48b6fa41f0e4643baa1a38c319cb96c9deaa99">Attached</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterMappedTo3DTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>aa4549d20224335aacda2c8ebb40fe98f</anchor>
      <arglist>(const CesiumUtility::IntrusivePointer&lt; CesiumRasterOverlays::RasterOverlayTile &gt; &amp;pRasterTile, int32_t textureCoordinateIndex)</arglist>
    </member>
    <member kind="function">
      <type>CesiumRasterOverlays::RasterOverlayTile *</type>
      <name>getLoadingTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>a3e7373cf1589c5a4151163700d685a99</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumRasterOverlays::RasterOverlayTile *</type>
      <name>getLoadingTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>af304f44d388f2d5cc94c0610e4570dff</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumRasterOverlays::RasterOverlayTile *</type>
      <name>getReadyTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>acf197b8ad45aaa7663f273aba0b005f6</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumRasterOverlays::RasterOverlayTile *</type>
      <name>getReadyTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>a24ca91adca0de8413406826b77f45c1b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>getTextureCoordinateID</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>a7bdd4228e47f8dc01155b41c80ff9ce6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextureCoordinateID</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>aa78876580f55d8d96b9b512be623cd5c</anchor>
      <arglist>(int32_t textureCoordinateID) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec2 &amp;</type>
      <name>getTranslation</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>a9c14701c31fb05af75dbc9c13a7f2a20</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec2 &amp;</type>
      <name>getScale</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>a7a3e3f80e48f2e0e182be4d280182347</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AttachmentState</type>
      <name>getState</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>a52cf9690917f7a6afa976f0b0ee07451</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumRasterOverlays::RasterOverlayTile::MoreDetailAvailable</type>
      <name>update</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>abc6a12d419555bf855fadace779faefc</anchor>
      <arglist>(IPrepareRendererResources &amp;prepareRendererResources, Tile &amp;tile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMoreDetailAvailable</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>ab66c52b59a926acba2434aeb222ca2b2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachFromTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>ae395b6e574521b73bb6e636b7a412c56</anchor>
      <arglist>(IPrepareRendererResources &amp;prepareRendererResources, Tile &amp;tile) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadThrottled</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>aa9968300f95eecf31289b02da8c946a0</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RasterMappedTo3DTile *</type>
      <name>mapOverlayToTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterMappedTo3DTile.html</anchorfile>
      <anchor>a785ecce1d92d8e5f1da5f3cb84d91972</anchor>
      <arglist>(double maximumScreenSpaceError, CesiumRasterOverlays::RasterOverlayTileProvider &amp;tileProvider, CesiumRasterOverlays::RasterOverlayTileProvider &amp;placeholder, Tile &amp;tile, std::vector&lt; CesiumGeospatial::Projection &gt; &amp;missingProjections, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::RasterOverlay</name>
    <filename>classCesiumRasterOverlays_1_1RasterOverlay.html</filename>
    <base>CesiumUtility::ReferenceCounted&lt; T, isThreadSafe &gt;</base>
    <member kind="typedef">
      <type>nonstd::expected&lt; CesiumUtility::IntrusivePointer&lt; RasterOverlayTileProvider &gt;, RasterOverlayLoadFailureDetails &gt;</type>
      <name>CreateTileProviderResult</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>ad72c4a75298ae8a50032b3bd88601beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>a5528c6ec1e346e585c6beaa35e19d077</anchor>
      <arglist>(const std::string &amp;name, const RasterOverlayOptions &amp;overlayOptions=RasterOverlayOptions())</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::SharedFuture&lt; void &gt; &amp;</type>
      <name>getAsyncDestructionCompleteEvent</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>a364011d4ce8aa5fd4af06fa703194007</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>affcf1e47f815eabcc5e0d74fc8ad6510</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>RasterOverlayOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>ad4cdb21df461931b7100ede99cf0a53c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const RasterOverlayOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>a1bf42c817262cd637a120e5157eb46c7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CesiumUtility::Credit &gt; &amp;</type>
      <name>getCredits</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>a056868ebdf818a879e6bd4dbd80e3485</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; CesiumUtility::Credit &gt; &amp;</type>
      <name>getCredits</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>a27f0c1fcbba20ffdf47f65ae051c8872</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumUtility::IntrusivePointer&lt; RasterOverlayTileProvider &gt;</type>
      <name>createPlaceholder</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>a13fad0b12c13467469771db9728cd7d1</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CesiumAsync::Future&lt; CreateTileProviderResult &gt;</type>
      <name>createTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlay.html</anchorfile>
      <anchor>a529a81d9953ff98329a704158e4ea92e</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumUtility::CreditSystem &gt; &amp;pCreditSystem, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; pOwner) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::RasterOverlayCollection</name>
    <filename>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; CesiumUtility::IntrusivePointer&lt; CesiumRasterOverlays::RasterOverlay &gt; &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a54cb8250d865fafac084d854aac4e77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterOverlayCollection</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a1b90177bddd39e58ac922c857b11cac8</anchor>
      <arglist>(Tile::LoadedLinkedList &amp;loadedTiles, const TilesetExternals &amp;externals, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterOverlayCollection</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a1da499936109adfad68fe5541f6b419a</anchor>
      <arglist>(const RasterOverlayCollection &amp;rhs)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterOverlayCollection</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>aec2d53f6c9abbdf1bade8db21c2ff323</anchor>
      <arglist>(RasterOverlayCollection &amp;&amp;rhs) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>RasterOverlayCollection &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a7632118634cdaadd751492b3eefa0dd3</anchor>
      <arglist>(const RasterOverlayCollection &amp;rhs)=delete</arglist>
    </member>
    <member kind="function">
      <type>RasterOverlayCollection &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a083498bb62ef6b9b6f811950f37fca00</anchor>
      <arglist>(RasterOverlayCollection &amp;&amp;rhs) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a79564273f3c54141211ec401a0458be0</anchor>
      <arglist>(const CesiumUtility::IntrusivePointer&lt; CesiumRasterOverlays::RasterOverlay &gt; &amp;pOverlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a5688fd621a008be014e8f6c676c8ff91</anchor>
      <arglist>(const CesiumUtility::IntrusivePointer&lt; CesiumRasterOverlays::RasterOverlay &gt; &amp;pOverlay) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CesiumUtility::IntrusivePointer&lt; CesiumRasterOverlays::RasterOverlay &gt; &gt; &amp;</type>
      <name>getOverlays</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a1641f3ff24e3922af3fea285c4177211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CesiumUtility::IntrusivePointer&lt; CesiumRasterOverlays::RasterOverlayTileProvider &gt; &gt; &amp;</type>
      <name>getTileProviders</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a822ae0d616095be787ba8d19ada5dc1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CesiumUtility::IntrusivePointer&lt; CesiumRasterOverlays::RasterOverlayTileProvider &gt; &gt; &amp;</type>
      <name>getPlaceholderTileProviders</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>ab0c5c562ab995e82df77da84f8b013c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumRasterOverlays::RasterOverlayTileProvider *</type>
      <name>findTileProviderForOverlay</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a0a6fea19bce467a07805846e9fc590d4</anchor>
      <arglist>(CesiumRasterOverlays::RasterOverlay &amp;overlay) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumRasterOverlays::RasterOverlayTileProvider *</type>
      <name>findTileProviderForOverlay</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a1ddd09e4aca35eb1022a91e61ed00bb6</anchor>
      <arglist>(const CesiumRasterOverlays::RasterOverlay &amp;overlay) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumRasterOverlays::RasterOverlayTileProvider *</type>
      <name>findPlaceholderTileProviderForOverlay</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a55ad0566e92f404cfc57cfdd17370abc</anchor>
      <arglist>(CesiumRasterOverlays::RasterOverlay &amp;overlay) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumRasterOverlays::RasterOverlayTileProvider *</type>
      <name>findPlaceholderTileProviderForOverlay</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a22fbef54e0d79845b9b2c6856a4f3ac1</anchor>
      <arglist>(const CesiumRasterOverlays::RasterOverlay &amp;overlay) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>ae66661385e956c0c068b1fd7505a234d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a47ec6a8d2f387ae2986a5bfff49dc779</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classCesium3DTilesSelection_1_1RasterOverlayCollection.html</anchorfile>
      <anchor>a279a0d54aa95911406f147a518c3a2b6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::RasterOverlayDetails</name>
    <filename>structCesiumRasterOverlays_1_1RasterOverlayDetails.html</filename>
    <member kind="function">
      <type></type>
      <name>RasterOverlayDetails</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayDetails.html</anchorfile>
      <anchor>a23058763d49b564726d5b9c08fe64815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterOverlayDetails</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayDetails.html</anchorfile>
      <anchor>a1bab63845b0da963bc8f390f82f1c957</anchor>
      <arglist>(std::vector&lt; CesiumGeospatial::Projection &gt; &amp;&amp;rasterOverlayProjections, std::vector&lt; CesiumGeometry::Rectangle &gt; &amp;&amp;rasterOverlayRectangles, const CesiumGeospatial::BoundingRegion &amp;boundingRegion)</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::Rectangle *</type>
      <name>findRectangleForOverlayProjection</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayDetails.html</anchorfile>
      <anchor>a5c0ae71d9e21fcc3adc94f0853e9fa77</anchor>
      <arglist>(const CesiumGeospatial::Projection &amp;projection) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayDetails.html</anchorfile>
      <anchor>a6dc51a1f2470ede0c3d12bf80163f8b2</anchor>
      <arglist>(const RasterOverlayDetails &amp;other, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGeospatial::Projection &gt;</type>
      <name>rasterOverlayProjections</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayDetails.html</anchorfile>
      <anchor>a1ce1435fd79394a91c16ec96217a8592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; CesiumGeometry::Rectangle &gt;</type>
      <name>rasterOverlayRectangles</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayDetails.html</anchorfile>
      <anchor>a5216330ba2904d28c65363a67f74d997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeospatial::BoundingRegion</type>
      <name>boundingRegion</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayDetails.html</anchorfile>
      <anchor>a355afef584a0904c56d332cf3b2921dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::RasterOverlayLoadFailureDetails</name>
    <filename>classCesiumRasterOverlays_1_1RasterOverlayLoadFailureDetails.html</filename>
    <member kind="variable">
      <type>RasterOverlayLoadType</type>
      <name>type</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayLoadFailureDetails.html</anchorfile>
      <anchor>a7d913a6914827de10601b0714f696306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; CesiumAsync::IAssetRequest &gt;</type>
      <name>pRequest</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayLoadFailureDetails.html</anchorfile>
      <anchor>a22c384baabf0199c9957b2f4a60c5d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayLoadFailureDetails.html</anchorfile>
      <anchor>ac1a5d2943eed405c07d5dea855b6e8f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::RasterOverlayOptions</name>
    <filename>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</filename>
    <member kind="variable">
      <type>int32_t</type>
      <name>maximumSimultaneousTileLoads</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>a846fce4c1e3de7d655250320e77cd745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>subTileCacheBytes</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>ae8bee6fb6866b5110998d0e5b8e2aa8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>maximumTextureSize</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>ac43d6564345558c6f913bdf00ec51017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumScreenSpaceError</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>a617e8dd5e92f58a998c5dbcf95c5b0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGltf::Ktx2TranscodeTargets</type>
      <name>ktx2TranscodeTargets</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>ab729f5d2b7774392608716a49ce47b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(const RasterOverlayLoadFailureDetails &amp;)&gt;</type>
      <name>loadErrorCallback</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>a86a477c078f60dd3a950d4286d6b5398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>showCreditsOnScreen</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>a6668aa7e0e6f59bdd1fcb44d7eec25ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::any</type>
      <name>rendererOptions</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>a40401bc474402a251fa9aa5c329d1812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeospatial::Ellipsoid</type>
      <name>ellipsoid</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayOptions.html</anchorfile>
      <anchor>a9cd3289593df2ec6f75bfeb0af17836c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::RasterOverlayTile</name>
    <filename>classCesiumRasterOverlays_1_1RasterOverlayTile.html</filename>
    <base>CesiumUtility::ReferenceCounted&lt; T, isThreadSafe &gt;</base>
    <member kind="enumeration">
      <type></type>
      <name>LoadState</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>aec0a8514130b49d5fc26993eafd5ec08</anchor>
      <arglist></arglist>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="aec0a8514130b49d5fc26993eafd5ec08a68753d36ec0c4d7768b20993268d68d1">Placeholder</enumvalue>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="aec0a8514130b49d5fc26993eafd5ec08ad7c8c85bf79bbe1b7188497c32c3b0ca">Failed</enumvalue>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="aec0a8514130b49d5fc26993eafd5ec08aa5ae20aa7fda5bd38bf0dce98e65bd2d">Unloaded</enumvalue>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="aec0a8514130b49d5fc26993eafd5ec08a16bfbf9c462762cf1cba4134ec53c504">Loading</enumvalue>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="aec0a8514130b49d5fc26993eafd5ec08a7381d487d18845b379422325c0a768d6">Loaded</enumvalue>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="aec0a8514130b49d5fc26993eafd5ec08af92965e2c8a7afb3c1b9a5c09a263636">Done</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MoreDetailAvailable</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>afe614a98df142636f000db7545ef9714</anchor>
      <arglist></arglist>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="afe614a98df142636f000db7545ef9714abafd7322c6e97d25b6299b5d6fe8920b">No</enumvalue>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="afe614a98df142636f000db7545ef9714a93cba07454f06a4a960172bbd6e2a435">Yes</enumvalue>
      <enumvalue file="classCesiumRasterOverlays_1_1RasterOverlayTile.html" anchor="afe614a98df142636f000db7545ef9714a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterOverlayTile</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a062d413f745c41f3e46b77b6e6758bd0</anchor>
      <arglist>(RasterOverlayTileProvider &amp;tileProvider) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterOverlayTile</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a6198a8c17248f313e2bb8b7e5eec3eb7</anchor>
      <arglist>(RasterOverlayTileProvider &amp;tileProvider, const glm::dvec2 &amp;targetScreenPixels, const CesiumGeometry::Rectangle &amp;imageryRectangle) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RasterOverlayTile</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a4eda9217945a0f04c9b4e76fcd8b60ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RasterOverlayTileProvider &amp;</type>
      <name>getTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a5b5a38d5fdb30e69e83442288ca671fd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const RasterOverlayTileProvider &amp;</type>
      <name>getTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a28346871c3ee635270be50db6e3e1f54</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>RasterOverlay &amp;</type>
      <name>getOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a95a992dbc20759ba4fafceadfe73d024</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const RasterOverlay &amp;</type>
      <name>getOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a0fbe86f221c5cc0b4f28423d9e56dc63</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::Rectangle &amp;</type>
      <name>getRectangle</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a86700dced01d139a99d8bf4d507c6687</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec2</type>
      <name>getTargetScreenPixels</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a2a4cd6a4d22b6ba0409a73e9117b94aa</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>LoadState</type>
      <name>getState</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>aea1cf0206cc39924664d8497afffc14c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CesiumUtility::Credit &gt; &amp;</type>
      <name>getCredits</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a1a6b737447f179a0eeb2d42f1b6d09b5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumUtility::IntrusivePointer&lt; const CesiumGltf::ImageAsset &gt;</type>
      <name>getImage</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a1c40a8f7a8ac82528465c2cd763e9c27</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumUtility::IntrusivePointer&lt; CesiumGltf::ImageAsset &gt;</type>
      <name>getImage</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a3dba12ef37f158afcb5883e638dbc8f3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadInMainThread</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>ab8d906239f43ffd0b725148453433dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>getRendererResources</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a2357169eb34db94b552d7c86240b7926</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRendererResources</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a0d8666beb4f48cb01193200f3a924ea3</anchor>
      <arglist>(void *pValue) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MoreDetailAvailable</type>
      <name>isMoreDetailAvailable</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTile.html</anchorfile>
      <anchor>a54b9aafe5a6b3c9296a9d4989a0814bd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::RasterOverlayTileProvider</name>
    <filename>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</filename>
    <base>CesiumUtility::ReferenceCounted&lt; T, isThreadSafe &gt;</base>
    <member kind="function">
      <type></type>
      <name>RasterOverlayTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>af45f0605bb80719adb2ed3163d15c3a1</anchor>
      <arglist>(const CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; &amp;pOwner, const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RasterOverlayTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>ae1e0d9e4893200e379dbf36fcad6446d</anchor>
      <arglist>(const CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; &amp;pOwner, const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, std::optional&lt; CesiumUtility::Credit &gt; credit, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, const CesiumGeospatial::Projection &amp;projection, const CesiumGeometry::Rectangle &amp;coverageRectangle) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RasterOverlayTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a6d2b717272f03a3d9fb0fbfecdf2063d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaceholder</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>ac7620b6e913a15b87c36deab545ec4dd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>RasterOverlay &amp;</type>
      <name>getOwner</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a431cc5bc8cb36b581a90bb1230d1aff8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const RasterOverlay &amp;</type>
      <name>getOwner</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a3e73fd8e1fc2fe2b406c2404508f266e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;</type>
      <name>getAssetAccessor</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>afd2a4455f3760ae8ca7a676cd73c9d4f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumAsync::AsyncSystem &amp;</type>
      <name>getAsyncSystem</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>ab585c4a93fd1bae4a83e6659f3dc79d9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;</type>
      <name>getPrepareRendererResources</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a65c1bb82c26d02bd741845ae4031c796</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; spdlog::logger &gt; &amp;</type>
      <name>getLogger</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>aa284cb20b42b492d0fb74638f2b1447a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeospatial::Projection &amp;</type>
      <name>getProjection</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>ab5703752df84c4ac6e70f295af5fbded</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeometry::Rectangle &amp;</type>
      <name>getCoverageRectangle</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a9b91e48983e0da1f0115ed2e0f74a94e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumUtility::IntrusivePointer&lt; RasterOverlayTile &gt;</type>
      <name>getTile</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a11e1ee89e7dc79e293e81a1c54a57d62</anchor>
      <arglist>(const CesiumGeometry::Rectangle &amp;rectangle, const glm::dvec2 &amp;targetScreenPixels)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getTileDataBytes</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>abec7ee6d134c472ace0de474ce3477af</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getNumberOfTilesLoading</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a98cf1bc9003b11888d68dc75e6708d41</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTile</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a0204b05213692d8f3edd482163ad2335</anchor>
      <arglist>(RasterOverlayTile *pTile) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; CesiumUtility::Credit &gt; &amp;</type>
      <name>getCredit</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a07d5be134de4deee95eb25784dcc0a11</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; TileProviderAndTile &gt;</type>
      <name>loadTile</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a4cf9003189020a3b4c119635065c8aa5</anchor>
      <arglist>(RasterOverlayTile &amp;tile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadTileThrottled</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a2990a2d40ea85237b6ad97753c1d96a9</anchor>
      <arglist>(RasterOverlayTile &amp;tile)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual CesiumAsync::Future&lt; LoadedRasterOverlayImage &gt;</type>
      <name>loadTileImage</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a5bfe846313b0e71a32714a3b516df419</anchor>
      <arglist>(RasterOverlayTile &amp;overlayTile)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CesiumAsync::Future&lt; LoadedRasterOverlayImage &gt;</type>
      <name>loadTileImageFromUrl</name>
      <anchorfile>classCesiumRasterOverlays_1_1RasterOverlayTileProvider.html</anchorfile>
      <anchor>a7868fdf11208fdebe3abc86a783fe471</anchor>
      <arglist>(const std::string &amp;url, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;headers={}, LoadTileImageFromUrlOptions &amp;&amp;options={}) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::RasterOverlayUtilities</name>
    <filename>structCesiumRasterOverlays_1_1RasterOverlayUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; RasterOverlayDetails &gt;</type>
      <name>createRasterOverlayTextureCoordinates</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayUtilities.html</anchorfile>
      <anchor>ab2252ea24698558a1a9a10b1f4962d75</anchor>
      <arglist>(CesiumGltf::Model &amp;gltf, const glm::dmat4 &amp;modelToEcefTransform, const std::optional&lt; CesiumGeospatial::GlobeRectangle &gt; &amp;globeRectangle, std::vector&lt; CesiumGeospatial::Projection &gt; &amp;&amp;projections, bool invertVCoordinate=false, const std::string_view &amp;textureCoordinateAttributeBaseName=DEFAULT_TEXTURE_COORDINATE_BASE_NAME, int32_t firstTextureCoordinateID=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; CesiumGltf::Model &gt;</type>
      <name>upsampleGltfForRasterOverlays</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayUtilities.html</anchorfile>
      <anchor>a1fd281b14966000de37d080c10ebdad1</anchor>
      <arglist>(const CesiumGltf::Model &amp;parentModel, CesiumGeometry::UpsampledQuadtreeNode childID, bool hasInvertedVCoordinate=false, const std::string_view &amp;textureCoordinateAttributeBaseName=DEFAULT_TEXTURE_COORDINATE_BASE_NAME, int32_t textureCoordinateIndex=0, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static glm::dvec2</type>
      <name>computeDesiredScreenPixels</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayUtilities.html</anchorfile>
      <anchor>af46af6a356dba5f55d7caf4f03c6a244</anchor>
      <arglist>(double geometricError, double maximumScreenSpaceError, const CesiumGeospatial::Projection &amp;projection, const CesiumGeometry::Rectangle &amp;rectangle, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static glm::dvec4</type>
      <name>computeTranslationAndScale</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayUtilities.html</anchorfile>
      <anchor>a9d7a7ba3186d931fc0031072671fa80e</anchor>
      <arglist>(const CesiumGeometry::Rectangle &amp;geometryRectangle, const CesiumGeometry::Rectangle &amp;overlayRectangle)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr std::string_view</type>
      <name>DEFAULT_TEXTURE_COORDINATE_BASE_NAME</name>
      <anchorfile>structCesiumRasterOverlays_1_1RasterOverlayUtilities.html</anchorfile>
      <anchor>a39803c90ec7da0d0b2574725bede9450</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeometry::Ray</name>
    <filename>classCesiumGeometry_1_1Ray.html</filename>
    <member kind="function">
      <type></type>
      <name>Ray</name>
      <anchorfile>classCesiumGeometry_1_1Ray.html</anchorfile>
      <anchor>ab66d17c4f41b2ca56e933617f84bb969</anchor>
      <arglist>(const glm::dvec3 &amp;origin, const glm::dvec3 &amp;direction)</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getOrigin</name>
      <anchorfile>classCesiumGeometry_1_1Ray.html</anchorfile>
      <anchor>a46bd95cf3fdea1339b0149ba8ff3c24b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getDirection</name>
      <anchorfile>classCesiumGeometry_1_1Ray.html</anchorfile>
      <anchor>a7ff1489e6569d32e98a4a57d41a4d187</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>pointFromDistance</name>
      <anchorfile>classCesiumGeometry_1_1Ray.html</anchorfile>
      <anchor>a39610cabeb31291c57b3f6f21be299e1</anchor>
      <arglist>(double distance) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>transform</name>
      <anchorfile>classCesiumGeometry_1_1Ray.html</anchorfile>
      <anchor>aaf41ca456d02519a2cdb18ac79f46ed4</anchor>
      <arglist>(const glm::dmat4x4 &amp;transformation) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Ray</type>
      <name>operator-</name>
      <anchorfile>classCesiumGeometry_1_1Ray.html</anchorfile>
      <anchor>aa15fb4fedde96028a34546bd5df7757c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfContent::GltfUtilities::RayGltfHit</name>
    <filename>structCesiumGltfContent_1_1GltfUtilities_1_1RayGltfHit.html</filename>
    <member kind="variable">
      <type>glm::dvec3</type>
      <name>primitivePoint</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities_1_1RayGltfHit.html</anchorfile>
      <anchor>a954134ca80bca43339dc63afbccf6728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glm::dmat4x4</type>
      <name>primitiveToWorld</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities_1_1RayGltfHit.html</anchorfile>
      <anchor>a3c39e24639dbe537f0efa047a41ed8e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glm::dvec3</type>
      <name>worldPoint</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities_1_1RayGltfHit.html</anchorfile>
      <anchor>ac61a10a7705da35397b89708eb70da02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rayToWorldPointDistanceSq</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities_1_1RayGltfHit.html</anchorfile>
      <anchor>aa8a5b24023d9e9db8a3e7364992c3704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>meshId</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities_1_1RayGltfHit.html</anchorfile>
      <anchor>a430f4d777c29880330a8a05f653835ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>primitiveId</name>
      <anchorfile>structCesiumGltfContent_1_1GltfUtilities_1_1RayGltfHit.html</anchorfile>
      <anchor>af0bdf9b5530146351f9f2ad068a5ed74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumJsonReader::ReadJsonResult</name>
    <filename>structCesiumJsonReader_1_1ReadJsonResult.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable">
      <type>std::optional&lt; T &gt;</type>
      <name>value</name>
      <anchorfile>structCesiumJsonReader_1_1ReadJsonResult.html</anchorfile>
      <anchor>a3eba52f2011ee9ea93feeb0b98f86ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesiumJsonReader_1_1ReadJsonResult.html</anchorfile>
      <anchor>aa55bca0fa0452c7235e6f4978f90f182</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesiumJsonReader_1_1ReadJsonResult.html</anchorfile>
      <anchor>a7bd40c4abc675d1c8deb6fc40e03f1a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::Rectangle</name>
    <filename>structCesiumGeometry_1_1Rectangle.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Rectangle</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a3bc4bbcd21f3db197b35537d5463f821</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Rectangle</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>ae7522d89948c2679bdfee4e51b3396fe</anchor>
      <arglist>(double minimumX_, double minimumY_, double maximumX_, double maximumY_) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a6927eb98410e526eb41472b3ca569b58</anchor>
      <arglist>(const glm::dvec2 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>overlaps</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a1f7e430f093fb22897d25e04cb2379bb</anchor>
      <arglist>(const Rectangle &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fullyContains</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>aa618c049449d9359d33a823b2e51feea</anchor>
      <arglist>(const Rectangle &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeSignedDistance</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>aea71430209dd7f8ed3923577df290cca</anchor>
      <arglist>(const glm::dvec2 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr glm::dvec2</type>
      <name>getLowerLeft</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a48ab01e1a1aba2ce84a3882b3544310a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr glm::dvec2</type>
      <name>getLowerRight</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>acb17e81232c970d102ec961dfa47a3f8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr glm::dvec2</type>
      <name>getUpperLeft</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>afe0bade9d0a52df34a6fa2e318f51dc7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr glm::dvec2</type>
      <name>getUpperRight</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>aee7b65c466007bfa2d226058cf2b64ce</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr glm::dvec2</type>
      <name>getCenter</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>aba8697d38edc8e835792fed5836127a5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>computeWidth</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>aafbd20eea02cb0157bf0d53baa634ee8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>computeHeight</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a99e0e10e2b92f3a65e78ca443f4d1595</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Rectangle &gt;</type>
      <name>computeIntersection</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>acba0b05e4ef65a8711d701bc3e9fea36</anchor>
      <arglist>(const Rectangle &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>computeUnion</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a72ac71e3b428705b682f9067d478b3d7</anchor>
      <arglist>(const Rectangle &amp;other) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimumX</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a494c2d54131f215bcd8dbe875613e4db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimumY</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a8a8f9ec46b0fe8c2c74c7dae7e3792cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumX</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a82066d9cd4610005e2961e968a16996a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumY</name>
      <anchorfile>structCesiumGeometry_1_1Rectangle.html</anchorfile>
      <anchor>a78360915407afd44feaa4e7f4a6276b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::ReferenceCounted</name>
    <filename>classCesiumUtility_1_1ReferenceCounted.html</filename>
    <templarg>typename T</templarg>
    <templarg>bool isThreadSafe</templarg>
    <member kind="function">
      <type>void</type>
      <name>addReference</name>
      <anchorfile>classCesiumUtility_1_1ReferenceCounted.html</anchorfile>
      <anchor>a955625dc54f776fab3e9d45c848ef857</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseReference</name>
      <anchorfile>classCesiumUtility_1_1ReferenceCounted.html</anchorfile>
      <anchor>a7436f0e57d27519bc78b9b959e856f23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>getReferenceCount</name>
      <anchorfile>classCesiumUtility_1_1ReferenceCounted.html</anchorfile>
      <anchor>a035eb60ffe7896943b5b11b153820b0f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Tile::Refine</name>
    <filename>structCesium3DTiles_1_1Tile_1_1Refine.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>ADD</name>
      <anchorfile>structCesium3DTiles_1_1Tile_1_1Refine.html</anchorfile>
      <anchor>aed2283b99f5a26f9944ed07f781d8162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>REPLACE</name>
      <anchorfile>structCesium3DTiles_1_1Tile_1_1Refine.html</anchorfile>
      <anchor>ac8a25bde40728d331cd488e701b245bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::Response</name>
    <filename>structCesiumIonClient_1_1Response.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type></type>
      <name>Response</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>ae9c97526f77c80b5abdf265d251a209c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Response</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>a6d637acc5f04d424e62e8374f42dda8c</anchor>
      <arglist>(const std::shared_ptr&lt; CesiumAsync::IAssetRequest &gt; &amp;pRequest, T &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Response</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>a425851c322ec6139ae7ad48dfea0d345</anchor>
      <arglist>(T &amp;&amp;value, uint16_t httpStatusCode, const std::string &amp;errorCode, const std::string &amp;errorMessage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Response</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>a9e27898b42670e9dfd59fd3338067180</anchor>
      <arglist>(uint16_t httpStatusCode, const std::string &amp;errorCode, const std::string &amp;errorMessage)</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; T &gt;</type>
      <name>value</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>a289ce723863cca540af86b2e7c7b57bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>httpStatusCode</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>a7834dc073b37d8898b76b0d3e06c3af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>errorCode</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>a45697a5eafdea79506923fb3cc6eea3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>errorMessage</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>acd83982b5a97b041807f8edd009b2ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>nextPageUrl</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>ae4a1b4a14fa508931b59170533eeb623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>previousPageUrl</name>
      <anchorfile>structCesiumIonClient_1_1Response.html</anchorfile>
      <anchor>ac7a2442a1f888c89711d4cdf887edb1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumUtility::Result</name>
    <filename>structCesiumUtility_1_1Result.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>structCesiumUtility_1_1Result.html</anchorfile>
      <anchor>acae1ec189646a371b39d837690757ea4</anchor>
      <arglist>(T value_) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>structCesiumUtility_1_1Result.html</anchorfile>
      <anchor>a40fede80c4f1f12b3a61effd3147a1e6</anchor>
      <arglist>(T value_, ErrorList errors_) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>structCesiumUtility_1_1Result.html</anchorfile>
      <anchor>a17d5b1bbefd026b78beb3d653ce07109</anchor>
      <arglist>(ErrorList errors_) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; T &gt;</type>
      <name>value</name>
      <anchorfile>structCesiumUtility_1_1Result.html</anchorfile>
      <anchor>a9f155d7839d04f332236b062566f87ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ErrorList</type>
      <name>errors</name>
      <anchorfile>structCesiumUtility_1_1Result.html</anchorfile>
      <anchor>a338e8a5b6f104af2b4632e722bfa1d35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumUtility::Result&lt; CesiumUtility::IntrusivePointer&lt; T &gt; &gt;</name>
    <filename>structCesiumUtility_1_1Result_3_01CesiumUtility_1_1IntrusivePointer_3_01T_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>structCesiumUtility_1_1Result_3_01CesiumUtility_1_1IntrusivePointer_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a173b37f7cf54969ee8b05714b67ce5a7</anchor>
      <arglist>(CesiumUtility::IntrusivePointer&lt; T &gt; pValue_) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>structCesiumUtility_1_1Result_3_01CesiumUtility_1_1IntrusivePointer_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a8d5443e64e4cd088e1b4fce17bf25c91</anchor>
      <arglist>(CesiumUtility::IntrusivePointer&lt; T &gt; pValue_, ErrorList errors_) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>structCesiumUtility_1_1Result_3_01CesiumUtility_1_1IntrusivePointer_3_01T_01_4_01_4.html</anchorfile>
      <anchor>acc541d5dd2676d6a4001083d191bef67</anchor>
      <arglist>(ErrorList errors_) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; T &gt;</type>
      <name>pValue</name>
      <anchorfile>structCesiumUtility_1_1Result_3_01CesiumUtility_1_1IntrusivePointer_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a172734e61b95a527fe5ece5e1ac47912</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ErrorList</type>
      <name>errors</name>
      <anchorfile>structCesiumUtility_1_1Result_3_01CesiumUtility_1_1IntrusivePointer_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a608465d96c7a99de8d385bba4d4277c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::S2CellBoundingVolume</name>
    <filename>classCesiumGeospatial_1_1S2CellBoundingVolume.html</filename>
    <member kind="function">
      <type></type>
      <name>S2CellBoundingVolume</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>aa7b7f04b83e1730ea0f5eb5af7021ee9</anchor>
      <arglist>(const S2CellID &amp;cellID, double minimumHeight, double maximumHeight, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>const S2CellID &amp;</type>
      <name>getCellID</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>a677d21132cf789948d836f32dd09b48f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinimumHeight</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>ae1803669fedc87d6149c1dfe099ae2bb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaximumHeight</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>a7cc1ffc2839231864cde9bbed3c3578b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>getCenter</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>a64ed57b43e1b59ba7b86afd3e4d779e7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::span&lt; const glm::dvec3 &gt;</type>
      <name>getVertices</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>a2d45d7c8a1ba21b80a703a4405f32c28</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeometry::CullingResult</type>
      <name>intersectPlane</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>aa77f80b13402a06433bf82a33ed14a4e</anchor>
      <arglist>(const CesiumGeometry::Plane &amp;plane) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistanceSquaredToPosition</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>a3c22a29ed4cd034a4c329b22acffb524</anchor>
      <arglist>(const glm::dvec3 &amp;position) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::span&lt; const CesiumGeometry::Plane &gt;</type>
      <name>getBoundingPlanes</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>a4eeb8891561a56e564805a2d98ad84c6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BoundingRegion</type>
      <name>computeBoundingRegion</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellBoundingVolume.html</anchorfile>
      <anchor>a31d656a823d2c5d1f22940283717089d</anchor>
      <arglist>(const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::S2CellID</name>
    <filename>classCesiumGeospatial_1_1S2CellID.html</filename>
    <member kind="function">
      <type></type>
      <name>S2CellID</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>ad327fbc072888f8fb603a7e0f05baa26</anchor>
      <arglist>(uint64_t id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>aad4c3af8b0c895b4bfdc48d0334eb179</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getID</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>aab2e12e860e66ca6941baabb7ed9d3fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toToken</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>a39259750b0f78badab43a7199e5f8371</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>getLevel</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>a140348e8861ed4418f22e3c2d9aa17ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>getFace</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>ad4d6815652ed8a0124afa574f9753046</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Cartographic</type>
      <name>getCenter</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>a11b5a96e419df4be2e6b71b24c09dd7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::array&lt; Cartographic, 4 &gt;</type>
      <name>getVertices</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>abd1d1d147e1f4b09bd97892f8d3ad8c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>S2CellID</type>
      <name>getParent</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>abb976e3b1951a723100395ac91b44909</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>S2CellID</type>
      <name>getChild</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>a3bc9be76dd28e0f6b8e445daaa96732f</anchor>
      <arglist>(size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>GlobeRectangle</type>
      <name>computeBoundingRectangle</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>a4120f289177bb8cc56c10b83a9617416</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static S2CellID</type>
      <name>fromToken</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>a1832656037a1ea908347c675fe13ccfb</anchor>
      <arglist>(const std::string_view &amp;token)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static S2CellID</type>
      <name>fromFaceLevelPosition</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>a2583cbd4ef030ee1d221e641f5ee7bac</anchor>
      <arglist>(uint8_t face, uint32_t level, uint64_t position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static S2CellID</type>
      <name>fromQuadtreeTileID</name>
      <anchorfile>classCesiumGeospatial_1_1S2CellID.html</anchorfile>
      <anchor>af0e38a47f20eeda06fedabac4a639e96</anchor>
      <arglist>(uint8_t face, const CesiumGeometry::QuadtreeTileID &amp;quadtreeTileID)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::SampleHeightResult</name>
    <filename>structCesium3DTilesSelection_1_1SampleHeightResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; CesiumGeospatial::Cartographic &gt;</type>
      <name>positions</name>
      <anchorfile>structCesium3DTilesSelection_1_1SampleHeightResult.html</anchorfile>
      <anchor>a78877d5047b9de9938fc6c672380f829</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>sampleSuccess</name>
      <anchorfile>structCesium3DTilesSelection_1_1SampleHeightResult.html</anchorfile>
      <anchor>aa4ff6449e43ee1c234b5ea7707be1a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesium3DTilesSelection_1_1SampleHeightResult.html</anchorfile>
      <anchor>a0543b75882077a019ac0e604d2b77128</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Sampler</name>
    <filename>structCesiumGltf_1_1Sampler.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <class kind="struct">CesiumGltf::Sampler::MagFilter</class>
    <class kind="struct">CesiumGltf::Sampler::MinFilter</class>
    <class kind="struct">CesiumGltf::Sampler::WrapS</class>
    <class kind="struct">CesiumGltf::Sampler::WrapT</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Sampler.html</anchorfile>
      <anchor>a24f0e0a6d946ba4c56bb3b81b0ddf4ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int32_t &gt;</type>
      <name>magFilter</name>
      <anchorfile>structCesiumGltf_1_1Sampler.html</anchorfile>
      <anchor>a3a5c1185e2d6fd4f88e7218ff0450e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int32_t &gt;</type>
      <name>minFilter</name>
      <anchorfile>structCesiumGltf_1_1Sampler.html</anchorfile>
      <anchor>aea0fd5ea486dc282bfcd2578527802a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>wrapS</name>
      <anchorfile>structCesiumGltf_1_1Sampler.html</anchorfile>
      <anchor>a226a91d0a95deef933bc7f82e62690a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>wrapT</name>
      <anchorfile>structCesiumGltf_1_1Sampler.html</anchorfile>
      <anchor>a8d9210f9c3a440daffd469061c64b1e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Sampler.html</anchorfile>
      <anchor>ad4fa47e4b712d2393aeac6adbebc08c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::SamplerReader</name>
    <filename>classCesiumGltfReader_1_1SamplerReader.html</filename>
    <member kind="function">
      <type></type>
      <name>SamplerReader</name>
      <anchorfile>classCesiumGltfReader_1_1SamplerReader.html</anchorfile>
      <anchor>adb654f0d20d2ab79b2552d9addbe0d60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1SamplerReader.html</anchorfile>
      <anchor>a3f30b16b48645b15ac91a5ee79c8860a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1SamplerReader.html</anchorfile>
      <anchor>a299e8b9c0e7742ecd09cb73b9920c823</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Sampler &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SamplerReader.html</anchorfile>
      <anchor>a08c0f4cf6f932386389c8684b6bd48b8</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Sampler &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SamplerReader.html</anchorfile>
      <anchor>af878ff9e9c509669196961daf3e5da95</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Sampler &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SamplerReader.html</anchorfile>
      <anchor>abc482c51a1a38443887feb458f95ee48</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorTypes::SCALAR</name>
    <filename>structCesiumGltf_1_1AccessorTypes_1_1SCALAR.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1AccessorTypes_1_1SCALAR.html</anchorfile>
      <anchor>aaa45ef9893bb4edef5f17dc6d033a269</anchor>
      <arglist>[1]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Scene</name>
    <filename>structCesiumGltf_1_1Scene.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Scene.html</anchorfile>
      <anchor>aed7c4aa48c82498dc60415ca0d7d0afe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int32_t &gt;</type>
      <name>nodes</name>
      <anchorfile>structCesiumGltf_1_1Scene.html</anchorfile>
      <anchor>a373fc6ad0803d0e0b6210acc2b1fbacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Scene.html</anchorfile>
      <anchor>adee07796891bc44abb8d653c56bc52f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::SceneReader</name>
    <filename>classCesiumGltfReader_1_1SceneReader.html</filename>
    <member kind="function">
      <type></type>
      <name>SceneReader</name>
      <anchorfile>classCesiumGltfReader_1_1SceneReader.html</anchorfile>
      <anchor>ae88c96f7bfecc119592f9a2f9cfb483f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1SceneReader.html</anchorfile>
      <anchor>abf0e9979e6ebe91458ef71b50bea874f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1SceneReader.html</anchorfile>
      <anchor>a6e88f1b24d79648bdd323cb3493903ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Scene &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SceneReader.html</anchorfile>
      <anchor>a61f08d911c5f6b8be9ebd0663c289be6</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Scene &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SceneReader.html</anchorfile>
      <anchor>a019ef84f8b3287ddfbe844cceabd7d2a</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Scene &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SceneReader.html</anchorfile>
      <anchor>a5f6e08cc6b3379badbf40d34acf1e939</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Schema</name>
    <filename>structCesium3DTiles_1_1Schema.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Schema.html</anchorfile>
      <anchor>a3d3ad58fb5e7d1e27bf5470dbde36cf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>structCesium3DTiles_1_1Schema.html</anchorfile>
      <anchor>a40f99de395f77a49594e98dff926db18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesium3DTiles_1_1Schema.html</anchorfile>
      <anchor>afe6f06df09a4e5715301570065591e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesium3DTiles_1_1Schema.html</anchorfile>
      <anchor>a3c7a3096df0eaf23a052b2641c32743b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>version</name>
      <anchorfile>structCesium3DTiles_1_1Schema.html</anchorfile>
      <anchor>ae783daf55df5b5b11926e6ced4eb63ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, Cesium3DTiles::Class &gt;</type>
      <name>classes</name>
      <anchorfile>structCesium3DTiles_1_1Schema.html</anchorfile>
      <anchor>af83cb1443fda0705d73f8540b2969746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, Cesium3DTiles::Enum &gt;</type>
      <name>enums</name>
      <anchorfile>structCesium3DTiles_1_1Schema.html</anchorfile>
      <anchor>a909e0dc59963d4e77db7d30177f9a8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Schema.html</anchorfile>
      <anchor>a41e4cadb9fc1e6a33cd7551a4c4c27c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Schema</name>
    <filename>structCesiumGltf_1_1Schema.html</filename>
    <base>CesiumUtility::SharedAsset&lt; Schema &gt;</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Schema.html</anchorfile>
      <anchor>a4484eb5fc436b884206cbaa581a1cd1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>structCesiumGltf_1_1Schema.html</anchorfile>
      <anchor>a53939a008ca3fd11c1c77361eaa5f9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>name</name>
      <anchorfile>structCesiumGltf_1_1Schema.html</anchorfile>
      <anchor>afa571d7ee5e21c17e2c32e934157c4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>description</name>
      <anchorfile>structCesiumGltf_1_1Schema.html</anchorfile>
      <anchor>a6d1539722eb552753ae48c5dc6b431c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>version</name>
      <anchorfile>structCesiumGltf_1_1Schema.html</anchorfile>
      <anchor>abbc96305da9f2dcd8911c1504824d36c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumGltf::Class &gt;</type>
      <name>classes</name>
      <anchorfile>structCesiumGltf_1_1Schema.html</anchorfile>
      <anchor>a9bbd6665a50da252283976a60a971738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, CesiumGltf::Enum &gt;</type>
      <name>enums</name>
      <anchorfile>structCesiumGltf_1_1Schema.html</anchorfile>
      <anchor>a977a5958d938c64fabc68b852dc7b0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Schema.html</anchorfile>
      <anchor>a95e1db2df895ef5106fd2e2124c81f04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::SchemaReader</name>
    <filename>classCesium3DTilesReader_1_1SchemaReader.html</filename>
    <member kind="function">
      <type></type>
      <name>SchemaReader</name>
      <anchorfile>classCesium3DTilesReader_1_1SchemaReader.html</anchorfile>
      <anchor>a7d8c4ea929a0e0f42e90290f5c5b1ab0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1SchemaReader.html</anchorfile>
      <anchor>ae602d1a077be556b73db2c89ae19e270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1SchemaReader.html</anchorfile>
      <anchor>aed8544e40a2c6e533179a020a241cbdf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Schema &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SchemaReader.html</anchorfile>
      <anchor>a35ef26629d85f38365af93a4ced1c480</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Schema &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SchemaReader.html</anchorfile>
      <anchor>a2077ef85c4ff727821be8b95a204eb8b</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Schema &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SchemaReader.html</anchorfile>
      <anchor>a375f606de9f7fd1267e79ead5fd6e396</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::SchemaReader</name>
    <filename>classCesiumGltfReader_1_1SchemaReader.html</filename>
    <member kind="function">
      <type></type>
      <name>SchemaReader</name>
      <anchorfile>classCesiumGltfReader_1_1SchemaReader.html</anchorfile>
      <anchor>abe894e9ff23b54f384ec30ea0e436a78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1SchemaReader.html</anchorfile>
      <anchor>a23b6db2424708db0ef146739520095d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1SchemaReader.html</anchorfile>
      <anchor>a89644e617d5debba3d71743aa3f20acd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Schema &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SchemaReader.html</anchorfile>
      <anchor>ad3aecc9535e7aba187adad53ceaacdba</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Schema &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SchemaReader.html</anchorfile>
      <anchor>a8fa2b11caf98c58dcbd355aa95d54e9e</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Schema &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SchemaReader.html</anchorfile>
      <anchor>ac4a6db5e08216715e11a9246ec42b663</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesWriter::SchemaWriter</name>
    <filename>classCesium3DTilesWriter_1_1SchemaWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>SchemaWriter</name>
      <anchorfile>classCesium3DTilesWriter_1_1SchemaWriter.html</anchorfile>
      <anchor>a4c5cf28711ba9450bda24d95ef5558f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesium3DTilesWriter_1_1SchemaWriter.html</anchorfile>
      <anchor>ad7afc33ccb8b95db14be959be80e5e54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesium3DTilesWriter_1_1SchemaWriter.html</anchorfile>
      <anchor>a3060a09a5f3f570308efc20be3f7c51c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SchemaWriterResult</type>
      <name>writeSchema</name>
      <anchorfile>classCesium3DTilesWriter_1_1SchemaWriter.html</anchorfile>
      <anchor>a51c325ddcfb06cb97554533cf319d175</anchor>
      <arglist>(const Cesium3DTiles::Schema &amp;schema, const SchemaWriterOptions &amp;options=SchemaWriterOptions()) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfWriter::SchemaWriter</name>
    <filename>classCesiumGltfWriter_1_1SchemaWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>SchemaWriter</name>
      <anchorfile>classCesiumGltfWriter_1_1SchemaWriter.html</anchorfile>
      <anchor>aac54a64a3ff6b174e01ff208e6de636e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesiumGltfWriter_1_1SchemaWriter.html</anchorfile>
      <anchor>a20626253ea826cdab50fbc5f9bf84cc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesiumGltfWriter_1_1SchemaWriter.html</anchorfile>
      <anchor>afe15a622d0cea9f36aa89f5d28478018</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SchemaWriterResult</type>
      <name>writeSchema</name>
      <anchorfile>classCesiumGltfWriter_1_1SchemaWriter.html</anchorfile>
      <anchor>a49c76f70dfda56da23ae074d7f92a3e6</anchor>
      <arglist>(const CesiumGltf::Schema &amp;schema, const SchemaWriterOptions &amp;options=SchemaWriterOptions()) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesWriter::SchemaWriterOptions</name>
    <filename>structCesium3DTilesWriter_1_1SchemaWriterOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>prettyPrint</name>
      <anchorfile>structCesium3DTilesWriter_1_1SchemaWriterOptions.html</anchorfile>
      <anchor>ad979d486df8ed8e04e68c2ddc8430d3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfWriter::SchemaWriterOptions</name>
    <filename>structCesiumGltfWriter_1_1SchemaWriterOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>prettyPrint</name>
      <anchorfile>structCesiumGltfWriter_1_1SchemaWriterOptions.html</anchorfile>
      <anchor>a8a64500d899d661ff13b5ec3bbf6166b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesWriter::SchemaWriterResult</name>
    <filename>structCesium3DTilesWriter_1_1SchemaWriterResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>schemaBytes</name>
      <anchorfile>structCesium3DTilesWriter_1_1SchemaWriterResult.html</anchorfile>
      <anchor>a5666322804b3eba6cc22e7f12929f8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesium3DTilesWriter_1_1SchemaWriterResult.html</anchorfile>
      <anchor>af9a5c99607ed22c54556b3bd41b3212c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesium3DTilesWriter_1_1SchemaWriterResult.html</anchorfile>
      <anchor>ad3acef5445064ec69658254731c1b49d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfWriter::SchemaWriterResult</name>
    <filename>structCesiumGltfWriter_1_1SchemaWriterResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>schemaBytes</name>
      <anchorfile>structCesiumGltfWriter_1_1SchemaWriterResult.html</anchorfile>
      <anchor>aab39a4b7c921ebd644eb238f539cd60b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesiumGltfWriter_1_1SchemaWriterResult.html</anchorfile>
      <anchor>af416afeb489552f47e749686870a88e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesiumGltfWriter_1_1SchemaWriterResult.html</anchorfile>
      <anchor>a7ee81098fd794f97b66a78cf73e1a2bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::ScopeGuard</name>
    <filename>classCesiumUtility_1_1ScopeGuard.html</filename>
    <templarg>typename ExitFunction</templarg>
    <member kind="function">
      <type></type>
      <name>ScopeGuard</name>
      <anchorfile>classCesiumUtility_1_1ScopeGuard.html</anchorfile>
      <anchor>a3624559b6182768cac2301b6ee665593</anchor>
      <arglist>(ExitFunctionArg &amp;&amp;exitFunc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopeGuard</name>
      <anchorfile>classCesiumUtility_1_1ScopeGuard.html</anchorfile>
      <anchor>a5ecdd9048c09245628d47861130d51f4</anchor>
      <arglist>(ScopeGuard &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ScopeGuard &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumUtility_1_1ScopeGuard.html</anchorfile>
      <anchor>aec3942939f8395a59ce096a691db5998</anchor>
      <arglist>(ScopeGuard &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopeGuard</name>
      <anchorfile>classCesiumUtility_1_1ScopeGuard.html</anchorfile>
      <anchor>a25d0fd4eb4dbe885556ed0a656e26351</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classCesiumUtility_1_1ScopeGuard.html</anchorfile>
      <anchor>a30c4c0c0fa269fe7b926bd8e093687f9</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::SharedAsset</name>
    <filename>classCesiumUtility_1_1SharedAsset.html</filename>
    <templarg>typename T</templarg>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>void</type>
      <name>addReference</name>
      <anchorfile>classCesiumUtility_1_1SharedAsset.html</anchorfile>
      <anchor>abd68a83cfd8c6cc9b0a6b58df5c8b34e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseReference</name>
      <anchorfile>classCesiumUtility_1_1SharedAsset.html</anchorfile>
      <anchor>a7bc83a9cb7d5a8ea47234677e0b2d20f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const IDepotOwningAsset&lt; T &gt; *</type>
      <name>getDepot</name>
      <anchorfile>classCesiumUtility_1_1SharedAsset.html</anchorfile>
      <anchor>aaa0896006292e8ae93ab746687621b15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>IDepotOwningAsset&lt; T &gt; *</type>
      <name>getDepot</name>
      <anchorfile>classCesiumUtility_1_1SharedAsset.html</anchorfile>
      <anchor>a73de94c723ea6998db1a61f801a10a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SharedAsset</name>
      <anchorfile>classCesiumUtility_1_1SharedAsset.html</anchorfile>
      <anchor>a5dd0e706dda2c340d9b1bdb3898b85a2</anchor>
      <arglist>(const SharedAsset &amp;rhs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SharedAsset</name>
      <anchorfile>classCesiumUtility_1_1SharedAsset.html</anchorfile>
      <anchor>acfd4aad1556eda49805e4d95d39c95d4</anchor>
      <arglist>(SharedAsset &amp;&amp;rhs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SharedAsset &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumUtility_1_1SharedAsset.html</anchorfile>
      <anchor>a7cdaf78bea2af3afcfab3bf3c5e487a4</anchor>
      <arglist>(const SharedAsset &amp;rhs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SharedAsset &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesiumUtility_1_1SharedAsset.html</anchorfile>
      <anchor>a1b3ac872c0563ba379742167857d4e4b</anchor>
      <arglist>(SharedAsset &amp;&amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::SharedAssetDepot</name>
    <filename>classCesiumAsync_1_1SharedAssetDepot.html</filename>
    <templarg>typename TAssetType</templarg>
    <templarg>typename TAssetKey</templarg>
    <base>CesiumUtility::ReferenceCounted&lt; T, isThreadSafe &gt;</base>
    <base>CesiumUtility::IDepotOwningAsset&lt; TAssetType &gt;</base>
    <member kind="typedef">
      <type>CesiumAsync::Future&lt; CesiumUtility::ResultPointer&lt; TAssetType &gt; &gt;( const AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; IAssetAccessor &gt; &amp;pAssetAccessor, const TAssetKey &amp;key)</type>
      <name>FactorySignature</name>
      <anchorfile>classCesiumAsync_1_1SharedAssetDepot.html</anchorfile>
      <anchor>a8a5e4a9a4e6781d14879a5e4cfa2fe40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SharedAssetDepot</name>
      <anchorfile>classCesiumAsync_1_1SharedAssetDepot.html</anchorfile>
      <anchor>a919507c6c6f75d9cf9585848d83b79e2</anchor>
      <arglist>(std::function&lt; FactorySignature &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>SharedFuture&lt; CesiumUtility::ResultPointer&lt; TAssetType &gt; &gt;</type>
      <name>getOrCreate</name>
      <anchorfile>classCesiumAsync_1_1SharedAssetDepot.html</anchorfile>
      <anchor>aee26acd15bfdfd57e61d53c85e449606</anchor>
      <arglist>(const AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; IAssetAccessor &gt; &amp;pAssetAccessor, const TAssetKey &amp;assetKey)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getAssetCount</name>
      <anchorfile>classCesiumAsync_1_1SharedAssetDepot.html</anchorfile>
      <anchor>a8216f9b70deefca979292b27f7cbbc81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getActiveAssetCount</name>
      <anchorfile>classCesiumAsync_1_1SharedAssetDepot.html</anchorfile>
      <anchor>a31c76425b3279586ad7b1d9ee8480af4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getInactiveAssetCount</name>
      <anchorfile>classCesiumAsync_1_1SharedAssetDepot.html</anchorfile>
      <anchor>a7382df787322033eca550a7fae0917f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getInactiveAssetTotalSizeBytes</name>
      <anchorfile>classCesiumAsync_1_1SharedAssetDepot.html</anchorfile>
      <anchor>abc1539817cb5586837e9a709bbf863be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>inactiveAssetSizeLimitBytes</name>
      <anchorfile>classCesiumAsync_1_1SharedAssetDepot.html</anchorfile>
      <anchor>ad8fc35520a923fad6b4576fc412d6282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::SharedAssetJsonHandler</name>
    <filename>classCesiumJsonReader_1_1SharedAssetJsonHandler.html</filename>
    <base>CesiumJsonReader::ExtensibleObjectJsonHandler</base>
    <member kind="function">
      <type></type>
      <name>SharedAssetJsonHandler</name>
      <anchorfile>classCesiumJsonReader_1_1SharedAssetJsonHandler.html</anchorfile>
      <anchor>af2a29edc32db45004f2b97a7b2432617</anchor>
      <arglist>(const CesiumJsonReader::JsonReaderOptions &amp;context) noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1SharedAssetJsonHandler.html</anchorfile>
      <anchor>afc4f8346f0f124576c20a1bee6a50696</anchor>
      <arglist>(IJsonHandler *pParent, CesiumUtility::ExtensibleObject *pObject)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IJsonHandler *</type>
      <name>readObjectKeySharedAsset</name>
      <anchorfile>classCesiumJsonReader_1_1SharedAssetJsonHandler.html</anchorfile>
      <anchor>af80dcbd5c43eb3c1a24fc943ce29c76c</anchor>
      <arglist>(const std::string &amp;objectType, const std::string_view &amp;str, CesiumUtility::ExtensibleObject &amp;o)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::SharedFuture</name>
    <filename>classCesiumAsync_1_1SharedFuture.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, T &gt;</type>
      <name>thenInWorkerThread</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>aedf0a9fdae314a2428e7022bd4efafe6</anchor>
      <arglist>(Func &amp;&amp;f)</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, T &gt;</type>
      <name>thenInMainThread</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>af0967ffb6aaca95bdad0819de9c0e815</anchor>
      <arglist>(Func &amp;&amp;f)</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, T &gt;</type>
      <name>thenImmediately</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>a1814ab5d4a5617a6a3cd425568fe1ac9</anchor>
      <arglist>(Func &amp;&amp;f)</arglist>
    </member>
    <member kind="function">
      <type>CesiumImpl::ContinuationFutureType_t&lt; Func, T &gt;</type>
      <name>thenInThreadPool</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>a2f211b1de7600f2b53ee7976bac8a29b</anchor>
      <arglist>(const ThreadPool &amp;threadPool, Func &amp;&amp;f)</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; T &gt;</type>
      <name>catchInMainThread</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>a5fcd8c9ff524f0d9c1633f74628939b1</anchor>
      <arglist>(Func &amp;&amp;f)</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; T &gt;</type>
      <name>catchImmediately</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>af7b83c4f71f56185ae426ce71565ddfb</anchor>
      <arglist>(Func &amp;&amp;f)</arglist>
    </member>
    <member kind="function">
      <type>Future&lt; std::tuple&lt; TPassThrough..., T &gt; &gt;</type>
      <name>thenPassThrough</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>a87f58db57fabb4e29202055c2612375e</anchor>
      <arglist>(TPassThrough &amp;&amp;... values)</arglist>
    </member>
    <member kind="function">
      <type>const U &amp;</type>
      <name>wait</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>a4955db02ccf67aa54865b9d50af7174c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wait</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>affc139ba3525c40cb8b0aae275737504</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>waitInMainThread</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>a21d845a0aeb389cd635c9abd547cdf94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReady</name>
      <anchorfile>classCesiumAsync_1_1SharedFuture.html</anchorfile>
      <anchor>a1d28c5bc83cb4a7f261d71c220215e28</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::SimplePlanarEllipsoidCurve</name>
    <filename>classCesiumGeospatial_1_1SimplePlanarEllipsoidCurve.html</filename>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>getPosition</name>
      <anchorfile>classCesiumGeospatial_1_1SimplePlanarEllipsoidCurve.html</anchorfile>
      <anchor>a0b8d22d019c4b16f568af2e04bd6ce5d</anchor>
      <arglist>(double percentage, double additionalHeight=0.0) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; SimplePlanarEllipsoidCurve &gt;</type>
      <name>fromEarthCenteredEarthFixedCoordinates</name>
      <anchorfile>classCesiumGeospatial_1_1SimplePlanarEllipsoidCurve.html</anchorfile>
      <anchor>ab617cbab017e49a232c62dfa62693e67</anchor>
      <arglist>(const Ellipsoid &amp;ellipsoid, const glm::dvec3 &amp;sourceEcef, const glm::dvec3 &amp;destinationEcef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; SimplePlanarEllipsoidCurve &gt;</type>
      <name>fromLongitudeLatitudeHeight</name>
      <anchorfile>classCesiumGeospatial_1_1SimplePlanarEllipsoidCurve.html</anchorfile>
      <anchor>a7ea1ccda4a0f04032d76afc865b5baa6</anchor>
      <arglist>(const Ellipsoid &amp;ellipsoid, const Cartographic &amp;source, const Cartographic &amp;destination)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Skin</name>
    <filename>structCesiumGltf_1_1Skin.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Skin.html</anchorfile>
      <anchor>aa78fca7f9e9c2151f41126eaeefce762</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>inverseBindMatrices</name>
      <anchorfile>structCesiumGltf_1_1Skin.html</anchorfile>
      <anchor>abe472d8f00bfdcf5b35c303652ad2108</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>skeleton</name>
      <anchorfile>structCesiumGltf_1_1Skin.html</anchorfile>
      <anchor>a61fca6d8e6b842d1f64525a06164b9cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int32_t &gt;</type>
      <name>joints</name>
      <anchorfile>structCesiumGltf_1_1Skin.html</anchorfile>
      <anchor>a2b73e650f244d2f34475ba5b1f773bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Skin.html</anchorfile>
      <anchor>adde3975c79af1e4738c3ace0ac495fc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::SkinReader</name>
    <filename>classCesiumGltfReader_1_1SkinReader.html</filename>
    <member kind="function">
      <type></type>
      <name>SkinReader</name>
      <anchorfile>classCesiumGltfReader_1_1SkinReader.html</anchorfile>
      <anchor>a55522e7814aa9ceb9700e65011709011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1SkinReader.html</anchorfile>
      <anchor>a4daefce5d1d8b22489a396358fda9928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1SkinReader.html</anchorfile>
      <anchor>a100ed66c1c0b7853d8c4f537fa3aa0db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Skin &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SkinReader.html</anchorfile>
      <anchor>a29a24ee032dce6d685bd2a4da1ff0137</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Skin &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SkinReader.html</anchorfile>
      <anchor>a6ed449110bd31b857342976eecdc0395</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Skin &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1SkinReader.html</anchorfile>
      <anchor>a147e7fd1bda459b9abb52d10462ec200</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltfContent::SkirtMeshMetadata</name>
    <filename>structCesiumGltfContent_1_1SkirtMeshMetadata.html</filename>
    <member kind="function">
      <type></type>
      <name>SkirtMeshMetadata</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>aad0897e6320b02b13b6e95fc568b240a</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; SkirtMeshMetadata &gt;</type>
      <name>parseFromGltfExtras</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>a3b5bec557a78f66b4ef25c6a4ae823da</anchor>
      <arglist>(const CesiumUtility::JsonValue::Object &amp;extras)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumUtility::JsonValue::Object</type>
      <name>createGltfExtras</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>acc987a9b182996a8f80dba0ced58c101</anchor>
      <arglist>(const SkirtMeshMetadata &amp;skirt)</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>noSkirtIndicesBegin</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>abe9728fc2bab8f5596fd46bb357c97d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>noSkirtIndicesCount</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>a3be7d7d62e7704ac2f81c354e60f96a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>noSkirtVerticesBegin</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>ac700d548b53515862d72dd00d538fa35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>noSkirtVerticesCount</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>adfc298d617cd213eff8c2c14b3434fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>glm::dvec3</type>
      <name>meshCenter</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>af71557b005ca76ec7c1523e7f4b851e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>skirtWestHeight</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>a646572fe082c26644f31f805b5418723</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>skirtSouthHeight</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>a28180ec33f13c9fa6c8dd8734f2d261f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>skirtEastHeight</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>a927c9e24729feaf4d620dee1ffedc44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>skirtNorthHeight</name>
      <anchorfile>structCesiumGltfContent_1_1SkirtMeshMetadata.html</anchorfile>
      <anchor>ae755b07c07fff5c13234f2e645c10add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::SqliteCache</name>
    <filename>classCesiumAsync_1_1SqliteCache.html</filename>
    <base>CesiumAsync::ICacheDatabase</base>
    <member kind="function">
      <type></type>
      <name>SqliteCache</name>
      <anchorfile>classCesiumAsync_1_1SqliteCache.html</anchorfile>
      <anchor>aabe77a8aba72c1af23c472554574b76e</anchor>
      <arglist>(const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, const std::string &amp;databaseName, uint64_t maxItems=4096)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::optional&lt; CacheItem &gt;</type>
      <name>getEntry</name>
      <anchorfile>classCesiumAsync_1_1SqliteCache.html</anchorfile>
      <anchor>a07a113ed14d2b6bf1e077eaed2278692</anchor>
      <arglist>(const std::string &amp;key) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>storeEntry</name>
      <anchorfile>classCesiumAsync_1_1SqliteCache.html</anchorfile>
      <anchor>a8d9d83d361b09e318171c2a61b9d1963</anchor>
      <arglist>(const std::string &amp;key, std::time_t expiryTime, const std::string &amp;url, const std::string &amp;requestMethod, const HttpHeaders &amp;requestHeaders, uint16_t statusCode, const HttpHeaders &amp;responseHeaders, const std::span&lt; const std::byte &gt; &amp;responseData) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>prune</name>
      <anchorfile>classCesiumAsync_1_1SqliteCache.html</anchorfile>
      <anchor>a5dbe831ece488bd2f2dedaa7e7ed057f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>clearAll</name>
      <anchorfile>classCesiumAsync_1_1SqliteCache.html</anchorfile>
      <anchor>aedba0351b6037a61ece3a5c65839b072</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumAsync::SqliteHelper</name>
    <filename>structCesiumAsync_1_1SqliteHelper.html</filename>
    <member kind="function" static="yes">
      <type>static SqliteStatementPtr</type>
      <name>prepareStatement</name>
      <anchorfile>structCesiumAsync_1_1SqliteHelper.html</anchorfile>
      <anchor>a374991eb6cd2b2e8615e7d9ea8bb875b</anchor>
      <arglist>(const SqliteConnectionPtr &amp;pConnection, const std::string &amp;sql)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Statistics</name>
    <filename>structCesium3DTiles_1_1Statistics.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Statistics.html</anchorfile>
      <anchor>ad170ba5e18c1e52ba7355961761033e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, Cesium3DTiles::ClassStatistics &gt;</type>
      <name>classes</name>
      <anchorfile>structCesium3DTiles_1_1Statistics.html</anchorfile>
      <anchor>aacda90546960b4e42972191713bb40c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Statistics.html</anchorfile>
      <anchor>acdc25c43aec798c3b0c3647df308c134</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::StatisticsReader</name>
    <filename>classCesium3DTilesReader_1_1StatisticsReader.html</filename>
    <member kind="function">
      <type></type>
      <name>StatisticsReader</name>
      <anchorfile>classCesium3DTilesReader_1_1StatisticsReader.html</anchorfile>
      <anchor>afdc3c89a41ac64415e6452c148b6f9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1StatisticsReader.html</anchorfile>
      <anchor>aaa475b1fe3dee2e789de4874e27bb8df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1StatisticsReader.html</anchorfile>
      <anchor>afdbf96ff521197e6c8ecf5d6b236291d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Statistics &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1StatisticsReader.html</anchorfile>
      <anchor>abedf69ad3a445aaaae5ce19fcf498ced</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Statistics &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1StatisticsReader.html</anchorfile>
      <anchor>a99848c4c31a72b0172bfe7b1d58781f1</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Statistics &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1StatisticsReader.html</anchorfile>
      <anchor>a40f5029d1f4917d70b08613789180686</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::StatusFromAccessor</name>
    <filename>structCesiumGltf_1_1StatusFromAccessor.html</filename>
    <member kind="function">
      <type>AccessorViewStatus</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1StatusFromAccessor.html</anchorfile>
      <anchor>a3127948676ed468e1ccbc22cb83979eb</anchor>
      <arglist>(std::monostate)</arglist>
    </member>
    <member kind="function">
      <type>AccessorViewStatus</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1StatusFromAccessor.html</anchorfile>
      <anchor>ae4b5edea4859f4466996f32a4c7da871</anchor>
      <arglist>(const AccessorView&lt; T &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::StringHelpers</name>
    <filename>classCesiumUtility_1_1StringHelpers.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toStringUtf8</name>
      <anchorfile>classCesiumUtility_1_1StringHelpers.html</anchorfile>
      <anchor>a4020ce12cbf9a519f15b676922f49c2d</anchor>
      <arglist>(const std::u8string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumJsonReader::StringJsonHandler</name>
    <filename>classCesiumJsonReader_1_1StringJsonHandler.html</filename>
    <base>CesiumJsonReader::JsonHandler</base>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCesiumJsonReader_1_1StringJsonHandler.html</anchorfile>
      <anchor>a4cf2f300be9461b0b846eed2cf7d4092</anchor>
      <arglist>(IJsonHandler *pParent, std::string *pString)</arglist>
    </member>
    <member kind="function">
      <type>std::string *</type>
      <name>getObject</name>
      <anchorfile>classCesiumJsonReader_1_1StringJsonHandler.html</anchorfile>
      <anchor>a5349c2c8443f246da76b707244c3494d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IJsonHandler *</type>
      <name>readString</name>
      <anchorfile>classCesiumJsonReader_1_1StringJsonHandler.html</anchorfile>
      <anchor>a8a8157d4c138c98c5bb3441af5bad0f7</anchor>
      <arglist>(const std::string_view &amp;str) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::PropertyTableProperty::StringOffsetType</name>
    <filename>structCesium3DTiles_1_1PropertyTableProperty_1_1StringOffsetType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT8</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty_1_1StringOffsetType.html</anchorfile>
      <anchor>a568bcc78a4bd26a75834dda03d1239d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT16</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty_1_1StringOffsetType.html</anchorfile>
      <anchor>a98606e7b85c7759553bfcb6f35ab5d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT32</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty_1_1StringOffsetType.html</anchorfile>
      <anchor>aee77f606ca3736a429ed5f28d0519dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT64</name>
      <anchorfile>structCesium3DTiles_1_1PropertyTableProperty_1_1StringOffsetType.html</anchorfile>
      <anchor>a6a9e178b1c20527950d7b4bf8b04d51b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::PropertyTableProperty::StringOffsetType</name>
    <filename>structCesiumGltf_1_1PropertyTableProperty_1_1StringOffsetType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT8</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty_1_1StringOffsetType.html</anchorfile>
      <anchor>ac63aed39efc73664b027aa0013903a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT16</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty_1_1StringOffsetType.html</anchorfile>
      <anchor>a050ae6ded11028f0a09337ae2ba6924b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT32</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty_1_1StringOffsetType.html</anchorfile>
      <anchor>a6f49e48eedc07003503382e5583dcb29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT64</name>
      <anchorfile>structCesiumGltf_1_1PropertyTableProperty_1_1StringOffsetType.html</anchorfile>
      <anchor>afcbe745649a1376e67b2447f40bcbd7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::ImplicitTiling::SubdivisionScheme</name>
    <filename>structCesium3DTiles_1_1ImplicitTiling_1_1SubdivisionScheme.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>QUADTREE</name>
      <anchorfile>structCesium3DTiles_1_1ImplicitTiling_1_1SubdivisionScheme.html</anchorfile>
      <anchor>a7459c9e59a647bf2333214cb5e4173ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>OCTREE</name>
      <anchorfile>structCesium3DTiles_1_1ImplicitTiling_1_1SubdivisionScheme.html</anchorfile>
      <anchor>a9aebef1220de0f6c82f80ac0ee3b7e83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Subtree</name>
    <filename>structCesium3DTiles_1_1Subtree.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>a57f70c7f326c288e82a471d3ca804448</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::Buffer &gt;</type>
      <name>buffers</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>a871e44f563d6d5f14ccb5c64bdc3cebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::BufferView &gt;</type>
      <name>bufferViews</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>a4d412304f345e3443a4fa80ff42c72fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::PropertyTable &gt;</type>
      <name>propertyTables</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>a2c601ae53a81df53c74c3c6a6f3497f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Cesium3DTiles::Availability</type>
      <name>tileAvailability</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>aa3e40622b0e555d9d8346d180dc35cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::Availability &gt;</type>
      <name>contentAvailability</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>ab64c445b72488f309e71440e28e8940f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Cesium3DTiles::Availability</type>
      <name>childSubtreeAvailability</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>ab19915528414dc7be9400439e630066c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>tileMetadata</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>a3a626ea633e11809f268cad4870857fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int64_t &gt;</type>
      <name>contentMetadata</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>ae9fb2973718fdd44f1ea59531feaf310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::MetadataEntity &gt;</type>
      <name>subtreeMetadata</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>a007d9f6b53fbf01f10d61d4a9febb958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Subtree.html</anchorfile>
      <anchor>a8470a9c082d67a51833d660a12479a9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::SubtreeAvailability</name>
    <filename>classCesium3DTilesContent_1_1SubtreeAvailability.html</filename>
    <class kind="struct">Cesium3DTilesContent::SubtreeAvailability::SubtreeBufferViewAvailability</class>
    <class kind="struct">Cesium3DTilesContent::SubtreeAvailability::SubtreeConstantAvailability</class>
    <member kind="typedef">
      <type>std::variant&lt; SubtreeConstantAvailability, SubtreeBufferViewAvailability &gt;</type>
      <name>AvailabilityView</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a2c438142883ee14d7a161a8b059ac787</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubtreeAvailability</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a0c52aeb8b1615b6b4799c4f6d8dde31f</anchor>
      <arglist>(ImplicitTileSubdivisionScheme subdivisionScheme, uint32_t levelsInSubtree, AvailabilityView tileAvailability, AvailabilityView subtreeAvailability, std::vector&lt; AvailabilityView &gt; &amp;&amp;contentAvailability, Cesium3DTiles::Subtree &amp;&amp;subtree)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTileAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a890986456248baef213c7eccf628fe78</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;subtreeId, const CesiumGeometry::QuadtreeTileID &amp;tileId) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTileAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a5813a75ac9d21cc1543fc811cb45c8d0</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;subtreeId, const CesiumGeometry::OctreeTileID &amp;tileId) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTileAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a1f0b4e430a9894de6bf22a7d98e4d586</anchor>
      <arglist>(uint32_t relativeTileLevel, uint64_t relativeTileMortonId) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTileAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a9b7f9600e41b0460736588c4bb6b8a08</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;subtreeId, const CesiumGeometry::QuadtreeTileID &amp;tileId, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTileAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a2f63bd3316eb6529c0335452dcd3f168</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;subtreeId, const CesiumGeometry::OctreeTileID &amp;tileId, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTileAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>af817ee1bde21e206e5cef2ebfaa08b60</anchor>
      <arglist>(uint32_t relativeTileLevel, uint64_t relativeTileMortonId, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContentAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a61678705e371c3f0133703a56a01c971</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;subtreeId, const CesiumGeometry::QuadtreeTileID &amp;tileId, uint64_t contentId) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContentAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a2c9567d7c7884fa74b65871a20a1ba62</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;subtreeId, const CesiumGeometry::OctreeTileID &amp;tileId, uint64_t contentId) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContentAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a77412a1f88ee17b895d005ef9bd30941</anchor>
      <arglist>(uint32_t relativeTileLevel, uint64_t relativeTileMortonId, uint64_t contentId) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>aa40c55a944ee00f55aa7b469ef627ff8</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;subtreeId, const CesiumGeometry::QuadtreeTileID &amp;tileId, uint64_t contentId, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a5fc9a30ec20fd5b7f0af496479f9f88e</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;subtreeId, const CesiumGeometry::OctreeTileID &amp;tileId, uint64_t contentId, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a85b20399fbeb5aa3b346475f9fb0d677</anchor>
      <arglist>(uint32_t relativeTileLevel, uint64_t relativeTileMortonId, uint64_t contentId, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSubtreeAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>ab3c96069b6de2adf550a0147d9229170</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;thisSubtreeID, const CesiumGeometry::QuadtreeTileID &amp;checkSubtreeID) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSubtreeAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>abce4323bab84d2769a3fe44af1276dba</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;thisSubtreeID, const CesiumGeometry::OctreeTileID &amp;checkSubtreeID) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSubtreeAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a504bf5ae543d5bec8714b352eaaa29f2</anchor>
      <arglist>(uint64_t relativeSubtreeMortonId) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubtreeAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>aae90665c29e3c911a0ed0374afca9b25</anchor>
      <arglist>(const CesiumGeometry::QuadtreeTileID &amp;thisSubtreeID, const CesiumGeometry::QuadtreeTileID &amp;setSubtreeID, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubtreeAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a070013051595f5e276fd711ef8be96e5</anchor>
      <arglist>(const CesiumGeometry::OctreeTileID &amp;thisSubtreeID, const CesiumGeometry::OctreeTileID &amp;setSubtreeID, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubtreeAvailable</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>af0d0d1af9ed47a1ed77bee0be1f7d231</anchor>
      <arglist>(uint64_t relativeSubtreeMortonId, bool isAvailable) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Cesium3DTiles::Subtree &amp;</type>
      <name>getSubtree</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>aba21750ab87dcb82737c02702dd17d73</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; SubtreeAvailability &gt;</type>
      <name>fromSubtree</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a61dd11f0034858ed191dc03f4adc9ed6</anchor>
      <arglist>(ImplicitTileSubdivisionScheme subdivisionScheme, uint32_t levelsInSubtree, Cesium3DTiles::Subtree &amp;&amp;subtree) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; SubtreeAvailability &gt;</type>
      <name>createEmpty</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a646f2c8066a7afc6cb7b8addefb79763</anchor>
      <arglist>(ImplicitTileSubdivisionScheme subdivisionScheme, uint32_t levelsInSubtree) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CesiumAsync::Future&lt; std::optional&lt; SubtreeAvailability &gt; &gt;</type>
      <name>loadSubtree</name>
      <anchorfile>classCesium3DTilesContent_1_1SubtreeAvailability.html</anchorfile>
      <anchor>a09b2419d02903825f41b0cd53bc56bc9</anchor>
      <arglist>(ImplicitTileSubdivisionScheme subdivisionScheme, uint32_t levelsInSubtree, const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, const std::string &amp;subtreeUrl, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;requestHeaders)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::SubtreeBufferView</name>
    <filename>structCesiumGeometry_1_1SubtreeBufferView.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>byteOffset</name>
      <anchorfile>structCesiumGeometry_1_1SubtreeBufferView.html</anchorfile>
      <anchor>ab6c94ac86770b0eef855b31f82383992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>byteLength</name>
      <anchorfile>structCesiumGeometry_1_1SubtreeBufferView.html</anchorfile>
      <anchor>a108b110f39c6a620c18516f8f7971e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>buffer</name>
      <anchorfile>structCesiumGeometry_1_1SubtreeBufferView.html</anchorfile>
      <anchor>a99f2b514af781cc2b1ed68b2a40bac96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::SubtreeAvailability::SubtreeBufferViewAvailability</name>
    <filename>structCesium3DTilesContent_1_1SubtreeAvailability_1_1SubtreeBufferViewAvailability.html</filename>
    <member kind="variable">
      <type>std::span&lt; std::byte &gt;</type>
      <name>view</name>
      <anchorfile>structCesium3DTilesContent_1_1SubtreeAvailability_1_1SubtreeBufferViewAvailability.html</anchorfile>
      <anchor>ab2ba1f3ac466a2af9b0746c5839d4c17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesContent::SubtreeAvailability::SubtreeConstantAvailability</name>
    <filename>structCesium3DTilesContent_1_1SubtreeAvailability_1_1SubtreeConstantAvailability.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>constant</name>
      <anchorfile>structCesium3DTilesContent_1_1SubtreeAvailability_1_1SubtreeConstantAvailability.html</anchorfile>
      <anchor>a1604e0594badd88c2200e022d02f0909</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::SubtreeFileReader</name>
    <filename>classCesium3DTilesReader_1_1SubtreeFileReader.html</filename>
    <member kind="function">
      <type></type>
      <name>SubtreeFileReader</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeFileReader.html</anchorfile>
      <anchor>a33f722b174e960e2c19f9694f0ad0825</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeFileReader.html</anchorfile>
      <anchor>a95d4aa8fc9d9dd0582e4d8e4b5161020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeFileReader.html</anchorfile>
      <anchor>a4e09dee48916838f78cff2d2baea96ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Subtree &gt; &gt;</type>
      <name>load</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeFileReader.html</anchorfile>
      <anchor>a88d10f346dc3bff981c7bf1de5108a9c</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::string &amp;url, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;headers={}) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Subtree &gt; &gt;</type>
      <name>load</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeFileReader.html</anchorfile>
      <anchor>a2a513abb8e2a4faa8a953a42ca5f18b7</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumAsync::IAssetRequest &gt; &amp;pRequest) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Subtree &gt; &gt;</type>
      <name>load</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeFileReader.html</anchorfile>
      <anchor>ab4b891863e0c40910384069b34c83e5c</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::string &amp;url, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;requestHeaders, const std::span&lt; const std::byte &gt; &amp;data) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::SubtreeReader</name>
    <filename>classCesium3DTilesReader_1_1SubtreeReader.html</filename>
    <member kind="function">
      <type></type>
      <name>SubtreeReader</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeReader.html</anchorfile>
      <anchor>a2e662c3730b7e6b92809238a2dd66732</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeReader.html</anchorfile>
      <anchor>a056679e6f93a3921d157481bf03ee8dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeReader.html</anchorfile>
      <anchor>a7e8379a93d857d5e0fdb31d5f1e6e6aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Subtree &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeReader.html</anchorfile>
      <anchor>a70b21ec9181785869b94e8f58cd35d5f</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Subtree &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeReader.html</anchorfile>
      <anchor>a95dfb27119a7123f2f6daba7959d1074</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Subtree &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreeReader.html</anchorfile>
      <anchor>a4e1e201276acd36f34383a21d0dab684</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Subtrees</name>
    <filename>structCesium3DTiles_1_1Subtrees.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Subtrees.html</anchorfile>
      <anchor>a2be2feba4479e79fc141ed440c0e507d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>uri</name>
      <anchorfile>structCesium3DTiles_1_1Subtrees.html</anchorfile>
      <anchor>a6d1482adb8506bd54d97de683c56ddeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Subtrees.html</anchorfile>
      <anchor>a2362952c56e6e2136c60696851c88869</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::SubtreesReader</name>
    <filename>classCesium3DTilesReader_1_1SubtreesReader.html</filename>
    <member kind="function">
      <type></type>
      <name>SubtreesReader</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreesReader.html</anchorfile>
      <anchor>a2c1d0ffc1c8a5344772b56721298cd2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreesReader.html</anchorfile>
      <anchor>aeb4a6d099d2cc0045ad6718f493e4a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreesReader.html</anchorfile>
      <anchor>a3795e56634cd0d6a9dd5403012390570</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Subtrees &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreesReader.html</anchorfile>
      <anchor>aa9d455004f7007857ec09bc7de89cd37</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Subtrees &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreesReader.html</anchorfile>
      <anchor>a2e11adbfffdca5dc3a5263e22645b3ce</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Subtrees &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1SubtreesReader.html</anchorfile>
      <anchor>a5d900e36f4f7ef160b1c115a36ea542f</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesWriter::SubtreeWriter</name>
    <filename>classCesium3DTilesWriter_1_1SubtreeWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>SubtreeWriter</name>
      <anchorfile>classCesium3DTilesWriter_1_1SubtreeWriter.html</anchorfile>
      <anchor>a73a1697223b9f2a8e84172545018907a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesium3DTilesWriter_1_1SubtreeWriter.html</anchorfile>
      <anchor>a63328acbbe3504f6ec256522c5ee5951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesium3DTilesWriter_1_1SubtreeWriter.html</anchorfile>
      <anchor>aa7dcff1ff6fa4ea0fab6bee5e9ea06b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SubtreeWriterResult</type>
      <name>writeSubtree</name>
      <anchorfile>classCesium3DTilesWriter_1_1SubtreeWriter.html</anchorfile>
      <anchor>a4e1110dec3ee98a168240e35bd560b96</anchor>
      <arglist>(const Cesium3DTiles::Subtree &amp;subtree, const SubtreeWriterOptions &amp;options=SubtreeWriterOptions()) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesWriter::SubtreeWriterOptions</name>
    <filename>structCesium3DTilesWriter_1_1SubtreeWriterOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>prettyPrint</name>
      <anchorfile>structCesium3DTilesWriter_1_1SubtreeWriterOptions.html</anchorfile>
      <anchor>a4be8e154ad4fcfc3b537df38e1f29133</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesWriter::SubtreeWriterResult</name>
    <filename>structCesium3DTilesWriter_1_1SubtreeWriterResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>subtreeBytes</name>
      <anchorfile>structCesium3DTilesWriter_1_1SubtreeWriterResult.html</anchorfile>
      <anchor>a78580073002011c4ca561eb0362a9f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesium3DTilesWriter_1_1SubtreeWriterResult.html</anchorfile>
      <anchor>aff4b457f5dfd6625352a107e465c5a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesium3DTilesWriter_1_1SubtreeWriterResult.html</anchorfile>
      <anchor>af2f3e41de50599c8046aa4a69d282553</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::SupportedGpuCompressedPixelFormats</name>
    <filename>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>ETC1_RGB</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>acd45cbaabf24bc230e8bcb6e6a7df06c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ETC2_RGBA</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a9985b954000512e07a624ffacd0d1b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>BC1_RGB</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a65ee69a466ae58b93165d724b126cac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>BC3_RGBA</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a4b15deee20188ef408de8b45b77c79ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>BC4_R</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a6005ca0901bafce248ee3b345e8a534e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>BC5_RG</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a539a26d12a5480c5c5f603a780f6c1b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>BC7_RGBA</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a6d676fac5a0c408fa125c17527151e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PVRTC1_4_RGB</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a207fed043d4243435f76b07c32a218bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PVRTC1_4_RGBA</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>ad2498eb33d4d2411db66201ef4d3200a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ASTC_4x4_RGBA</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a4df6e93f1de67002c533fb1fddf4a9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PVRTC2_4_RGB</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a72b581b71aceee99fdc95ba7bc48d13a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PVRTC2_4_RGBA</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a6e709a63321fb6c90d1b98526622c27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ETC2_EAC_R11</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a99902f59d7d50aff69dee5169d7f5e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ETC2_EAC_RG11</name>
      <anchorfile>structCesiumGltf_1_1SupportedGpuCompressedPixelFormats.html</anchorfile>
      <anchor>a6edf6f598eca69db741ce9ed284b9ee8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::BufferView::Target</name>
    <filename>structCesiumGltf_1_1BufferView_1_1Target.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>ARRAY_BUFFER</name>
      <anchorfile>structCesiumGltf_1_1BufferView_1_1Target.html</anchorfile>
      <anchor>a6583a31f6100e4e051d447a00c01ac1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>ELEMENT_ARRAY_BUFFER</name>
      <anchorfile>structCesiumGltf_1_1BufferView_1_1Target.html</anchorfile>
      <anchor>a27b3c689778787d037f0e1562ef286de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TexCoordFromAccessor</name>
    <filename>structCesiumGltf_1_1TexCoordFromAccessor.html</filename>
    <member kind="function">
      <type>std::optional&lt; glm::dvec2 &gt;</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1TexCoordFromAccessor.html</anchorfile>
      <anchor>a9d332a76e2c9936b45ae446562e6f2dc</anchor>
      <arglist>(const AccessorView&lt; AccessorTypes::VEC2&lt; float &gt; &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; glm::dvec2 &gt;</type>
      <name>operator()</name>
      <anchorfile>structCesiumGltf_1_1TexCoordFromAccessor.html</anchorfile>
      <anchor>a9c0ff7377ded4f919b34fbe5e5853246</anchor>
      <arglist>(const AccessorView&lt; AccessorTypes::VEC2&lt; T &gt; &gt; &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>index</name>
      <anchorfile>structCesiumGltf_1_1TexCoordFromAccessor.html</anchorfile>
      <anchor>a3d473af10bf67d90e1d0d79e54023493</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Texture</name>
    <filename>structCesiumGltf_1_1Texture.html</filename>
    <base>CesiumGltf::NamedObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1Texture.html</anchorfile>
      <anchor>ad58689b21a56afa33436b87920e0d7a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>sampler</name>
      <anchorfile>structCesiumGltf_1_1Texture.html</anchorfile>
      <anchor>a742a98f298b28d3b8a624cc960430559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>source</name>
      <anchorfile>structCesiumGltf_1_1Texture.html</anchorfile>
      <anchor>ac83fa50e963f39d8592cd1e68b90ba06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1Texture.html</anchorfile>
      <anchor>ab413f7c1bc73d3c22221cb34e524aa56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TextureInfo</name>
    <filename>structCesiumGltf_1_1TextureInfo.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesiumGltf_1_1TextureInfo.html</anchorfile>
      <anchor>a048bb30340fd7ef3bb8fb7310dbecad6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>index</name>
      <anchorfile>structCesiumGltf_1_1TextureInfo.html</anchorfile>
      <anchor>a0f26fdc9e092c62db9e7ed9e9a79ce79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>texCoord</name>
      <anchorfile>structCesiumGltf_1_1TextureInfo.html</anchorfile>
      <anchor>a98eb603dc5b8dcea81f20f07fbaaeb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesiumGltf_1_1TextureInfo.html</anchorfile>
      <anchor>acc651483dacef0697ed29d8d3d89bacd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::TextureInfoReader</name>
    <filename>classCesiumGltfReader_1_1TextureInfoReader.html</filename>
    <member kind="function">
      <type></type>
      <name>TextureInfoReader</name>
      <anchorfile>classCesiumGltfReader_1_1TextureInfoReader.html</anchorfile>
      <anchor>a24978111095030e79386bc1a2bf6ebd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1TextureInfoReader.html</anchorfile>
      <anchor>a1483f2bfe42aaea83b01e9cfd5d79764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1TextureInfoReader.html</anchorfile>
      <anchor>a98b61210deb007826d4518f12c53b602</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::TextureInfo &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1TextureInfoReader.html</anchorfile>
      <anchor>abf03323e2da90b4b4d466665b087ca60</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::TextureInfo &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1TextureInfoReader.html</anchorfile>
      <anchor>a7b88bdd89823279ceb549f8fa5ba6214</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::TextureInfo &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1TextureInfoReader.html</anchorfile>
      <anchor>a2e39d693dce6318caf1d5b3c01c62da5</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltfReader::TextureReader</name>
    <filename>classCesiumGltfReader_1_1TextureReader.html</filename>
    <member kind="function">
      <type></type>
      <name>TextureReader</name>
      <anchorfile>classCesiumGltfReader_1_1TextureReader.html</anchorfile>
      <anchor>a9a7410646cf80d771e88bf564ed9e03e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1TextureReader.html</anchorfile>
      <anchor>adc4c33db2af0e28d5663ce68eec34e12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesiumGltfReader_1_1TextureReader.html</anchorfile>
      <anchor>a2b6b14faf5c2ae2add66a2af037ea72d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Texture &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1TextureReader.html</anchorfile>
      <anchor>af8e5bbeeefd2f2dfe9c24c38eb1b4e13</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; CesiumGltf::Texture &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1TextureReader.html</anchorfile>
      <anchor>a974fa648478c28737dd44415d9cedf24</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; CesiumGltf::Texture &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesiumGltfReader_1_1TextureReader.html</anchorfile>
      <anchor>adc670cf53ca2bcdb861c1d78c3204bfc</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGltf::TextureView</name>
    <filename>classCesiumGltf_1_1TextureView.html</filename>
    <member kind="function">
      <type></type>
      <name>TextureView</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>a983ad5b7ad68e2827289acfae001f1d3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureView</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>ae2ab3a78964c0ff538de7822750fb953</anchor>
      <arglist>(const Model &amp;model, const TextureInfo &amp;textureInfo, const TextureViewOptions &amp;options=TextureViewOptions()) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextureView</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>a8f31340b4b83227421eba2e933dbe6c6</anchor>
      <arglist>(const Sampler &amp;sampler, const ImageAsset &amp;image, int64_t textureCoordinateSetIndex, const ExtensionKhrTextureTransform *pKhrTextureTransformExtension=nullptr, const TextureViewOptions &amp;options=TextureViewOptions()) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextureViewStatus</type>
      <name>getTextureViewStatus</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>a6ea64eea0a7f515a91f0be09855dcaf7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getTexCoordSetIndex</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>ae2298714aae18383ae8b0fb36f71e09e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Sampler *</type>
      <name>getSampler</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>a21bb3da2bac6f8a7a72de9c5665f03db</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const ImageAsset *</type>
      <name>getImage</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>ad581f6badc8e7e8e7044fb25c80ac7ed</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; KhrTextureTransform &gt;</type>
      <name>getTextureTransform</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>a6c84dd05c4e3c169b13ad403b9fb904a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>sampleNearestPixel</name>
      <anchorfile>classCesiumGltf_1_1TextureView.html</anchorfile>
      <anchor>aeca9af5ff61fca925daa31e7f4a04977</anchor>
      <arglist>(double u, double v, const std::vector&lt; int64_t &gt; &amp;channels) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TextureViewOptions</name>
    <filename>structCesiumGltf_1_1TextureViewOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>applyKhrTextureTransformExtension</name>
      <anchorfile>structCesiumGltf_1_1TextureViewOptions.html</anchorfile>
      <anchor>a44242e5f0fbb66e24ad7203263cc24f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>makeImageCopy</name>
      <anchorfile>structCesiumGltf_1_1TextureViewOptions.html</anchorfile>
      <anchor>a24ea1a162cc19e7b590bddbd4c487aa9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumAsync::ThreadPool</name>
    <filename>classCesiumAsync_1_1ThreadPool.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadPool</name>
      <anchorfile>classCesiumAsync_1_1ThreadPool.html</anchorfile>
      <anchor>a522ad4fcf35fc33a78a4a1e97f990db8</anchor>
      <arglist>(int32_t numberOfThreads)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Tile</name>
    <filename>structCesium3DTiles_1_1Tile.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <class kind="struct">Cesium3DTiles::Tile::Refine</class>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>af661d84a2c87cd813841d1c5038cfaa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>Cesium3DTiles::BoundingVolume</type>
      <name>boundingVolume</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>adb07b53385ecba52c6e0f88a9e1e891b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::BoundingVolume &gt;</type>
      <name>viewerRequestVolume</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>a82a37a99b1b32b148e4e55aaa215f078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>geometricError</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>aba9fd7a5ab23cfa901e92d655b3811f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>refine</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>a6201f250b093512ba74422eedbefdcf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>transform</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>adb10ceeb5564f57e6e85e272646115b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::Content &gt;</type>
      <name>content</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>afc8d5ee66e24222e41188993d36c1b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::Content &gt;</type>
      <name>contents</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>a4e85e6631b0e87df20886a5bc4784a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::MetadataEntity &gt;</type>
      <name>metadata</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>a490aa10faffce5d2d5bf70f11dc4e4cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::ImplicitTiling &gt;</type>
      <name>implicitTiling</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>a5ce069a26ead9026723a388019b9ffd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::Tile &gt;</type>
      <name>children</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>ac1a290a93664fec69d013383c04a78db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Tile.html</anchorfile>
      <anchor>afed171e9752aa0e7567270075d32c8ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::Tile</name>
    <filename>classCesium3DTilesSelection_1_1Tile.html</filename>
    <member kind="typedef">
      <type>CesiumUtility::DoublyLinkedList&lt; Tile, &amp;Tile::_loadedTilesLinks &gt;</type>
      <name>LoadedLinkedList</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a4cddeb0ed5ba30054374f4b1d7018ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a2051f7df78a0588b7726502a4750e707</anchor>
      <arglist>(TilesetContentLoader *pLoader) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>adb0c583515af4549fc3be142e058d312</anchor>
      <arglist>(TilesetContentLoader *pLoader, std::unique_ptr&lt; TileExternalContent &gt; &amp;&amp;externalContent) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>ac5c69bc1da8072c8ccba5e435388b769</anchor>
      <arglist>(TilesetContentLoader *pLoader, TileEmptyContent emptyContent) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>aeda88ebf6c58cca73ab91f46b1230850</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>acac31aa306dcb3c820e6cca3ecbc3cfa</anchor>
      <arglist>(const Tile &amp;rhs)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>ac7b6a16c55a5032aa5a4afde498b7721</anchor>
      <arglist>(Tile &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Tile &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>acd9ccded576dad03bde8071d52b2587a</anchor>
      <arglist>(const Tile &amp;rhs)=delete</arglist>
    </member>
    <member kind="function">
      <type>Tile &amp;</type>
      <name>operator=</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a58a16b05c0ccb5c7e8daa4136cd4ce9c</anchor>
      <arglist>(Tile &amp;&amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Tile *</type>
      <name>getParent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a588244dbb1446ab3e37e47847abb4c58</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Tile *</type>
      <name>getParent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>af65680fe62e1f08efbf3d3448a750f2c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::span&lt; Tile &gt;</type>
      <name>getChildren</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>aa3fd304314976ae1d31a10ab96ebf99f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::span&lt; const Tile &gt;</type>
      <name>getChildren</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a8e2d4a6d23d825bf3e0aa2aec93f2f57</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createChildTiles</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a4fea54585e2232392063e2d97e2c2409</anchor>
      <arglist>(std::vector&lt; Tile &gt; &amp;&amp;children)</arglist>
    </member>
    <member kind="function">
      <type>const BoundingVolume &amp;</type>
      <name>getBoundingVolume</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>adb57ed2095d2ccc7d92a5d0bd608ad86</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundingVolume</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>ade6ddbc6ab282443392ad6e57971f6be</anchor>
      <arglist>(const BoundingVolume &amp;value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; BoundingVolume &gt; &amp;</type>
      <name>getViewerRequestVolume</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a05f86dec6b126027705e6b2624368462</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewerRequestVolume</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>ab1738c4fb79855629cc6331492a93a30</anchor>
      <arglist>(const std::optional&lt; BoundingVolume &gt; &amp;value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGeometricError</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>af53e9133f96d6a6ac21bd4d97fc447dd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometricError</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a3d902f0df8c6736605667cb6f0b5878b</anchor>
      <arglist>(double value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNonZeroGeometricError</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a1f632e363bb1bc6489dbe0b6ff875cd9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUnconditionallyRefine</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>ae98638bcdaca5a0e5b4cd7e63eababc6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnconditionallyRefine</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>adff39188c07e006b7d009632057b160c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>TileRefine</type>
      <name>getRefine</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>ab6085f41c705ce20fffd8ea76d9b9d01</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefine</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a9a160d7a4246711d686cc899621872f0</anchor>
      <arglist>(TileRefine value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dmat4x4 &amp;</type>
      <name>getTransform</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>aa2fef4ee7fe8b33740b76da0e4ddb91f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransform</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>aab123419093e7c78b0568973332625ad</anchor>
      <arglist>(const glm::dmat4x4 &amp;value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TileID &amp;</type>
      <name>getTileID</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a16579286b94e046337e16aabd7f02e6c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTileID</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a47ee9f3f8bd0d6ed6dd9cdf2e805d0bc</anchor>
      <arglist>(const TileID &amp;id) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; BoundingVolume &gt; &amp;</type>
      <name>getContentBoundingVolume</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a0c1ffeb8cc314ced200130cc4bc748c6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentBoundingVolume</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>ad8600bd32f6a5466ce7eb7345378dcc4</anchor>
      <arglist>(const std::optional&lt; BoundingVolume &gt; &amp;value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TileSelectionState &amp;</type>
      <name>getLastSelectionState</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a298872a63dd6337b529e53e2708f3bee</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TileSelectionState &amp;</type>
      <name>getLastSelectionState</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a67f8aef8ce2c894a0bb774effa309d84</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastSelectionState</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a45a93b9d8f91ea0d69d27b1a60a6b789</anchor>
      <arglist>(const TileSelectionState &amp;newState) noexcept</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>computeByteSize</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a4b03a02d726d270f70d3719b3bc92864</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; RasterMappedTo3DTile &gt; &amp;</type>
      <name>getMappedRasterTiles</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>ab9c63a5a0ed21923e1aa5b55978ea7e7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; RasterMappedTo3DTile &gt; &amp;</type>
      <name>getMappedRasterTiles</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a338cff84ddf2e891b071637842d370df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TileContent &amp;</type>
      <name>getContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>af474daa36924d1cffee923c1518d8fde</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TileContent &amp;</type>
      <name>getContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>aefeec24a0430166dfb64d0ac8d3e7021</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRenderable</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a59e6e015f5d33a7c5d43578bafb8cfbc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRenderContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a519a34546235dcf166a4f2f5be428fc7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExternalContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a3f8c7bfd393df3efba0819ac59d82663</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmptyContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>af3cc4eaa0bfd062224d1ba82380c2c76</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TilesetContentLoader *</type>
      <name>getLoader</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>aa6094bb31b69314b351eef97e0146230</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TileLoadState</type>
      <name>getState</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tile.html</anchorfile>
      <anchor>a46c3db4194fe81d0f3869ac44b5408f5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::TileBoundingVolumes</name>
    <filename>classCesium3DTilesContent_1_1TileBoundingVolumes.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; CesiumGeometry::OrientedBoundingBox &gt;</type>
      <name>getOrientedBoundingBox</name>
      <anchorfile>classCesium3DTilesContent_1_1TileBoundingVolumes.html</anchorfile>
      <anchor>a89f3abaaf87b7f93d8e76afc5e976f60</anchor>
      <arglist>(const Cesium3DTiles::BoundingVolume &amp;boundingVolume)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setOrientedBoundingBox</name>
      <anchorfile>classCesium3DTilesContent_1_1TileBoundingVolumes.html</anchorfile>
      <anchor>a69a9096ba36de11b31e2ec968162b6a2</anchor>
      <arglist>(Cesium3DTiles::BoundingVolume &amp;boundingVolume, const CesiumGeometry::OrientedBoundingBox &amp;boundingBox)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; CesiumGeospatial::BoundingRegion &gt;</type>
      <name>getBoundingRegion</name>
      <anchorfile>classCesium3DTilesContent_1_1TileBoundingVolumes.html</anchorfile>
      <anchor>ab3a13c8efeae4a584968b3303b550383</anchor>
      <arglist>(const Cesium3DTiles::BoundingVolume &amp;boundingVolume, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBoundingRegion</name>
      <anchorfile>classCesium3DTilesContent_1_1TileBoundingVolumes.html</anchorfile>
      <anchor>a005b343ef81b9ea909e3cdc55f5e7e1d</anchor>
      <arglist>(Cesium3DTiles::BoundingVolume &amp;boundingVolume, const CesiumGeospatial::BoundingRegion &amp;boundingRegion)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; CesiumGeometry::BoundingSphere &gt;</type>
      <name>getBoundingSphere</name>
      <anchorfile>classCesium3DTilesContent_1_1TileBoundingVolumes.html</anchorfile>
      <anchor>afdbe089b041164c757f64629d899c5dd</anchor>
      <arglist>(const Cesium3DTiles::BoundingVolume &amp;boundingVolume)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBoundingSphere</name>
      <anchorfile>classCesium3DTilesContent_1_1TileBoundingVolumes.html</anchorfile>
      <anchor>a3250ca7536faf3c71cd03b11c0171ba9</anchor>
      <arglist>(Cesium3DTiles::BoundingVolume &amp;boundingVolume, const CesiumGeometry::BoundingSphere &amp;boundingSphere)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::optional&lt; CesiumGeospatial::S2CellBoundingVolume &gt;</type>
      <name>getS2CellBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1TileBoundingVolumes.html</anchorfile>
      <anchor>a47bf858a66d7d03b0d554d56b1dd7679</anchor>
      <arglist>(const Cesium3DTiles::BoundingVolume &amp;boundingVolume, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setS2CellBoundingVolume</name>
      <anchorfile>classCesium3DTilesContent_1_1TileBoundingVolumes.html</anchorfile>
      <anchor>a90e5d88e82f07132e88770132acef7c0</anchor>
      <arglist>(Cesium3DTiles::BoundingVolume &amp;boundingVolume, const CesiumGeospatial::S2CellBoundingVolume &amp;s2BoundingVolume)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TileChildrenResult</name>
    <filename>structCesium3DTilesSelection_1_1TileChildrenResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; Tile &gt;</type>
      <name>children</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileChildrenResult.html</anchorfile>
      <anchor>a2babebf9cf0041d04813f6c5ddfa4e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TileLoadResultState</type>
      <name>state</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileChildrenResult.html</anchorfile>
      <anchor>abc9bfa44bfe8e96c8a2bc004ab708a93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TileContent</name>
    <filename>classCesium3DTilesSelection_1_1TileContent.html</filename>
    <member kind="function">
      <type></type>
      <name>TileContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a17363c5f4e482031fbff31daf8429004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TileContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a0adca955675615f0c342979df8644c95</anchor>
      <arglist>(TileEmptyContent content)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TileContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a08e0954f967663aba0c84bb88d3fbebe</anchor>
      <arglist>(std::unique_ptr&lt; TileExternalContent &gt; &amp;&amp;content)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentKind</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>af907419154f9492ad3d8ede8f32e2be9</anchor>
      <arglist>(TileUnknownContent content)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentKind</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a4a8bcd6584239cefb1002dd8cfbe0fa2</anchor>
      <arglist>(TileEmptyContent content)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentKind</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>ac7905dea46c3a5f6ae4cb530a922d8c4</anchor>
      <arglist>(std::unique_ptr&lt; TileExternalContent &gt; &amp;&amp;content)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentKind</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a709167b3eeaf3d295c8ea75b48157cec</anchor>
      <arglist>(std::unique_ptr&lt; TileRenderContent &gt; &amp;&amp;content)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUnknownContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>af2175a5b916a7937caaecaf0432d760d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmptyContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a8cef3dfca2cd46093711ffcc9c226cb6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExternalContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a70879dbf7327fa07f1a25353eb351635</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRenderContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>aa2c7853a4033b23ef772f6ba2f5a7113</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TileRenderContent *</type>
      <name>getRenderContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a52d70856f6966a03a32ce6f68f8343bd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TileRenderContent *</type>
      <name>getRenderContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a61212622a5314f449f8a0b373ed792f8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TileExternalContent *</type>
      <name>getExternalContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a3d01988817a2d5bbcbb494ee4f385635</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TileExternalContent *</type>
      <name>getExternalContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileContent.html</anchorfile>
      <anchor>a09d854f6e207a7fbe7eb52d1efc73d55</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TileEmptyContent</name>
    <filename>structCesium3DTilesSelection_1_1TileEmptyContent.html</filename>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TileExternalContent</name>
    <filename>structCesium3DTilesSelection_1_1TileExternalContent.html</filename>
    <member kind="variable">
      <type>TilesetMetadata</type>
      <name>metadata</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileExternalContent.html</anchorfile>
      <anchor>aef7e19dd3b8896eb818579bd79be74ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TileIdUtilities</name>
    <filename>structCesium3DTilesSelection_1_1TileIdUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>createTileIdString</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileIdUtilities.html</anchorfile>
      <anchor>a45ff9513ec725c3b2420be09be19083d</anchor>
      <arglist>(const TileID &amp;tileId)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TileLoadInput</name>
    <filename>structCesium3DTilesSelection_1_1TileLoadInput.html</filename>
    <member kind="function">
      <type></type>
      <name>TileLoadInput</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadInput.html</anchorfile>
      <anchor>a96ed3c139d6de57d236c5bea6f2cd70f</anchor>
      <arglist>(const Tile &amp;tile, const TilesetContentOptions &amp;contentOptions, const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;requestHeaders, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="variable">
      <type>const Tile &amp;</type>
      <name>tile</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadInput.html</anchorfile>
      <anchor>a20df597eafcb5cb1b46e0bbf0c9c6e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const TilesetContentOptions &amp;</type>
      <name>contentOptions</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadInput.html</anchorfile>
      <anchor>ad5268b52777c4eedf7c12ea0e1acd29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CesiumAsync::AsyncSystem &amp;</type>
      <name>asyncSystem</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadInput.html</anchorfile>
      <anchor>a757961e78b8f03e7aae0e8260c6cc3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;</type>
      <name>pAssetAccessor</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadInput.html</anchorfile>
      <anchor>afb5bafba93e288b8ea9f212475d573e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::shared_ptr&lt; spdlog::logger &gt; &amp;</type>
      <name>pLogger</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadInput.html</anchorfile>
      <anchor>a265117b07118a57f19a6415b4e9fbb23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;</type>
      <name>requestHeaders</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadInput.html</anchorfile>
      <anchor>a47be45965e3a92ea3770a3ff21b7ae5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const CesiumGeospatial::Ellipsoid &amp;</type>
      <name>ellipsoid</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadInput.html</anchorfile>
      <anchor>aaaaafcc2198496e6ddef8cc04a7dd341</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TileLoadResult</name>
    <filename>structCesium3DTilesSelection_1_1TileLoadResult.html</filename>
    <member kind="function" static="yes">
      <type>static TileLoadResult</type>
      <name>createFailedResult</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a8aa7327e76c50fefe3d5a6611ff150db</anchor>
      <arglist>(std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; pAssetAccessor, std::shared_ptr&lt; CesiumAsync::IAssetRequest &gt; pCompletedRequest)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TileLoadResult</type>
      <name>createRetryLaterResult</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>aee94701fab70172195fc791aac244d9d</anchor>
      <arglist>(std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; pAssetAccessor, std::shared_ptr&lt; CesiumAsync::IAssetRequest &gt; pCompletedRequest)</arglist>
    </member>
    <member kind="variable">
      <type>TileContentKind</type>
      <name>contentKind</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a317d87d77564bca5f4648d0d4ca77d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeometry::Axis</type>
      <name>glTFUpAxis</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>afbd5e7f3f0bdcc9b90f1a8c6cb5480ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; BoundingVolume &gt;</type>
      <name>updatedBoundingVolume</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a7e3f8683702f73f1c1e0292538d19cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; BoundingVolume &gt;</type>
      <name>updatedContentBoundingVolume</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a6ae7ac523dae01bcb51537898f6e12e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumRasterOverlays::RasterOverlayDetails &gt;</type>
      <name>rasterOverlayDetails</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a71e62690dc085f0d1abbe1a280b77db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt;</type>
      <name>pAssetAccessor</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>ac87016ac26157ccca19ca127e68c99db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; CesiumAsync::IAssetRequest &gt;</type>
      <name>pCompletedRequest</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a04be19a4237e2effaf81ce26ee96ea1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(Tile &amp;)&gt;</type>
      <name>tileInitializer</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a36814d27dab75780c91d8ed2393a688d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TileLoadResultState</type>
      <name>state</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a10d181af0b800715027e79ca2553a220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeospatial::Ellipsoid</type>
      <name>ellipsoid</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResult.html</anchorfile>
      <anchor>a3ab58fee73ace2afaa23041780673d2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TileLoadResultAndRenderResources</name>
    <filename>structCesium3DTilesSelection_1_1TileLoadResultAndRenderResources.html</filename>
    <member kind="variable">
      <type>TileLoadResult</type>
      <name>result</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResultAndRenderResources.html</anchorfile>
      <anchor>a5ec68441bed5199cc6c9be1bf0528052</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pRenderResources</name>
      <anchorfile>structCesium3DTilesSelection_1_1TileLoadResultAndRenderResources.html</anchorfile>
      <anchor>ab450e3411c4e57cfd94841164e7cd0d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::TileMapServiceRasterOverlay</name>
    <filename>classCesiumRasterOverlays_1_1TileMapServiceRasterOverlay.html</filename>
    <base>CesiumRasterOverlays::RasterOverlay</base>
    <member kind="function">
      <type></type>
      <name>TileMapServiceRasterOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1TileMapServiceRasterOverlay.html</anchorfile>
      <anchor>a492e15fcc81d443c804a977ae4fc9d74</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;url, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;headers={}, const TileMapServiceRasterOverlayOptions &amp;tmsOptions={}, const RasterOverlayOptions &amp;overlayOptions={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CesiumAsync::Future&lt; CreateTileProviderResult &gt;</type>
      <name>createTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1TileMapServiceRasterOverlay.html</anchorfile>
      <anchor>ae55bdc0c574e3b6a7a18e4f23f35adfd</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumUtility::CreditSystem &gt; &amp;pCreditSystem, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; pOwner) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::TileMapServiceRasterOverlayOptions</name>
    <filename>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</filename>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>fileExtension</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a40d7d3dc96a6fe6ac8f683eb28d1e064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>credit</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a712b9157270e16918a11b08bd325f155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>minimumLevel</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>acfbcdd7cb31b5bb7ed4247251f492936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>maximumLevel</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>aa7c96fcd2fba8c55347fa5c6ce7aac1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGeometry::Rectangle &gt;</type>
      <name>coverageRectangle</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a24ae8f5c83122cc4820115ad79f39925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGeospatial::Projection &gt;</type>
      <name>projection</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>ab81d09ab8ff7d8783dd49f33bf5b9acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGeometry::QuadtreeTilingScheme &gt;</type>
      <name>tilingScheme</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a3a8fab404b1db078715dfd01c1aad4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>tileWidth</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a3bf60d0faf9ae6f24649a1b0e3492ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>tileHeight</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>ada9fde2f7e1fecf44a8032129b3a3d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; bool &gt;</type>
      <name>flipXY</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a6e5790d752ff42c59a4d28d7b7cd2944</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TileOcclusionRendererProxy</name>
    <filename>classCesium3DTilesSelection_1_1TileOcclusionRendererProxy.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual TileOcclusionState</type>
      <name>getOcclusionState</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxy.html</anchorfile>
      <anchor>a2c85c656415adc2b3a83a72258d70bb7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxy.html</anchorfile>
      <anchor>a334ab7c58f06f9ad36743f88576b098b</anchor>
      <arglist>(const Tile *pTile)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TileOcclusionRendererProxyPool</name>
    <filename>classCesium3DTilesSelection_1_1TileOcclusionRendererProxyPool.html</filename>
    <member kind="function">
      <type></type>
      <name>TileOcclusionRendererProxyPool</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxyPool.html</anchorfile>
      <anchor>a51f8a9de3f0d626599001f6e4d7367a7</anchor>
      <arglist>(int32_t maximumPoolSize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TileOcclusionRendererProxyPool</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxyPool.html</anchorfile>
      <anchor>a65b7855ece7a405359c4d945e94fcfa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyPool</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxyPool.html</anchorfile>
      <anchor>a14c6fb7cb818f63617e17766067afe3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TileOcclusionRendererProxy *</type>
      <name>fetchOcclusionProxyForTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxyPool.html</anchorfile>
      <anchor>a9960bf67367483b742775f8d837090cf</anchor>
      <arglist>(const Tile &amp;tile, int32_t currentFrame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pruneOcclusionProxyMappings</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxyPool.html</anchorfile>
      <anchor>a9403659c604a3748ba2896d4f6d42ba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TileOcclusionRendererProxy *</type>
      <name>createProxy</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxyPool.html</anchorfile>
      <anchor>a986b4951d11a31014c167690ae0972da</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>destroyProxy</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileOcclusionRendererProxyPool.html</anchorfile>
      <anchor>adad09136b36a396dba711b0dd38af9a1</anchor>
      <arglist>(TileOcclusionRendererProxy *pProxy)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::TileProviderAndTile</name>
    <filename>structCesiumRasterOverlays_1_1TileProviderAndTile.html</filename>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; RasterOverlayTileProvider &gt;</type>
      <name>pTileProvider</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileProviderAndTile.html</anchorfile>
      <anchor>aaa0a23f06bd1d1ae7f396a2335e9b99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; RasterOverlayTile &gt;</type>
      <name>pTile</name>
      <anchorfile>structCesiumRasterOverlays_1_1TileProviderAndTile.html</anchorfile>
      <anchor>a531020e50bc05e2409b72934aed8b6da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::TileReader</name>
    <filename>classCesium3DTilesReader_1_1TileReader.html</filename>
    <member kind="function">
      <type></type>
      <name>TileReader</name>
      <anchorfile>classCesium3DTilesReader_1_1TileReader.html</anchorfile>
      <anchor>a1643be9c7a10ffe1a913c26258696256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1TileReader.html</anchorfile>
      <anchor>af1cb1d958c7f8a377ed116c2adfc4686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1TileReader.html</anchorfile>
      <anchor>ae41458f70cef12db7840c3c877dd722b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Tile &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1TileReader.html</anchorfile>
      <anchor>aec78a5fe532fd2f60ec429aa5d3c07f7</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Tile &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1TileReader.html</anchorfile>
      <anchor>a88ce326b371d2e9209d51f3b2ab74bab</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Tile &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1TileReader.html</anchorfile>
      <anchor>aa51f5c26ba42ef6b0e8cdac17f1a335c</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TileRenderContent</name>
    <filename>classCesium3DTilesSelection_1_1TileRenderContent.html</filename>
    <member kind="function">
      <type></type>
      <name>TileRenderContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a540ac12cbfbf45797196abb7be9fa4ed</anchor>
      <arglist>(CesiumGltf::Model &amp;&amp;model)</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGltf::Model &amp;</type>
      <name>getModel</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>afcbf6032f5b24ac20e23b7985d9417f1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumGltf::Model &amp;</type>
      <name>getModel</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a43c46a29dd29de74f5ab3bf3d43d21e5</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a13457bf5368d023f162cc3e2ecaa1094</anchor>
      <arglist>(const CesiumGltf::Model &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a25f278373863b391f22040c91ec02e77</anchor>
      <arglist>(CesiumGltf::Model &amp;&amp;model)</arglist>
    </member>
    <member kind="function">
      <type>const CesiumRasterOverlays::RasterOverlayDetails &amp;</type>
      <name>getRasterOverlayDetails</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>af1a7e9146d22c02e1b1fee3340c33615</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumRasterOverlays::RasterOverlayDetails &amp;</type>
      <name>getRasterOverlayDetails</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>acc644a49c37c2810d5cf81dd92252e93</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRasterOverlayDetails</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>aec6c947ff4626431aed84b21318fbf03</anchor>
      <arglist>(const CesiumRasterOverlays::RasterOverlayDetails &amp;rasterOverlayDetails)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRasterOverlayDetails</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>ac717744312d9f961643ccddb9923d9b4</anchor>
      <arglist>(CesiumRasterOverlays::RasterOverlayDetails &amp;&amp;rasterOverlayDetails)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CesiumUtility::Credit &gt; &amp;</type>
      <name>getCredits</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a58f0c2824afe29a8f3a6fded724c892c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; CesiumUtility::Credit &gt; &amp;</type>
      <name>getCredits</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a5737251b18e7e994b82aa867aa819d34</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCredits</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a1d48aea42a5949cd7ffa3b9befcd8ba7</anchor>
      <arglist>(std::vector&lt; CesiumUtility::Credit &gt; &amp;&amp;credits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCredits</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a8435f63b4a57ff758dcabdd967cb7eec</anchor>
      <arglist>(const std::vector&lt; CesiumUtility::Credit &gt; &amp;credits)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>getRenderResources</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a30991774d77b11f01e4d226bd8da4398</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderResources</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>aa2a06297c29fddae36331e572b19de3d</anchor>
      <arglist>(void *pRenderResources) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getLodTransitionFadePercentage</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>aab626d803d34f3e213ec8f5f70ae4a39</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLodTransitionFadePercentage</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileRenderContent.html</anchorfile>
      <anchor>a4f2f46b6135caba66e8a336a9f78057f</anchor>
      <arglist>(float percentage) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TileSelectionState</name>
    <filename>classCesium3DTilesSelection_1_1TileSelectionState.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Result</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileSelectionState.html</anchorfile>
      <anchor>a38acee649c08e4d7f04dc26d146c0151</anchor>
      <arglist></arglist>
      <enumvalue file="classCesium3DTilesSelection_1_1TileSelectionState.html" anchor="a38acee649c08e4d7f04dc26d146c0151a6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classCesium3DTilesSelection_1_1TileSelectionState.html" anchor="a38acee649c08e4d7f04dc26d146c0151a597700f463b47effe2a9ae80121f9438">Culled</enumvalue>
      <enumvalue file="classCesium3DTilesSelection_1_1TileSelectionState.html" anchor="a38acee649c08e4d7f04dc26d146c0151aa15a459a0439bde1ab6508bce7a05547">Rendered</enumvalue>
      <enumvalue file="classCesium3DTilesSelection_1_1TileSelectionState.html" anchor="a38acee649c08e4d7f04dc26d146c0151ae179f0bcf9190ee2b46fc8381d7ed9c3">Refined</enumvalue>
      <enumvalue file="classCesium3DTilesSelection_1_1TileSelectionState.html" anchor="a38acee649c08e4d7f04dc26d146c0151a2f85f1ad69b008a7a1cdd284e90fef40">RenderedAndKicked</enumvalue>
      <enumvalue file="classCesium3DTilesSelection_1_1TileSelectionState.html" anchor="a38acee649c08e4d7f04dc26d146c0151ad45af1ec28ea70a86d14e9d5fd736248">RefinedAndKicked</enumvalue>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>TileSelectionState</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileSelectionState.html</anchorfile>
      <anchor>a9e37cb333af6b1b84bc60092beb87330</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>TileSelectionState</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileSelectionState.html</anchorfile>
      <anchor>a079bb18c4f937330a07d95f5722985f0</anchor>
      <arglist>(int32_t frameNumber, Result result) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr int32_t</type>
      <name>getFrameNumber</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileSelectionState.html</anchorfile>
      <anchor>a425b01324c83cad3478e98d7da19cbed</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr Result</type>
      <name>getResult</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileSelectionState.html</anchorfile>
      <anchor>ace894cb8253a3f241db039e36ba0d4e4</anchor>
      <arglist>(int32_t frameNumber) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>wasKicked</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileSelectionState.html</anchorfile>
      <anchor>aeefab6310829bfeaf4ed7eb8a16e07c6</anchor>
      <arglist>(int32_t frameNumber) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr Result</type>
      <name>getOriginalResult</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileSelectionState.html</anchorfile>
      <anchor>a990eab25eb806bd4834ba24fb78c32dc</anchor>
      <arglist>(int32_t frameNumber) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr void</type>
      <name>kick</name>
      <anchorfile>classCesium3DTilesSelection_1_1TileSelectionState.html</anchorfile>
      <anchor>a9a3d2510ed5af812e807b2c7ea4f80fe</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Tileset</name>
    <filename>structCesium3DTiles_1_1Tileset.html</filename>
    <base>CesiumUtility::ExtensibleObject</base>
    <member kind="function">
      <type>int64_t</type>
      <name>getSizeBytes</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>a525f20724907683f0f0bfb6ccb580cfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>Cesium3DTiles::Asset</type>
      <name>asset</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>ac03c4e80711f9cb5a8240523889f3921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, Cesium3DTiles::Properties &gt;</type>
      <name>properties</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>a941c596e24aa097264a6c0494501acdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::Schema &gt;</type>
      <name>schema</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>afe447e00e86accc32e23e236948bbc68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>schemaUri</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>ac07b08cc318b663109205086a7cc0b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::Statistics &gt;</type>
      <name>statistics</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>a7e3895944c46f8e8e395b10dd6836165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::GroupMetadata &gt;</type>
      <name>groups</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>ab51607c582acfeefcc510999bc1ebb34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::MetadataEntity &gt;</type>
      <name>metadata</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>a4605473730a43f55826bc9c7db2a8df2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>geometricError</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>ab1f6d8867c71a532b4d47267fce67b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Cesium3DTiles::Tile</type>
      <name>root</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>a3c4f4050847d47dc9fd8bd1fac2a0d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionsUsed</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>a8da9a54cd8fd1ed254a3a6a9d3d4e0fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extensionsRequired</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>a6f12612068bc1c81144e688b2601a163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>TypeName</name>
      <anchorfile>structCesium3DTiles_1_1Tileset.html</anchorfile>
      <anchor>a95cecf2a1ce2165675eaadad4ef153e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::Tileset</name>
    <filename>classCesium3DTilesSelection_1_1Tileset.html</filename>
    <member kind="function">
      <type></type>
      <name>Tileset</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>ab9082fe9a32449decc465a6d555c4d6a</anchor>
      <arglist>(const TilesetExternals &amp;externals, std::unique_ptr&lt; TilesetContentLoader &gt; &amp;&amp;pCustomLoader, std::unique_ptr&lt; Tile &gt; &amp;&amp;pRootTile, const TilesetOptions &amp;options=TilesetOptions())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tileset</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a28eebeab0e2b88935ab77d70310004e3</anchor>
      <arglist>(const TilesetExternals &amp;externals, const std::string &amp;url, const TilesetOptions &amp;options=TilesetOptions())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tileset</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a15df53f73dac5a22a4de5ccee304f2b3</anchor>
      <arglist>(const TilesetExternals &amp;externals, int64_t ionAssetID, const std::string &amp;ionAccessToken, const TilesetOptions &amp;options=TilesetOptions(), const std::string &amp;ionAssetEndpointUrl=&quot;https://api.cesium.com/&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tileset</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>ab727e24defe56d3b73befaca3cc6c459</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::SharedFuture&lt; void &gt; &amp;</type>
      <name>getAsyncDestructionCompleteEvent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a5af55043ebe6f574daf9ae13b38c8e49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::SharedFuture&lt; void &gt; &amp;</type>
      <name>getRootTileAvailableEvent</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a682d16f9db409910b81e995da3e33391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; CesiumUtility::Credit &gt; &amp;</type>
      <name>getTilesetCredits</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>ae6fb4db130c6c0fbe815d789595ce60b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowCreditsOnScreen</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a086a445ec52e18fdede4cded053a8f3b</anchor>
      <arglist>(bool showCreditsOnScreen) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TilesetExternals &amp;</type>
      <name>getExternals</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>af61f56b640bce10ef5c42fe2eac936f9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TilesetExternals &amp;</type>
      <name>getExternals</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a370780314cd2ae279d8b27787562e0f4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::AsyncSystem &amp;</type>
      <name>getAsyncSystem</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a294512097fc8db9428af22c78d891358</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumAsync::AsyncSystem &amp;</type>
      <name>getAsyncSystem</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a437ce565459f408db56b1106fe7ed12d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TilesetOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a36ee0ccfa4ae46a0d0e0851c02406998</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TilesetOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a88fff146ea1b4c51281f718de6660c79</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeospatial::Ellipsoid &amp;</type>
      <name>getEllipsoid</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>aab1d2c2bcd7186759a49e7ab761cbd19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeospatial::Ellipsoid &amp;</type>
      <name>getEllipsoid</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a0d3d79744417cc1081674bbdd6b04791</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>Tile *</type>
      <name>getRootTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a2cb504f1e983a8777634851671b7fa8d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Tile *</type>
      <name>getRootTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>ae33d3d6f64fa7b11856fe0e74caaf405</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>RasterOverlayCollection &amp;</type>
      <name>getOverlays</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>aee41d8d795491155969fde3694854953</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const RasterOverlayCollection &amp;</type>
      <name>getOverlays</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a7dbe02c98ac0e05d0e03b05e01de4e76</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TilesetSharedAssetSystem &amp;</type>
      <name>getSharedAssetSystem</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>afe7eacce0ddeda9f84ef35676c00357b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TilesetSharedAssetSystem &amp;</type>
      <name>getSharedAssetSystem</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a7401188671af57c6ccfbbd805b63518c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const ViewUpdateResult &amp;</type>
      <name>updateViewOffline</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a7bb9a06e4d64eb0411f47893f3321698</anchor>
      <arglist>(const std::vector&lt; ViewState &gt; &amp;frustums)</arglist>
    </member>
    <member kind="function">
      <type>const ViewUpdateResult &amp;</type>
      <name>updateView</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>aa7de838ae886987412d659a022111da6</anchor>
      <arglist>(const std::vector&lt; ViewState &gt; &amp;frustums, float deltaTime=0.0f)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>getNumberOfTilesLoaded</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a5562528a19c4930a0fce57f0a48b96e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>computeLoadProgress</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a72b6bb16a16092eb807c3cdb093fbfe2</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachLoadedTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a3dfc253ba0fa0e456882f2aeb766f14d</anchor>
      <arglist>(const std::function&lt; void(Tile &amp;tile)&gt; &amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachLoadedTile</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a9006bff94c653a4a3b9535e6371d192a</anchor>
      <arglist>(const std::function&lt; void(const Tile &amp;tile)&gt; &amp;callback) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getTotalDataBytes</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a813e7072e4e1efe34458f44d35d4bf26</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const TilesetMetadata *</type>
      <name>getMetadata</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>aa4c967e0abde1e9417e401dd4a136938</anchor>
      <arglist>(const Tile *pTile=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; const TilesetMetadata * &gt;</type>
      <name>loadMetadata</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>aef567f53a621fb0a4a1c46cfb24ea4bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumAsync::Future&lt; SampleHeightResult &gt;</type>
      <name>sampleHeightMostDetailed</name>
      <anchorfile>classCesium3DTilesSelection_1_1Tileset.html</anchorfile>
      <anchor>a2d199ba92faa5debdd948faced605a89</anchor>
      <arglist>(const std::vector&lt; CesiumGeospatial::Cartographic &gt; &amp;positions)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TilesetContentLoader</name>
    <filename>classCesium3DTilesSelection_1_1TilesetContentLoader.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TilesetContentLoader</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetContentLoader.html</anchorfile>
      <anchor>a659d8d6910309e5daea9f54f6823e90f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CesiumAsync::Future&lt; TileLoadResult &gt;</type>
      <name>loadTileContent</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetContentLoader.html</anchorfile>
      <anchor>adffd25fa2db92fae6d88c758de95fff0</anchor>
      <arglist>(const TileLoadInput &amp;input)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TileChildrenResult</type>
      <name>createTileChildren</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetContentLoader.html</anchorfile>
      <anchor>a63e66904c671a04b27ab09a250f66ff6</anchor>
      <arglist>(const Tile &amp;tile, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ITilesetHeightSampler *</type>
      <name>getHeightSampler</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetContentLoader.html</anchorfile>
      <anchor>af51fd6825bd1a20fef800b66733e6bf3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TilesetContentOptions</name>
    <filename>structCesium3DTilesSelection_1_1TilesetContentOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>enableWaterMask</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetContentOptions.html</anchorfile>
      <anchor>aed6462f71d4275486cab2cae5448f6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>generateMissingNormalsSmooth</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetContentOptions.html</anchorfile>
      <anchor>a126abfa2db154341f85b90b156334932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGltf::Ktx2TranscodeTargets</type>
      <name>ktx2TranscodeTargets</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetContentOptions.html</anchorfile>
      <anchor>a4519b0f2719ecccaf91a52d45a63b247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>applyTextureTransform</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetContentOptions.html</anchorfile>
      <anchor>a7f7b3a2febdd2a34c97f6e9adb5cbbf6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TilesetExternals</name>
    <filename>classCesium3DTilesSelection_1_1TilesetExternals.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt;</type>
      <name>pAssetAccessor</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetExternals.html</anchorfile>
      <anchor>a2e46215de527b84ea1dd15151a6fa77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; IPrepareRendererResources &gt;</type>
      <name>pPrepareRendererResources</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetExternals.html</anchorfile>
      <anchor>a768c18bc6fe3c8f9f7d9797fe1576f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumAsync::AsyncSystem</type>
      <name>asyncSystem</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetExternals.html</anchorfile>
      <anchor>a2aa56506fd06d700dea17907fda881f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; CesiumUtility::CreditSystem &gt;</type>
      <name>pCreditSystem</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetExternals.html</anchorfile>
      <anchor>a4c755562644c04165990f3a822b34598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; spdlog::logger &gt;</type>
      <name>pLogger</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetExternals.html</anchorfile>
      <anchor>abd9600c9ca530d19d029a9054ff902b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; TileOcclusionRendererProxyPool &gt;</type>
      <name>pTileOcclusionProxyPool</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetExternals.html</anchorfile>
      <anchor>ab315bb2865ec4ac4551b7ac705988121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumUtility::IntrusivePointer&lt; TilesetSharedAssetSystem &gt;</type>
      <name>pSharedAssetSystem</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetExternals.html</anchorfile>
      <anchor>a388ffc370e2b4d28e689f95ee6fc3e56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TilesetLoadFailureDetails</name>
    <filename>classCesium3DTilesSelection_1_1TilesetLoadFailureDetails.html</filename>
    <member kind="variable">
      <type>const Tileset *</type>
      <name>pTileset</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetLoadFailureDetails.html</anchorfile>
      <anchor>afaf4aa9ea6b41f08cf9b55971454baac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TilesetLoadType</type>
      <name>type</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetLoadFailureDetails.html</anchorfile>
      <anchor>a12b605fb4f7bd1476ef8feb4196f8806</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>statusCode</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetLoadFailureDetails.html</anchorfile>
      <anchor>a9ea4dedbffccd70e5cc7173ec91f04ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetLoadFailureDetails.html</anchorfile>
      <anchor>a09329a31ddb8a502e645f245a7f94ccf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TilesetMetadata</name>
    <filename>classCesium3DTilesSelection_1_1TilesetMetadata.html</filename>
    <member kind="function">
      <type>CesiumAsync::SharedFuture&lt; void &gt; &amp;</type>
      <name>loadSchemaUri</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetMetadata.html</anchorfile>
      <anchor>a372908f47b271fdd53b12aa4cadd2ba4</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor)</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::Schema &gt;</type>
      <name>schema</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetMetadata.html</anchorfile>
      <anchor>a548a64bce243edf3a45c1357c871bf36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>schemaUri</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetMetadata.html</anchorfile>
      <anchor>affe303f6890ea43e560e74e2d41a85ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Cesium3DTiles::GroupMetadata &gt;</type>
      <name>groups</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetMetadata.html</anchorfile>
      <anchor>a4ee0a541db81f03324ea6776e6ad75a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; Cesium3DTiles::MetadataEntity &gt;</type>
      <name>metadata</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetMetadata.html</anchorfile>
      <anchor>abf2401411871234f70d3fda5daf88883</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TilesetOptions</name>
    <filename>structCesium3DTilesSelection_1_1TilesetOptions.html</filename>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>credit</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a698a68c712411e6fbcd992be86cbc6ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>showCreditsOnScreen</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>aade191b65ed3f9455f8fbcba9f20b9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumScreenSpaceError</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a9c4d93e8066ddba71f3a65d40d1c0a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>maximumSimultaneousTileLoads</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a1b8a66e848efb0c9cf59c63b467aa4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>maximumSimultaneousSubtreeLoads</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a42c7735e78cb88dcc8c81dfdc9fddc54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>preloadAncestors</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a1270c22bca8eb691af2f067602a4accc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>preloadSiblings</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a91947e1db19ede600add6a097e116d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>loadingDescendantLimit</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a04eaf7a4f9e3d3d6364c07773eaa70d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>forbidHoles</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>af664551930c47fc37f5b9e8a33b2a9ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableFrustumCulling</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a9d602c5fa0217af33f80654e1909dfca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableOcclusionCulling</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a3819f45a4676614da5011c2e6a3294fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>delayRefinementForOcclusion</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a5ce3a024e88e0e12e3637263cd6aaec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableFogCulling</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>ae5deb7ca97ed31ead8181e688f4c0805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enforceCulledScreenSpaceError</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>af6c864290975b59fcda135171039978e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>culledScreenSpaceError</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a58267374d5b4a6061c04061081388abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>maximumCachedBytes</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a6ea47ef2b6ba2e864cd939937607f9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; FogDensityAtHeight &gt;</type>
      <name>fogDensityTable</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a4ba7655cc2a581bb14b89a6cd46ccdb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>renderTilesUnderCamera</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>aab05de47231f8bcafd7c0af6a4cd83bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; ITileExcluder &gt; &gt;</type>
      <name>excluders</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a0c16b3075dcf8b0e4314141c04ca6619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(const TilesetLoadFailureDetails &amp;)&gt;</type>
      <name>loadErrorCallback</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a05082c5b9f18f80876cd96e27f094fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLodTransitionPeriod</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>af1c4e34fd3438dadcf598a82a72f48a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>lodTransitionLength</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a4fe46f108b50956ca87315c47a840a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>kickDescendantsWhileFadingIn</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a584e0691809d7f67f2df6b014054f3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mainThreadLoadingTimeLimit</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a39aae501a473a50892f8be223c404f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tileCacheUnloadTimeLimit</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>a424e9ca0c4bb30e62daae404c64e0c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TilesetContentOptions</type>
      <name>contentOptions</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>ab9a6eb88f09f96599e3f2c536731d54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::any</type>
      <name>rendererOptions</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>acebd4b65afcfabb5fc0f53681a082933</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CesiumGeospatial::Ellipsoid</type>
      <name>ellipsoid</name>
      <anchorfile>structCesium3DTilesSelection_1_1TilesetOptions.html</anchorfile>
      <anchor>aec6bf27cef9c4ecf0175591ca86d72e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesReader::TilesetReader</name>
    <filename>classCesium3DTilesReader_1_1TilesetReader.html</filename>
    <member kind="function">
      <type></type>
      <name>TilesetReader</name>
      <anchorfile>classCesium3DTilesReader_1_1TilesetReader.html</anchorfile>
      <anchor>a324dbda11ccd4dfabfa6e9006dcb83eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1TilesetReader.html</anchorfile>
      <anchor>a8f936e3e2f49f6a102b46804d7b320db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonReader::JsonReaderOptions &amp;</type>
      <name>getOptions</name>
      <anchorfile>classCesium3DTilesReader_1_1TilesetReader.html</anchorfile>
      <anchor>a4c8397edf259911b73d8381be7da8e13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Tileset &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1TilesetReader.html</anchorfile>
      <anchor>ac874f639a4c37558e47e5f81a1c543fc</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; Cesium3DTiles::Tileset &gt;</type>
      <name>readFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1TilesetReader.html</anchorfile>
      <anchor>a8b33d76c6a80a226f0a754dac6a46fce</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonReader::ReadJsonResult&lt; std::vector&lt; Cesium3DTiles::Tileset &gt; &gt;</type>
      <name>readArrayFromJson</name>
      <anchorfile>classCesium3DTilesReader_1_1TilesetReader.html</anchorfile>
      <anchor>aa553809ca1fc80fb098b58bded871441</anchor>
      <arglist>(const rapidjson::Value &amp;value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::TilesetSharedAssetSystem</name>
    <filename>classCesium3DTilesSelection_1_1TilesetSharedAssetSystem.html</filename>
    <base>CesiumGltfReader::GltfSharedAssetSystem</base>
    <member kind="function" static="yes">
      <type>static CesiumUtility::IntrusivePointer&lt; TilesetSharedAssetSystem &gt;</type>
      <name>getDefault</name>
      <anchorfile>classCesium3DTilesSelection_1_1TilesetSharedAssetSystem.html</anchorfile>
      <anchor>a7807eec563eeae249b79ec5b8bf3c6ee</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesWriter::TilesetWriter</name>
    <filename>classCesium3DTilesWriter_1_1TilesetWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>TilesetWriter</name>
      <anchorfile>classCesium3DTilesWriter_1_1TilesetWriter.html</anchorfile>
      <anchor>aacc8b856c63ffc908420fbe3bdf1007c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesium3DTilesWriter_1_1TilesetWriter.html</anchorfile>
      <anchor>a0d9ba5038f8315bc5d7afe8ab1e82aa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CesiumJsonWriter::ExtensionWriterContext &amp;</type>
      <name>getExtensions</name>
      <anchorfile>classCesium3DTilesWriter_1_1TilesetWriter.html</anchorfile>
      <anchor>a9b4a5c48037d6c14cd2d02c53f297f02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TilesetWriterResult</type>
      <name>writeTileset</name>
      <anchorfile>classCesium3DTilesWriter_1_1TilesetWriter.html</anchorfile>
      <anchor>a01c5be9dbd03e9cd7f9ade4199f7acdd</anchor>
      <arglist>(const Cesium3DTiles::Tileset &amp;tileset, const TilesetWriterOptions &amp;options=TilesetWriterOptions()) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesWriter::TilesetWriterOptions</name>
    <filename>structCesium3DTilesWriter_1_1TilesetWriterOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>prettyPrint</name>
      <anchorfile>structCesium3DTilesWriter_1_1TilesetWriterOptions.html</anchorfile>
      <anchor>a4ddd239583a592b3748930bac09a2ec7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesWriter::TilesetWriterResult</name>
    <filename>structCesium3DTilesWriter_1_1TilesetWriterResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; std::byte &gt;</type>
      <name>tilesetBytes</name>
      <anchorfile>structCesium3DTilesWriter_1_1TilesetWriterResult.html</anchorfile>
      <anchor>a646d50b654c754caa26a4498e75e8ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>structCesium3DTilesWriter_1_1TilesetWriterResult.html</anchorfile>
      <anchor>a78fcb538e8197012011615480f1877de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>structCesium3DTilesWriter_1_1TilesetWriterResult.html</anchorfile>
      <anchor>a873cce2fc55bf78f7a89c0b148dd313f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesContent::TileTransform</name>
    <filename>classCesium3DTilesContent_1_1TileTransform.html</filename>
    <member kind="function" static="yes">
      <type>static std::optional&lt; glm::dmat4 &gt;</type>
      <name>getTransform</name>
      <anchorfile>classCesium3DTilesContent_1_1TileTransform.html</anchorfile>
      <anchor>a7c7d8fdacb125da33d7054e449bab92c</anchor>
      <arglist>(const Cesium3DTiles::Tile &amp;tile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransform</name>
      <anchorfile>classCesium3DTilesContent_1_1TileTransform.html</anchorfile>
      <anchor>aa5c13450a1a3c432f3ae1f319c0ccffa</anchor>
      <arglist>(Cesium3DTiles::Tile &amp;tile, const glm::dmat4 &amp;newTransform)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTilesSelection::TileUnknownContent</name>
    <filename>structCesium3DTilesSelection_1_1TileUnknownContent.html</filename>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::Token</name>
    <filename>structCesiumIonClient_1_1Token.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>aaa61b0319faf555af4bae19a5d539ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>ab81b423e6aedfde88162bbee728e44bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>token</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>a008acd1f2acaa3fb8854720784e8d0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dateAdded</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>acd87a35b7af72bb60245f381572a387f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dateModified</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>a12342e2faf148c10193cb701bc564505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dateLastUsed</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>ae42d1ffddf66d65f542c3f20e089ed86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::vector&lt; int64_t &gt; &gt;</type>
      <name>assetIds</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>a1439ba783c74083aec1f1962060175f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>ac51e8d6f65028e2fa5afd58226d69b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>allowedUrls</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>a0d20fbb602912d3ed4d5b311a0eaa189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>scopes</name>
      <anchorfile>structCesiumIonClient_1_1Token.html</anchorfile>
      <anchor>aba2cf5271b27092663d070c2decac72a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumIonClient::TokenList</name>
    <filename>structCesiumIonClient_1_1TokenList.html</filename>
    <member kind="variable">
      <type>std::vector&lt; Token &gt;</type>
      <name>items</name>
      <anchorfile>structCesiumIonClient_1_1TokenList.html</anchorfile>
      <anchor>aa142251338901562de5a314c1a47e324</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::Transforms</name>
    <filename>structCesiumGeometry_1_1Transforms.html</filename>
    <member kind="function" static="yes">
      <type>static glm::dmat4</type>
      <name>createTranslationRotationScaleMatrix</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>a170b9193599bbf38d041da7f1275e4bc</anchor>
      <arglist>(const glm::dvec3 &amp;translation, const glm::dquat &amp;rotation, const glm::dvec3 &amp;scale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeTranslationRotationScaleFromMatrix</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>a5a03d21ba6ed760a4c5eea63e54227fb</anchor>
      <arglist>(const glm::dmat4 &amp;matrix, glm::dvec3 *pTranslation, glm::dquat *pRotation, glm::dvec3 *pScale)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const glm::dmat4 &amp;</type>
      <name>getUpAxisTransform</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>aa78b8fe1aab86e4b900a6f1ec6427eb7</anchor>
      <arglist>(CesiumGeometry::Axis from, CesiumGeometry::Axis to)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const glm::dmat4</type>
      <name>Y_UP_TO_Z_UP</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>ae513f1171098802da91763025cfc4063</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const glm::dmat4</type>
      <name>Z_UP_TO_Y_UP</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>a90db62f28a32619edeead9b21ec96f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const glm::dmat4</type>
      <name>X_UP_TO_Z_UP</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>aae1483cf3d26b703537064606b995da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const glm::dmat4</type>
      <name>Z_UP_TO_X_UP</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>a0517f8cb238f54c3b6f9e1f2809f4c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const glm::dmat4</type>
      <name>X_UP_TO_Y_UP</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>a644d864b82d464ab7b90f8479550044a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const glm::dmat4</type>
      <name>Y_UP_TO_X_UP</name>
      <anchorfile>structCesiumGeometry_1_1Transforms.html</anchorfile>
      <anchor>a21b4a834cc570b7899401ac4c4d73ef7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::ClassProperty::Type</name>
    <filename>structCesium3DTiles_1_1ClassProperty_1_1Type.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>SCALAR</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>aee93cd4ed41461178aea0cbd1fd149f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC2</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>af264ebcf68cc203b963fb677c4f0a872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC3</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a0e1ce7057d359aad8ce28ff155e39b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC4</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a663abc440cb45bb9b2b9146134871e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT2</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a6ea3c57614c5acb863b68bd15d5d2e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT3</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a9a194a609470d8d2aadbc81f5039bba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT4</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a6ae49e1dc1025d2f0f6c224470be063f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>STRING</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a802ea911c7f0f868bc59310dece7a45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>BOOLEAN</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a6d5dd38e9ff31bfee5c68582bfc58783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>ENUM</name>
      <anchorfile>structCesium3DTiles_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a4cd8bf2798ab21d33648593d0867fad8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorSpec::Type</name>
    <filename>structCesiumGltf_1_1AccessorSpec_1_1Type.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>SCALAR</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1Type.html</anchorfile>
      <anchor>a06e5627f920ba26595d6237738ea76da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC2</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1Type.html</anchorfile>
      <anchor>a73bc18dfd483632304f907ba2abdb74a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC3</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1Type.html</anchorfile>
      <anchor>a5bd3bad399a3c74696a7fb744d9e0701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC4</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1Type.html</anchorfile>
      <anchor>a2039b5fc89e00a846b00fccf13bf35d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT2</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1Type.html</anchorfile>
      <anchor>ae855a621f01d5bba4d939300752034e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT3</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1Type.html</anchorfile>
      <anchor>a6d431ccfb8b8cafb068c9766dab1ca42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT4</name>
      <anchorfile>structCesiumGltf_1_1AccessorSpec_1_1Type.html</anchorfile>
      <anchor>a3c4a6b9fb052a329abcac248e93df8c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Camera::Type</name>
    <filename>structCesiumGltf_1_1Camera_1_1Type.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>perspective</name>
      <anchorfile>structCesiumGltf_1_1Camera_1_1Type.html</anchorfile>
      <anchor>ac14a978d376e97c0777303b0d02fb6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>orthographic</name>
      <anchorfile>structCesiumGltf_1_1Camera_1_1Type.html</anchorfile>
      <anchor>a2b7f4ec63c57aaefaf5f99a3676035cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::ClassProperty::Type</name>
    <filename>structCesiumGltf_1_1ClassProperty_1_1Type.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>SCALAR</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>ade88157fcf7689b3e121b539b411279b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC2</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>ad088749b70bd4bcde1012dd6dec19cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC3</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a63abd6ed2fb16e929d24d051019c1578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>VEC4</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a6236c4e57b0e21309d44037d1943526c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT2</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>ab836b768105f3472b3937a76aa2c87ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT3</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>ab4c1d0b3f2a6844071a6e39a3c46e594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>MAT4</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a5ebd3966decdfda1ac63f0dd62773a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>STRING</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>a0ae05755b1f348b8b23ce112f30a9141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>BOOLEAN</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>aebbe8723e0a872e49c0eed2ca13d110b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>ENUM</name>
      <anchorfile>structCesiumGltf_1_1ClassProperty_1_1Type.html</anchorfile>
      <anchor>aadbee7ec8bc88d5a8d69c4081541d346</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; glm::mat&lt; N, N, T, Q &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01glm_1_1mat_3_01N_00_01N_00_01T_00_01Q_01_4_01_4.html</filename>
    <templarg>glm::length_t N</templarg>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier Q</templarg>
    <member kind="typedef">
      <type>glm::mat&lt; N, N, double, Q &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01glm_1_1mat_3_01N_00_01N_00_01T_00_01Q_01_4_01_4.html</anchorfile>
      <anchor>a4f6b2d815937c551447fc355a14ccfe5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; glm::vec&lt; N, T, Q &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01glm_1_1vec_3_01N_00_01T_00_01Q_01_4_01_4.html</filename>
    <templarg>glm::length_t N</templarg>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier Q</templarg>
    <member kind="typedef">
      <type>glm::vec&lt; N, double, Q &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01glm_1_1vec_3_01N_00_01T_00_01Q_01_4_01_4.html</anchorfile>
      <anchor>a428dc372be3e70a762ba4860dee38e2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; int16_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01int16__t_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01int16__t_01_4.html</anchorfile>
      <anchor>ae885fef66718b4aea4807925d381170d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; int32_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01int32__t_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01int32__t_01_4.html</anchorfile>
      <anchor>a868499959af803d380bb9f7612fabc6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; int64_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01int64__t_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01int64__t_01_4.html</anchorfile>
      <anchor>ac1202f56858aee4be65cb9e1d8847496</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; int8_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01int8__t_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01int8__t_01_4.html</anchorfile>
      <anchor>a576af3e50a9f26e87831744793d07d28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; glm::mat&lt; N, N, T, Q &gt; &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01glm_1_1mat_3_01N_00_01N_00_01T_00_01Q_01_4_01_4_01_4.html</filename>
    <templarg>glm::length_t N</templarg>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier Q</templarg>
    <member kind="typedef">
      <type>PropertyArrayView&lt; glm::mat&lt; N, N, double, Q &gt; &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01glm_1_1mat_3_01N_00_01N_00_01T_00_01Q_01_4_01_4_01_4.html</anchorfile>
      <anchor>a1ab604a6d36af4a1883a3547326bc270</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; glm::vec&lt; N, T, Q &gt; &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01glm_1_1vec_3_01N_00_01T_00_01Q_01_4_01_4_01_4.html</filename>
    <templarg>glm::length_t N</templarg>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier Q</templarg>
    <member kind="typedef">
      <type>PropertyArrayView&lt; glm::vec&lt; N, double, Q &gt; &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01glm_1_1vec_3_01N_00_01T_00_01Q_01_4_01_4_01_4.html</anchorfile>
      <anchor>afea62c95d0ddde024ee7ff22b83690b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; int16_t &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01int16__t_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>PropertyArrayView&lt; double &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01int16__t_01_4_01_4.html</anchorfile>
      <anchor>aa7e81247840fba8c73e1428e379cf50d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; int32_t &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01int32__t_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>PropertyArrayView&lt; double &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01int32__t_01_4_01_4.html</anchorfile>
      <anchor>a978d442ee89edf90e5fb1a1679802931</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; int64_t &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01int64__t_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>PropertyArrayView&lt; double &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01int64__t_01_4_01_4.html</anchorfile>
      <anchor>a39abc201789497c3a74128f2d8b79b1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; int8_t &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01int8__t_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>PropertyArrayView&lt; double &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01int8__t_01_4_01_4.html</anchorfile>
      <anchor>a82e67ba82fefc544f18f3dfda72a4f42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; uint16_t &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01uint16__t_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>PropertyArrayView&lt; double &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01uint16__t_01_4_01_4.html</anchorfile>
      <anchor>a29eb87acc15761dfc566e6b7cc2d2643</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; uint32_t &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01uint32__t_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>PropertyArrayView&lt; double &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01uint32__t_01_4_01_4.html</anchorfile>
      <anchor>a4a00fd8cc527d781d2926459f62d79d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; uint64_t &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01uint64__t_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>PropertyArrayView&lt; double &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01uint64__t_01_4_01_4.html</anchorfile>
      <anchor>ac2367499abb3d81a4e7cfb1ee7f68957</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; uint8_t &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01uint8__t_01_4_01_4.html</filename>
    <member kind="typedef">
      <type>PropertyArrayView&lt; double &gt;</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01PropertyArrayView_3_01uint8__t_01_4_01_4.html</anchorfile>
      <anchor>a88f2e6ae6080d98d57e5b5ef7e7a45dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; uint16_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01uint16__t_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01uint16__t_01_4.html</anchorfile>
      <anchor>a60bf750cb20a871b5a84a91736e2987d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; uint32_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01uint32__t_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01uint32__t_01_4.html</anchorfile>
      <anchor>a6026a99611d212405fed4a86105a383f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; uint64_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01uint64__t_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01uint64__t_01_4.html</anchorfile>
      <anchor>ab54b5bd6c4df6394f1f829d4f26b575a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToNormalizedType&lt; uint8_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToNormalizedType_3_01uint8__t_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>type</name>
      <anchorfile>structCesiumGltf_1_1TypeToNormalizedType_3_01uint8__t_01_4.html</anchorfile>
      <anchor>a175edc6dfc1a15590bde0328d8b4f750</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType.html</filename>
    <templarg>typename T</templarg>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; bool &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01bool_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01bool_01_4.html</anchorfile>
      <anchor>a29b3db14f327e8fed501555e8b5cc7e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01bool_01_4.html</anchorfile>
      <anchor>a86cb33fa81e2979344517deeff771c19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; double &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01double_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01double_01_4.html</anchorfile>
      <anchor>a31d83d4691d0ac3e8c7c80e5dd1be393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01double_01_4.html</anchorfile>
      <anchor>a755b9e009da689a457cbf87cc60ead14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; float &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01float_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01float_01_4.html</anchorfile>
      <anchor>a22af05fea3e250ae315b25e198b2b588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01float_01_4.html</anchorfile>
      <anchor>a83cf1c54f2dbce9d38f5511fcba89727</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; glm::mat&lt; 2, 2, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_012_00_012_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_012_00_012_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>adfdbfeb3b7f210e87c0b1d56ac6671a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_012_00_012_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>a266bca4229df5f55ca9d861748be9858</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; glm::mat&lt; 3, 3, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_013_00_013_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_013_00_013_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>a76e64df6767d67603ef1818519111729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_013_00_013_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>ae0e79bfabfd7dae61c889de036adbb96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; glm::mat&lt; 4, 4, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_014_00_014_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_014_00_014_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>a33506d88b65bdf7c3e8f48430db2b854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1mat_3_014_00_014_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>abdcf3a968902b39a7404c29245498051</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; glm::vec&lt; 2, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_012_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_012_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>a6c343228758efc469f909715cc0fc2ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_012_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>adc8c75731720165377b29f81d75c3d33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; glm::vec&lt; 3, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_013_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_013_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>a2ce43567254e80e140e6947c9c7d01ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_013_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>a7ce5cd3f9365d9d9f32a21ba9bd7b85c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; glm::vec&lt; 4, T, P &gt; &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_014_00_01T_00_01P_01_4_01_4.html</filename>
    <templarg>typename T</templarg>
    <templarg>glm::qualifier P</templarg>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_014_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>ad15b2c137e4bafbc54561e4eaa8a8dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01glm_1_1vec_3_014_00_01T_00_01P_01_4_01_4.html</anchorfile>
      <anchor>a3c7f07b9f3bb6a701454d05ffedf8f65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; int16_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01int16__t_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01int16__t_01_4.html</anchorfile>
      <anchor>a547b3df2abdaa0ebf54208ee9b39574e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01int16__t_01_4.html</anchorfile>
      <anchor>a266c2989b1f039e3b9f8671239746fd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; int32_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01int32__t_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01int32__t_01_4.html</anchorfile>
      <anchor>ad9e403a2f0cc013e60640c4b6d3674b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01int32__t_01_4.html</anchorfile>
      <anchor>a48e8e54f0b659f30e7b8d4f08a53c832</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; int64_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01int64__t_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01int64__t_01_4.html</anchorfile>
      <anchor>a177bca428a41785a4c80ad24b3d3fbc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01int64__t_01_4.html</anchorfile>
      <anchor>ae6d4c89b5fe427b16b99782ef9f5d6c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; int8_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01int8__t_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01int8__t_01_4.html</anchorfile>
      <anchor>afa55d4163eb019f0b9bc72635c7ee9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01int8__t_01_4.html</anchorfile>
      <anchor>a4213bd6c9ad4fa683039122a52eaf0fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; std::string_view &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01std_1_1string__view_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>a02268e4df84f721eb67e54f4a91198ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01std_1_1string__view_01_4.html</anchorfile>
      <anchor>adc2c3bf88ab8fe82b47bcb021ad23d09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; uint16_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01uint16__t_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01uint16__t_01_4.html</anchorfile>
      <anchor>a9471656bf4bba4b0c0e981f189d90585</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01uint16__t_01_4.html</anchorfile>
      <anchor>ae73c986a29e92afa62dbbfcce3afe8f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; uint32_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01uint32__t_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01uint32__t_01_4.html</anchorfile>
      <anchor>acc19640fc48644bdbbf4ad7e447a1a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01uint32__t_01_4.html</anchorfile>
      <anchor>af72b5e166dfacfacbd1882e17960134d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; uint64_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01uint64__t_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01uint64__t_01_4.html</anchorfile>
      <anchor>abdc2bc2800b34f39667ad8b4049549f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01uint64__t_01_4.html</anchorfile>
      <anchor>a73ce8f46f7469ed3ab9c3035bd72821b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::TypeToPropertyType&lt; uint8_t &gt;</name>
    <filename>structCesiumGltf_1_1TypeToPropertyType_3_01uint8__t_01_4.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyComponentType</type>
      <name>component</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01uint8__t_01_4.html</anchorfile>
      <anchor>a0aca261bab8612fccbc4654ed93fa9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr PropertyType</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1TypeToPropertyType_3_01uint8__t_01_4.html</anchorfile>
      <anchor>a5da1b7802f7f838ee69bd616eac36954</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGeometry::UpsampledQuadtreeNode</name>
    <filename>structCesiumGeometry_1_1UpsampledQuadtreeNode.html</filename>
    <member kind="variable">
      <type>QuadtreeTileID</type>
      <name>tileID</name>
      <anchorfile>structCesiumGeometry_1_1UpsampledQuadtreeNode.html</anchorfile>
      <anchor>a4e2ae0e5a4018936a8cd5da20bc5ec00</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumUtility::Uri</name>
    <filename>classCesiumUtility_1_1Uri.html</filename>
    <member kind="typedef">
      <type>std::string</type>
      <name>SubstitutionCallbackSignature</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a911e2286b19bc86869ecc681623bbf11</anchor>
      <arglist>(const std::string &amp;placeholder)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>resolve</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a08426cea0e2efad90b28e47792453a2c</anchor>
      <arglist>(const std::string &amp;base, const std::string &amp;relative, bool useBaseQuery=false, bool assumeHttpsDefault=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>addQuery</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a08a8e6559b0fb2fa7f05e99beb71dad9</anchor>
      <arglist>(const std::string &amp;uri, const std::string &amp;key, const std::string &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getQueryValue</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a369c8bde4cc7f68e7e3a10dfda53878f</anchor>
      <arglist>(const std::string &amp;uri, const std::string &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>substituteTemplateParameters</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a4cecfe22e6313d57bb9177543516e2cc</anchor>
      <arglist>(const std::string &amp;templateUri, const std::function&lt; SubstitutionCallbackSignature &gt; &amp;substitutionCallback)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>escape</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a86440c2f11519728bf5e2a14529888ad</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>unescape</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>aacc8134dc340ef17b5a7f92aca004cc7</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>unixPathToUriPath</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>adfea5ef6fc9bb504131c57d4df6d3736</anchor>
      <arglist>(const std::string &amp;unixPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>windowsPathToUriPath</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a3f5bae3cc2f4a44d00e57429250739e2</anchor>
      <arglist>(const std::string &amp;windowsPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>nativePathToUriPath</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a2230a53da76fb7bc6be0330592151b66</anchor>
      <arglist>(const std::string &amp;nativePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>uriPathToUnixPath</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a75dcb6c495f354e9ee9b8cc9631b8636</anchor>
      <arglist>(const std::string &amp;uriPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>uriPathToWindowsPath</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a04f37e6ee1e3646242cc2607a478313d</anchor>
      <arglist>(const std::string &amp;uriPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>uriPathToNativePath</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>ada719d82ee58634fc2e64c53e7aaeb53</anchor>
      <arglist>(const std::string &amp;uriPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getPath</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a036c0f97f8aa187a51b398f04b8cc3ff</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>setPath</name>
      <anchorfile>classCesiumUtility_1_1Uri.html</anchorfile>
      <anchor>a1a9ca761226f0cd7c28cde05e51b6795</anchor>
      <arglist>(const std::string &amp;uri, const std::string &amp;newPath)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Cesium3DTiles::Enum::ValueType</name>
    <filename>structCesium3DTiles_1_1Enum_1_1ValueType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT8</name>
      <anchorfile>structCesium3DTiles_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a151c42d2dfa6f1f79cdbed81cb2587db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT8</name>
      <anchorfile>structCesium3DTiles_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a2102985e85b02e65f97f2ea6f4918058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT16</name>
      <anchorfile>structCesium3DTiles_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a88212efedd2843b9dd356d0e891994ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT16</name>
      <anchorfile>structCesium3DTiles_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a622e3996533e3fa9b6fdc1e9dde495a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT32</name>
      <anchorfile>structCesium3DTiles_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a342f46112d2e9e487d6f224e431d302c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT32</name>
      <anchorfile>structCesium3DTiles_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>ae7aca4bc096db8107ea42416cbcfce2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT64</name>
      <anchorfile>structCesium3DTiles_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>ac6153787c0c181a14b156b6dddc85e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT64</name>
      <anchorfile>structCesium3DTiles_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a4480b9bfcdebc74a4fd760e160b82b76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Enum::ValueType</name>
    <filename>structCesiumGltf_1_1Enum_1_1ValueType.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT8</name>
      <anchorfile>structCesiumGltf_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a00ef73d749483d723103ded22c61c118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT8</name>
      <anchorfile>structCesiumGltf_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>ab17baa839763d0d2965e3016c5fc32df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT16</name>
      <anchorfile>structCesiumGltf_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a7d51fcf9bb1580cff697b84acea06e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT16</name>
      <anchorfile>structCesiumGltf_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>affbce85a77a0885f7a0813e2a1ad22b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT32</name>
      <anchorfile>structCesiumGltf_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a279f4167cebc1f1ca203fe2ca322d0bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT32</name>
      <anchorfile>structCesiumGltf_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>ae38b5ed3806464cd100d6eee303011c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>INT64</name>
      <anchorfile>structCesiumGltf_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>a04e896e1203fbe038aef8d7f37120099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>UINT64</name>
      <anchorfile>structCesiumGltf_1_1Enum_1_1ValueType.html</anchorfile>
      <anchor>abeb6536c52068d575defbecb204ce5f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorTypes::VEC2</name>
    <filename>structCesiumGltf_1_1AccessorTypes_1_1VEC2.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1AccessorTypes_1_1VEC2.html</anchorfile>
      <anchor>a5cee673c9de6b4ba9fede8df175457dd</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorTypes::VEC3</name>
    <filename>structCesiumGltf_1_1AccessorTypes_1_1VEC3.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1AccessorTypes_1_1VEC3.html</anchorfile>
      <anchor>af34da0344fde50358266b5f4acb68d98</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::AccessorTypes::VEC4</name>
    <filename>structCesiumGltf_1_1AccessorTypes_1_1VEC4.html</filename>
    <templarg>typename T</templarg>
    <member kind="variable">
      <type>T</type>
      <name>value</name>
      <anchorfile>structCesiumGltf_1_1AccessorTypes_1_1VEC4.html</anchorfile>
      <anchor>a183813eed7f501fa2dc88a4d84192111</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::VertexAttributeSemantics</name>
    <filename>structCesiumGltf_1_1VertexAttributeSemantics.html</filename>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>POSITION</name>
      <anchorfile>structCesiumGltf_1_1VertexAttributeSemantics.html</anchorfile>
      <anchor>a3c3062ffabdc21a8f90a6d069b1b7349</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>NORMAL</name>
      <anchorfile>structCesiumGltf_1_1VertexAttributeSemantics.html</anchorfile>
      <anchor>add2936a6fb3a173391b4c92f04d7cb89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>TANGENT</name>
      <anchorfile>structCesiumGltf_1_1VertexAttributeSemantics.html</anchorfile>
      <anchor>a131ab3642c017439d2967e7e72cbb414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::array&lt; std::string, 8 &gt;</type>
      <name>TEXCOORD_n</name>
      <anchorfile>structCesiumGltf_1_1VertexAttributeSemantics.html</anchorfile>
      <anchor>ac0c413f5dfc0b090d3eaeba9df161f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::array&lt; std::string, 8 &gt;</type>
      <name>COLOR_n</name>
      <anchorfile>structCesiumGltf_1_1VertexAttributeSemantics.html</anchorfile>
      <anchor>a04d264068ba8f0bce9a24ac8db07d98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::array&lt; std::string, 8 &gt;</type>
      <name>JOINTS_n</name>
      <anchorfile>structCesiumGltf_1_1VertexAttributeSemantics.html</anchorfile>
      <anchor>a53230dd5449dff7753ddc53168d679b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::array&lt; std::string, 8 &gt;</type>
      <name>WEIGHTS_n</name>
      <anchorfile>structCesiumGltf_1_1VertexAttributeSemantics.html</anchorfile>
      <anchor>acef95f67cf4ef3bca9d463ecb8a97c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::array&lt; std::string, 8 &gt;</type>
      <name>FEATURE_ID_n</name>
      <anchorfile>structCesiumGltf_1_1VertexAttributeSemantics.html</anchorfile>
      <anchor>a5fbea0f4065896e7b8788da27a026fff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::ViewState</name>
    <filename>classCesium3DTilesSelection_1_1ViewState.html</filename>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getPosition</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>afe6efd9097a5b1e7b46904dd37322f5d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getDirection</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>a27c7ec08136e5518f012d6ab28d34cb2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec3 &amp;</type>
      <name>getUp</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>a2dd9356b7815ba59e156d47556b1dd26</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const std::optional&lt; CesiumGeospatial::Cartographic &gt; &amp;</type>
      <name>getPositionCartographic</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>a8e3463c3d18894609ca8469fca569bff</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const glm::dvec2 &amp;</type>
      <name>getViewportSize</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>ab8a3fa33a80c2c19582bb5675b5462b4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHorizontalFieldOfView</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>a573bffef377decad17350bfe17553271</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVerticalFieldOfView</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>af36506551dfad6f28d67285215cc94cc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBoundingVolumeVisible</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>ae6fb78b24c391a5388a68bb55d0c54b1</anchor>
      <arglist>(const BoundingVolume &amp;boundingVolume) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistanceSquaredToBoundingVolume</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>a6001634f416abb399b5d2478121ccc06</anchor>
      <arglist>(const BoundingVolume &amp;boundingVolume) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeScreenSpaceError</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>a8543963a5b764f62faa88fc1ef2eec41</anchor>
      <arglist>(double geometricError, double distance) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ViewState</type>
      <name>create</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewState.html</anchorfile>
      <anchor>a7d5693a8042bec7f304fc2f986466511</anchor>
      <arglist>(const glm::dvec3 &amp;position, const glm::dvec3 &amp;direction, const glm::dvec3 &amp;up, const glm::dvec2 &amp;viewportSize, double horizontalFieldOfView, double verticalFieldOfView, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Cesium3DTilesSelection::ViewUpdateResult</name>
    <filename>classCesium3DTilesSelection_1_1ViewUpdateResult.html</filename>
    <member kind="variable">
      <type>std::vector&lt; Tile * &gt;</type>
      <name>tilesToRenderThisFrame</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>a559f3cf20932e08a4948017e942520eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_set&lt; Tile * &gt;</type>
      <name>tilesFadingOut</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>ae002a3c6fced040d439c1e95b0b72893</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>workerThreadTileLoadQueueLength</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>a3e410071b541b39235cdf222ad209e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>mainThreadTileLoadQueueLength</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>a19f7f1237160497b197e122c9e13d1ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>tilesVisited</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>a17bfe183271ae84700da14366fac1cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>culledTilesVisited</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>aa451fed417afa0b369194f0c015d880f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>tilesCulled</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>a73943f7181658e30f4a109ad0ea04bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>tilesOccluded</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>a992a3f450230dc7f894f0cb68efd6f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>tilesWaitingForOcclusionResults</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>ac4b73e714da15e5f3b754122b7f5c77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>tilesKicked</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>ae2f621a3061628ee45127bef9af5a704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>maxDepthVisited</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>a61ef07d65aa09f978d6a095a1a5ea8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>frameNumber</name>
      <anchorfile>classCesium3DTilesSelection_1_1ViewUpdateResult.html</anchorfile>
      <anchor>ad0fa22d808d62e50da9333bbc355d30b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::WebMapServiceRasterOverlay</name>
    <filename>classCesiumRasterOverlays_1_1WebMapServiceRasterOverlay.html</filename>
    <base>CesiumRasterOverlays::RasterOverlay</base>
    <member kind="function">
      <type></type>
      <name>WebMapServiceRasterOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1WebMapServiceRasterOverlay.html</anchorfile>
      <anchor>af9fafc85bb55331ad0ac6ff0f7c1cc8d</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;url, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;headers={}, const WebMapServiceRasterOverlayOptions &amp;wmsOptions={}, const RasterOverlayOptions &amp;overlayOptions={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CesiumAsync::Future&lt; CreateTileProviderResult &gt;</type>
      <name>createTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1WebMapServiceRasterOverlay.html</anchorfile>
      <anchor>a9c532993f4a53d0bcbd18fef9bd69ebc</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumUtility::CreditSystem &gt; &amp;pCreditSystem, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; pOwner) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::WebMapServiceRasterOverlayOptions</name>
    <filename>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a013cb2bb02ef42877f27f5e4188cdff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>layers</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a32c07988db88324bafeb24b1dd9f823d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>format</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a0c916e3115a621f149b820c93a12a3fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>credit</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>adbd6443bd140399c783b1931eff6a564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>minimumLevel</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>abf7a6893f7788980ba2bcb2b62c9faa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>maximumLevel</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a2ed7aa4c311b2e13f7af1e847fcc2090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>tileWidth</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a95370781970bd2eb904c26aa1df224d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>tileHeight</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a27cf1286695190ab488c3ff775c6ba78</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumRasterOverlays::WebMapTileServiceRasterOverlay</name>
    <filename>classCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlay.html</filename>
    <base>CesiumRasterOverlays::RasterOverlay</base>
    <member kind="function">
      <type></type>
      <name>WebMapTileServiceRasterOverlay</name>
      <anchorfile>classCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlay.html</anchorfile>
      <anchor>aac02358abd9c81a7f0ee1eacfebdf766</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;url, const std::vector&lt; CesiumAsync::IAssetAccessor::THeader &gt; &amp;headers={}, const WebMapTileServiceRasterOverlayOptions &amp;tmsOptions={}, const RasterOverlayOptions &amp;overlayOptions={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CesiumAsync::Future&lt; CreateTileProviderResult &gt;</type>
      <name>createTileProvider</name>
      <anchorfile>classCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlay.html</anchorfile>
      <anchor>a640da47236a7b9c7e17ce728187f4980</anchor>
      <arglist>(const CesiumAsync::AsyncSystem &amp;asyncSystem, const std::shared_ptr&lt; CesiumAsync::IAssetAccessor &gt; &amp;pAssetAccessor, const std::shared_ptr&lt; CesiumUtility::CreditSystem &gt; &amp;pCreditSystem, const std::shared_ptr&lt; IPrepareRasterOverlayRendererResources &gt; &amp;pPrepareRendererResources, const std::shared_ptr&lt; spdlog::logger &gt; &amp;pLogger, CesiumUtility::IntrusivePointer&lt; const RasterOverlay &gt; pOwner) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumRasterOverlays::WebMapTileServiceRasterOverlayOptions</name>
    <filename>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</filename>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>format</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a13d2d02a160681432244b32fec64e0fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>subdomains</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a447fc9b17b2d7ccee3bab40120996a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::string &gt;</type>
      <name>credit</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a4e456a0cb6f4c71eb5a708bc5e59b5dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>layer</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>ac440c8f4a2a66d87c0f2d68b6ca88ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>style</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>aef799c9c716bf1bcff000f2244a78944</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>tileMatrixSetID</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>ae4c885fce2d51b6e184e0584b5d96b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>tileMatrixLabels</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a41f37190a24c094e90525fa0502eaa12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>minimumLevel</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a0ad7d42fae2c9c4bd311670207232e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>maximumLevel</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a6fbb7ac99ed8045c6ebd5380113de637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGeometry::Rectangle &gt;</type>
      <name>coverageRectangle</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a6225100451d6f89435e430b9c8de67c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGeospatial::Projection &gt;</type>
      <name>projection</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a39d5a952f7b53f1d0b3b0c4bb97fac7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; CesiumGeometry::QuadtreeTilingScheme &gt;</type>
      <name>tilingScheme</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>af9e1a00030106784f0e0480ff242897f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>dimensions</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>add3d1b6aa48a4958d4d160fbcdabd3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>tileWidth</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>a5bcfe9bfa1c0db2242fe3043c0ae7d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; uint32_t &gt;</type>
      <name>tileHeight</name>
      <anchorfile>structCesiumRasterOverlays_1_1WebMapTileServiceRasterOverlayOptions.html</anchorfile>
      <anchor>ae4d940fb0613457ec59b597df3ff9c61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CesiumGeospatial::WebMercatorProjection</name>
    <filename>classCesiumGeospatial_1_1WebMercatorProjection.html</filename>
    <member kind="function">
      <type></type>
      <name>WebMercatorProjection</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a4c076c5481aed44377031385c26d2ccb</anchor>
      <arglist>(const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function">
      <type>const Ellipsoid &amp;</type>
      <name>getEllipsoid</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a2407d9f7efd8b7671b4ba2be9b81e966</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>project</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>af3ea24bd18fd847ef761721974bce2d8</anchor>
      <arglist>(const Cartographic &amp;cartographic) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeometry::Rectangle</type>
      <name>project</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a282bb00b33a9c923c6c19aa1f3bb841a</anchor>
      <arglist>(const CesiumGeospatial::GlobeRectangle &amp;rectangle) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Cartographic</type>
      <name>unproject</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>acc9770459b1e4e71cc81e51552067a46</anchor>
      <arglist>(const glm::dvec2 &amp;projectedCoordinates) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Cartographic</type>
      <name>unproject</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a8af802bd48006984f8aed6840c158d63</anchor>
      <arglist>(const glm::dvec3 &amp;projectedCoordinates) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeospatial::GlobeRectangle</type>
      <name>unproject</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a198bd41d27a1b2f24f11783012af88ed</anchor>
      <arglist>(const CesiumGeometry::Rectangle &amp;rectangle) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a0734efe6bc106c719e9e99bb68f07ca9</anchor>
      <arglist>(const WebMercatorProjection &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>ad457f3d4ffe4aa271950c05054ad06c2</anchor>
      <arglist>(const WebMercatorProjection &amp;rhs) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr CesiumGeometry::Rectangle</type>
      <name>computeMaximumProjectedRectangle</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a900440c9e061edffcad81cd132a24a42</anchor>
      <arglist>(const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>mercatorAngleToGeodeticLatitude</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>ad60a65661b9801b2e1e55743065ea98c</anchor>
      <arglist>(double mercatorAngle) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>geodeticLatitudeToMercatorAngle</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a74871e015f64665f368b30c26d1c7b01</anchor>
      <arglist>(double latitude) noexcept</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>MAXIMUM_LATITUDE</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a9eadcd7693233b65a0936203acb1a8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const GlobeRectangle</type>
      <name>MAXIMUM_GLOBE_RECTANGLE</name>
      <anchorfile>classCesiumGeospatial_1_1WebMercatorProjection.html</anchorfile>
      <anchor>a16d2bb34be35dd429557c0ad637e7811</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Sampler::WrapS</name>
    <filename>structCesiumGltf_1_1Sampler_1_1WrapS.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>CLAMP_TO_EDGE</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1WrapS.html</anchorfile>
      <anchor>ac5d880e40e8d6dd39ceac40aa4bd2567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>MIRRORED_REPEAT</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1WrapS.html</anchorfile>
      <anchor>a5de01d0d49cfc60a34d75d4393fab95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>REPEAT</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1WrapS.html</anchorfile>
      <anchor>a7d3100087c3031b72db5b2f55aca724f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CesiumGltf::Sampler::WrapT</name>
    <filename>structCesiumGltf_1_1Sampler_1_1WrapT.html</filename>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>CLAMP_TO_EDGE</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1WrapT.html</anchorfile>
      <anchor>a1b4613cbab164dda359fad685b73e74b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>MIRRORED_REPEAT</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1WrapT.html</anchorfile>
      <anchor>a06c08ab220e9cda7512441f8544812b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32_t</type>
      <name>REPEAT</name>
      <anchorfile>structCesiumGltf_1_1Sampler_1_1WrapT.html</anchorfile>
      <anchor>ad333e38558e0d985e17f40236f966cd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Cesium3DTiles</name>
    <filename>namespaceCesium3DTiles.html</filename>
    <class kind="struct">Cesium3DTiles::Asset</class>
    <class kind="struct">Cesium3DTiles::Availability</class>
    <class kind="struct">Cesium3DTiles::BoundingVolume</class>
    <class kind="struct">Cesium3DTiles::Buffer</class>
    <class kind="struct">Cesium3DTiles::BufferCesium</class>
    <class kind="struct">Cesium3DTiles::BufferSpec</class>
    <class kind="struct">Cesium3DTiles::BufferView</class>
    <class kind="struct">Cesium3DTiles::Class</class>
    <class kind="struct">Cesium3DTiles::ClassProperty</class>
    <class kind="struct">Cesium3DTiles::ClassStatistics</class>
    <class kind="struct">Cesium3DTiles::Content</class>
    <class kind="struct">Cesium3DTiles::Enum</class>
    <class kind="struct">Cesium3DTiles::EnumValue</class>
    <class kind="struct">Cesium3DTiles::Extension3dTilesBoundingVolumeS2</class>
    <class kind="struct">Cesium3DTiles::FoundMetadataProperty</class>
    <class kind="struct">Cesium3DTiles::GroupMetadata</class>
    <class kind="struct">Cesium3DTiles::ImplicitTiling</class>
    <class kind="struct">Cesium3DTiles::MetadataEntity</class>
    <class kind="class">Cesium3DTiles::MetadataQuery</class>
    <class kind="struct">Cesium3DTiles::Properties</class>
    <class kind="struct">Cesium3DTiles::PropertyStatistics</class>
    <class kind="struct">Cesium3DTiles::PropertyTable</class>
    <class kind="struct">Cesium3DTiles::PropertyTableProperty</class>
    <class kind="struct">Cesium3DTiles::Schema</class>
    <class kind="struct">Cesium3DTiles::Statistics</class>
    <class kind="struct">Cesium3DTiles::Subtree</class>
    <class kind="struct">Cesium3DTiles::Subtrees</class>
    <class kind="struct">Cesium3DTiles::Tile</class>
    <class kind="struct">Cesium3DTiles::Tileset</class>
  </compound>
  <compound kind="namespace">
    <name>Cesium3DTilesContent</name>
    <filename>namespaceCesium3DTilesContent.html</filename>
    <class kind="struct">Cesium3DTilesContent::AssetFetcher</class>
    <class kind="struct">Cesium3DTilesContent::AssetFetcherResult</class>
    <class kind="struct">Cesium3DTilesContent::B3dmToGltfConverter</class>
    <class kind="struct">Cesium3DTilesContent::BinaryToGltfConverter</class>
    <class kind="struct">Cesium3DTilesContent::CmptToGltfConverter</class>
    <class kind="struct">Cesium3DTilesContent::GltfConverterResult</class>
    <class kind="class">Cesium3DTilesContent::GltfConverters</class>
    <class kind="struct">Cesium3DTilesContent::I3dmToGltfConverter</class>
    <class kind="class">Cesium3DTilesContent::ImplicitTilingUtilities</class>
    <class kind="class">Cesium3DTilesContent::OctreeChildren</class>
    <class kind="struct">Cesium3DTilesContent::PntsToGltfConverter</class>
    <class kind="class">Cesium3DTilesContent::QuadtreeChildren</class>
    <class kind="class">Cesium3DTilesContent::SubtreeAvailability</class>
    <class kind="class">Cesium3DTilesContent::TileBoundingVolumes</class>
    <class kind="class">Cesium3DTilesContent::TileTransform</class>
    <member kind="enumeration">
      <type></type>
      <name>ImplicitTileSubdivisionScheme</name>
      <anchorfile>namespaceCesium3DTilesContent.html</anchorfile>
      <anchor>ac1ef2013cd0caf48b1a646f53ebed09f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesium3DTilesContent.html" anchor="ac1ef2013cd0caf48b1a646f53ebed09fa8e6f7d3b496a97598c5ca839036d4e69">Quadtree</enumvalue>
      <enumvalue file="namespaceCesium3DTilesContent.html" anchor="ac1ef2013cd0caf48b1a646f53ebed09fa3d33fe96c4d284d37a6ee296db5e33ac">Octree</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAllTileContentTypes</name>
      <anchorfile>namespaceCesium3DTilesContent.html</anchorfile>
      <anchor>afc6300abbb126f48cd6401d06d5c1142</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Cesium3DTilesReader</name>
    <filename>namespaceCesium3DTilesReader.html</filename>
    <class kind="class">Cesium3DTilesReader::AssetReader</class>
    <class kind="class">Cesium3DTilesReader::AvailabilityReader</class>
    <class kind="class">Cesium3DTilesReader::BoundingVolumeReader</class>
    <class kind="class">Cesium3DTilesReader::BufferReader</class>
    <class kind="class">Cesium3DTilesReader::BufferViewReader</class>
    <class kind="class">Cesium3DTilesReader::ClassPropertyReader</class>
    <class kind="class">Cesium3DTilesReader::ClassReader</class>
    <class kind="class">Cesium3DTilesReader::ClassStatisticsReader</class>
    <class kind="class">Cesium3DTilesReader::ContentReader</class>
    <class kind="class">Cesium3DTilesReader::EnumReader</class>
    <class kind="class">Cesium3DTilesReader::EnumValueReader</class>
    <class kind="class">Cesium3DTilesReader::Extension3dTilesBoundingVolumeS2Reader</class>
    <class kind="class">Cesium3DTilesReader::GroupMetadataReader</class>
    <class kind="class">Cesium3DTilesReader::ImplicitTilingReader</class>
    <class kind="class">Cesium3DTilesReader::MetadataEntityReader</class>
    <class kind="class">Cesium3DTilesReader::PropertiesReader</class>
    <class kind="class">Cesium3DTilesReader::PropertyStatisticsReader</class>
    <class kind="class">Cesium3DTilesReader::PropertyTablePropertyReader</class>
    <class kind="class">Cesium3DTilesReader::PropertyTableReader</class>
    <class kind="class">Cesium3DTilesReader::SchemaReader</class>
    <class kind="class">Cesium3DTilesReader::StatisticsReader</class>
    <class kind="class">Cesium3DTilesReader::SubtreeFileReader</class>
    <class kind="class">Cesium3DTilesReader::SubtreeReader</class>
    <class kind="class">Cesium3DTilesReader::SubtreesReader</class>
    <class kind="class">Cesium3DTilesReader::TileReader</class>
    <class kind="class">Cesium3DTilesReader::TilesetReader</class>
  </compound>
  <compound kind="namespace">
    <name>Cesium3DTilesSelection</name>
    <filename>namespaceCesium3DTilesSelection.html</filename>
    <class kind="struct">Cesium3DTilesSelection::CullingVolume</class>
    <class kind="class">Cesium3DTilesSelection::DebugTileStateDatabase</class>
    <class kind="class">Cesium3DTilesSelection::EllipsoidTilesetLoader</class>
    <class kind="struct">Cesium3DTilesSelection::FogDensityAtHeight</class>
    <class kind="class">Cesium3DTilesSelection::IPrepareRendererResources</class>
    <class kind="class">Cesium3DTilesSelection::ITileExcluder</class>
    <class kind="class">Cesium3DTilesSelection::ITilesetHeightSampler</class>
    <class kind="class">Cesium3DTilesSelection::RasterizedPolygonsTileExcluder</class>
    <class kind="class">Cesium3DTilesSelection::RasterMappedTo3DTile</class>
    <class kind="class">Cesium3DTilesSelection::RasterOverlayCollection</class>
    <class kind="struct">Cesium3DTilesSelection::SampleHeightResult</class>
    <class kind="class">Cesium3DTilesSelection::Tile</class>
    <class kind="struct">Cesium3DTilesSelection::TileChildrenResult</class>
    <class kind="class">Cesium3DTilesSelection::TileContent</class>
    <class kind="struct">Cesium3DTilesSelection::TileEmptyContent</class>
    <class kind="struct">Cesium3DTilesSelection::TileExternalContent</class>
    <class kind="struct">Cesium3DTilesSelection::TileIdUtilities</class>
    <class kind="struct">Cesium3DTilesSelection::TileLoadInput</class>
    <class kind="struct">Cesium3DTilesSelection::TileLoadResult</class>
    <class kind="struct">Cesium3DTilesSelection::TileLoadResultAndRenderResources</class>
    <class kind="class">Cesium3DTilesSelection::TileOcclusionRendererProxy</class>
    <class kind="class">Cesium3DTilesSelection::TileOcclusionRendererProxyPool</class>
    <class kind="class">Cesium3DTilesSelection::TileRenderContent</class>
    <class kind="class">Cesium3DTilesSelection::TileSelectionState</class>
    <class kind="class">Cesium3DTilesSelection::Tileset</class>
    <class kind="class">Cesium3DTilesSelection::TilesetContentLoader</class>
    <class kind="struct">Cesium3DTilesSelection::TilesetContentOptions</class>
    <class kind="class">Cesium3DTilesSelection::TilesetExternals</class>
    <class kind="class">Cesium3DTilesSelection::TilesetLoadFailureDetails</class>
    <class kind="class">Cesium3DTilesSelection::TilesetMetadata</class>
    <class kind="struct">Cesium3DTilesSelection::TilesetOptions</class>
    <class kind="class">Cesium3DTilesSelection::TilesetSharedAssetSystem</class>
    <class kind="struct">Cesium3DTilesSelection::TileUnknownContent</class>
    <class kind="class">Cesium3DTilesSelection::ViewState</class>
    <class kind="class">Cesium3DTilesSelection::ViewUpdateResult</class>
    <member kind="typedef">
      <type>std::variant&lt; CesiumGeometry::BoundingSphere, CesiumGeometry::OrientedBoundingBox, CesiumGeospatial::BoundingRegion, CesiumGeospatial::BoundingRegionWithLooseFittingHeights, CesiumGeospatial::S2CellBoundingVolume &gt;</type>
      <name>BoundingVolume</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a228c926562a409d1d479124222072b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; std::string, CesiumGeometry::QuadtreeTileID, CesiumGeometry::OctreeTileID, CesiumGeometry::UpsampledQuadtreeNode &gt;</type>
      <name>TileID</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a57737ff9757badbddc1cde19325a13ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; TileUnknownContent, TileEmptyContent, TileExternalContent, CesiumGltf::Model &gt;</type>
      <name>TileContentKind</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a4a8e9640480dc97338b6feccd89f5235</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TileLoadState</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a0b6cdb3ba0d37c1791f1dcd7c663fbdc</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a0b6cdb3ba0d37c1791f1dcd7c663fbdca62168dff2fc801c4ff6ee24619bc314c">Unloading</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a0b6cdb3ba0d37c1791f1dcd7c663fbdca6d38ef8b3b8e2855bd1f4f4da5426af3">FailedTemporarily</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a0b6cdb3ba0d37c1791f1dcd7c663fbdcaa5ae20aa7fda5bd38bf0dce98e65bd2d">Unloaded</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a0b6cdb3ba0d37c1791f1dcd7c663fbdca64ea8098af15d0da95da70c87cef413a">ContentLoading</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a0b6cdb3ba0d37c1791f1dcd7c663fbdca4affc6ad12297c33666d7683a0c1e969">ContentLoaded</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a0b6cdb3ba0d37c1791f1dcd7c663fbdcaf92965e2c8a7afb3c1b9a5c09a263636">Done</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a0b6cdb3ba0d37c1791f1dcd7c663fbdcad7c8c85bf79bbe1b7188497c32c3b0ca">Failed</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TileLoadResultState</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>ac94b5163d0a68238442e435c718424ba</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="ac94b5163d0a68238442e435c718424baa505a83f220c02df2f85c3810cd9ceb38">Success</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="ac94b5163d0a68238442e435c718424baad7c8c85bf79bbe1b7188497c32c3b0ca">Failed</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="ac94b5163d0a68238442e435c718424baa7f5482e1f09386b07ff5a0628c894c53">RetryLater</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TileOcclusionState</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>adf3e5b264cf0d9a63c6ce1643f61020e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="adf3e5b264cf0d9a63c6ce1643f61020ea4bb3e14131688948d6ac100d0ead74ca">OcclusionUnavailable</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="adf3e5b264cf0d9a63c6ce1643f61020eaea08b0fca9e64bf979f3e2ea0477eaa1">NotOccluded</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="adf3e5b264cf0d9a63c6ce1643f61020ea40deec4b6f036b28681fc864b1e31de3">Occluded</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TileRefine</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a3a910fb397852e671fc93bfa8effddf7</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a3a910fb397852e671fc93bfa8effddf7aec211f7c20af43e742bf2570c3cb84f9">Add</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a3a910fb397852e671fc93bfa8effddf7a0ebe6df8a3ac338e0512acc741823fdb">Replace</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TilesetLoadType</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a21c213a52e07982820eb79d5c64c7d20</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a21c213a52e07982820eb79d5c64c7d20a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a21c213a52e07982820eb79d5c64c7d20a5e650355f6ea3f20a1b172b4f0cfe0c7">CesiumIon</enumvalue>
      <enumvalue file="namespaceCesium3DTilesSelection.html" anchor="a21c213a52e07982820eb79d5c64c7d20a680cbbfd7ef38758c3f1c841dbf6e19a">TilesetJson</enumvalue>
    </member>
    <member kind="function">
      <type>BoundingVolume</type>
      <name>transformBoundingVolume</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>aaae53af464874811f17661414e231fb3</anchor>
      <arglist>(const glm::dmat4x4 &amp;transform, const BoundingVolume &amp;boundingVolume)</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>getBoundingVolumeCenter</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>aaa050cf6bc456aab30747202e60d20fe</anchor>
      <arglist>(const BoundingVolume &amp;boundingVolume)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CesiumGeospatial::GlobeRectangle &gt;</type>
      <name>estimateGlobeRectangle</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a35ebceea1428584577281b236b407651</anchor>
      <arglist>(const BoundingVolume &amp;boundingVolume, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>const CesiumGeospatial::BoundingRegion *</type>
      <name>getBoundingRegionFromBoundingVolume</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a28184683458f6ba8720bb333a2613ca2</anchor>
      <arglist>(const BoundingVolume &amp;boundingVolume)</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeometry::OrientedBoundingBox</type>
      <name>getOrientedBoundingBoxFromBoundingVolume</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a0dbb28bd96c3f1bd3825bacce56f4ebd</anchor>
      <arglist>(const BoundingVolume &amp;boundingVolume, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>CullingVolume</type>
      <name>createCullingVolume</name>
      <anchorfile>namespaceCesium3DTilesSelection.html</anchorfile>
      <anchor>a44dac9dbc570434df6ca0f6084e0339a</anchor>
      <arglist>(const glm::dvec3 &amp;position, const glm::dvec3 &amp;direction, const glm::dvec3 &amp;up, double fovx, double fovy) noexcept</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Cesium3DTilesWriter</name>
    <filename>namespaceCesium3DTilesWriter.html</filename>
    <class kind="class">Cesium3DTilesWriter::SchemaWriter</class>
    <class kind="struct">Cesium3DTilesWriter::SchemaWriterOptions</class>
    <class kind="struct">Cesium3DTilesWriter::SchemaWriterResult</class>
    <class kind="class">Cesium3DTilesWriter::SubtreeWriter</class>
    <class kind="struct">Cesium3DTilesWriter::SubtreeWriterOptions</class>
    <class kind="struct">Cesium3DTilesWriter::SubtreeWriterResult</class>
    <class kind="class">Cesium3DTilesWriter::TilesetWriter</class>
    <class kind="struct">Cesium3DTilesWriter::TilesetWriterOptions</class>
    <class kind="struct">Cesium3DTilesWriter::TilesetWriterResult</class>
  </compound>
  <compound kind="namespace">
    <name>CesiumAsync</name>
    <filename>namespaceCesiumAsync.html</filename>
    <class kind="class">CesiumAsync::AsyncSystem</class>
    <class kind="class">CesiumAsync::CacheItem</class>
    <class kind="class">CesiumAsync::CacheRequest</class>
    <class kind="class">CesiumAsync::CacheResponse</class>
    <class kind="class">CesiumAsync::CachingAssetAccessor</class>
    <class kind="struct">CesiumAsync::CaseInsensitiveCompare</class>
    <class kind="struct">CesiumAsync::DeleteSqliteConnection</class>
    <class kind="struct">CesiumAsync::DeleteSqliteStatement</class>
    <class kind="class">CesiumAsync::Future</class>
    <class kind="class">CesiumAsync::GunzipAssetAccessor</class>
    <class kind="class">CesiumAsync::IAssetAccessor</class>
    <class kind="class">CesiumAsync::IAssetRequest</class>
    <class kind="class">CesiumAsync::IAssetResponse</class>
    <class kind="class">CesiumAsync::ICacheDatabase</class>
    <class kind="class">CesiumAsync::ITaskProcessor</class>
    <class kind="struct">CesiumAsync::NetworkAssetDescriptor</class>
    <class kind="class">CesiumAsync::Promise</class>
    <class kind="class">CesiumAsync::Promise&lt; void &gt;</class>
    <class kind="class">CesiumAsync::SharedAssetDepot</class>
    <class kind="class">CesiumAsync::SharedFuture</class>
    <class kind="class">CesiumAsync::SqliteCache</class>
    <class kind="struct">CesiumAsync::SqliteHelper</class>
    <class kind="class">CesiumAsync::ThreadPool</class>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string, CaseInsensitiveCompare &gt;</type>
      <name>HttpHeaders</name>
      <anchorfile>namespaceCesiumAsync.html</anchorfile>
      <anchor>a10e282337243a53a9a90ce490fe1fe36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unique_ptr&lt; CESIUM_SQLITE(sqlite3), DeleteSqliteConnection &gt;</type>
      <name>SqliteConnectionPtr</name>
      <anchorfile>namespaceCesiumAsync.html</anchorfile>
      <anchor>a11ad6c192c7e1f2b1d07d2f100520f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unique_ptr&lt; CESIUM_SQLITE(sqlite3_stmt), DeleteSqliteStatement &gt;</type>
      <name>SqliteStatementPtr</name>
      <anchorfile>namespaceCesiumAsync.html</anchorfile>
      <anchor>aedc89f93d7da4714826348471dc2ee59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CesiumGeometry</name>
    <filename>namespaceCesiumGeometry.html</filename>
    <class kind="class">CesiumGeometry::AvailabilityAccessor</class>
    <class kind="struct">CesiumGeometry::AvailabilityNode</class>
    <class kind="struct">CesiumGeometry::AvailabilitySubtree</class>
    <class kind="struct">CesiumGeometry::AvailabilityTree</class>
    <class kind="struct">CesiumGeometry::AxisAlignedBox</class>
    <class kind="class">CesiumGeometry::BoundingSphere</class>
    <class kind="struct">CesiumGeometry::ConstantAvailability</class>
    <class kind="struct">CesiumGeometry::InterpolatedVertex</class>
    <class kind="class">CesiumGeometry::IntersectionTests</class>
    <class kind="class">CesiumGeometry::OctreeAvailability</class>
    <class kind="struct">CesiumGeometry::OctreeTileID</class>
    <class kind="class">CesiumGeometry::OctreeTilingScheme</class>
    <class kind="class">CesiumGeometry::OrientedBoundingBox</class>
    <class kind="class">CesiumGeometry::Plane</class>
    <class kind="class">CesiumGeometry::QuadtreeAvailability</class>
    <class kind="class">CesiumGeometry::QuadtreeRectangleAvailability</class>
    <class kind="struct">CesiumGeometry::QuadtreeTileID</class>
    <class kind="struct">CesiumGeometry::QuadtreeTileRectangularRange</class>
    <class kind="class">CesiumGeometry::QuadtreeTilingScheme</class>
    <class kind="class">CesiumGeometry::Ray</class>
    <class kind="struct">CesiumGeometry::Rectangle</class>
    <class kind="struct">CesiumGeometry::SubtreeBufferView</class>
    <class kind="struct">CesiumGeometry::Transforms</class>
    <class kind="struct">CesiumGeometry::UpsampledQuadtreeNode</class>
    <member kind="typedef">
      <type>std::variant&lt; ConstantAvailability, SubtreeBufferView &gt;</type>
      <name>AvailabilityView</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a727136fd8482603b070477346f9e19b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; int, InterpolatedVertex &gt;</type>
      <name>TriangleClipVertex</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a56c5709ec89fc58d1ec9fffebaf241ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Axis</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>abf23f5e5d529857b458b3247c9125cf6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGeometry.html" anchor="abf23f5e5d529857b458b3247c9125cf6a02129bb861061d1a052c592e2dc6b383">X</enumvalue>
      <enumvalue file="namespaceCesiumGeometry.html" anchor="abf23f5e5d529857b458b3247c9125cf6a57cec4137b614c87cb4e24a3d003a3e0">Y</enumvalue>
      <enumvalue file="namespaceCesiumGeometry.html" anchor="abf23f5e5d529857b458b3247c9125cf6a21c2e59531c8710156d34a3c30ac81d5">Z</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CullingResult</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a51997e0ff427351dc58e293fb578eded</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGeometry.html" anchor="a51997e0ff427351dc58e293fb578ededa76fbf0ccd7fcd64879c2ff2119dc15a4">Outside</enumvalue>
      <enumvalue file="namespaceCesiumGeometry.html" anchor="a51997e0ff427351dc58e293fb578ededae2e969432869ed6806cf6eb86082820e">Intersecting</enumvalue>
      <enumvalue file="namespaceCesiumGeometry.html" anchor="a51997e0ff427351dc58e293fb578ededa9b6d3000134648fc9f1e71094ae0847d">Inside</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TileAvailabilityFlags</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a6ddc4173bc67ec1232e0e7bc030e3ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TILE_AVAILABLE</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a6ddc4173bc67ec1232e0e7bc030e3ff5a7dcd96925b075d81e9ba95fc1070583a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTENT_AVAILABLE</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a6ddc4173bc67ec1232e0e7bc030e3ff5ab4af4c754aa70941c7a05042aca7cbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBTREE_AVAILABLE</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a6ddc4173bc67ec1232e0e7bc030e3ff5a6f915e4e7530aa7dfbda7a23f306024b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBTREE_LOADED</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a6ddc4173bc67ec1232e0e7bc030e3ff5a10e8b304fc98f2bb9b7a0345b11182a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REACHABLE</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a6ddc4173bc67ec1232e0e7bc030e3ff5a14900f0a810a5b88da0c1b3bc07b71e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clipTriangleAtAxisAlignedThreshold</name>
      <anchorfile>namespaceCesiumGeometry.html</anchorfile>
      <anchor>a6c5ef9f18fc66a8f2525d15186a4dd8d</anchor>
      <arglist>(double threshold, bool keepAbove, int i0, int i1, int i2, double u0, double u1, double u2, std::vector&lt; TriangleClipVertex &gt; &amp;result) noexcept</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CesiumGeospatial</name>
    <filename>namespaceCesiumGeospatial.html</filename>
    <class kind="class">CesiumGeospatial::BoundingRegion</class>
    <class kind="class">CesiumGeospatial::BoundingRegionBuilder</class>
    <class kind="class">CesiumGeospatial::BoundingRegionWithLooseFittingHeights</class>
    <class kind="class">CesiumGeospatial::Cartographic</class>
    <class kind="class">CesiumGeospatial::CartographicPolygon</class>
    <class kind="class">CesiumGeospatial::EarthGravitationalModel1996Grid</class>
    <class kind="class">CesiumGeospatial::Ellipsoid</class>
    <class kind="class">CesiumGeospatial::EllipsoidTangentPlane</class>
    <class kind="class">CesiumGeospatial::GeographicProjection</class>
    <class kind="class">CesiumGeospatial::GlobeAnchor</class>
    <class kind="class">CesiumGeospatial::GlobeRectangle</class>
    <class kind="class">CesiumGeospatial::GlobeTransforms</class>
    <class kind="class">CesiumGeospatial::LocalHorizontalCoordinateSystem</class>
    <class kind="class">CesiumGeospatial::S2CellBoundingVolume</class>
    <class kind="class">CesiumGeospatial::S2CellID</class>
    <class kind="class">CesiumGeospatial::SimplePlanarEllipsoidCurve</class>
    <class kind="class">CesiumGeospatial::WebMercatorProjection</class>
    <member kind="typedef">
      <type>std::variant&lt; GeographicProjection, WebMercatorProjection &gt;</type>
      <name>Projection</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>ac3715aa289c0dcb5cf3f65131b728429</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LocalDirection</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>a06dd7a755ce52387f7c4f4e94cb155f8</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGeospatial.html" anchor="a06dd7a755ce52387f7c4f4e94cb155f8aa99dc62d017d04cf67266593f9c3761e">East</enumvalue>
      <enumvalue file="namespaceCesiumGeospatial.html" anchor="a06dd7a755ce52387f7c4f4e94cb155f8a601560b94fbb188919dd1d36c8ab70a4">North</enumvalue>
      <enumvalue file="namespaceCesiumGeospatial.html" anchor="a06dd7a755ce52387f7c4f4e94cb155f8abf495fc048d8d44b7f32536df5cf3930">West</enumvalue>
      <enumvalue file="namespaceCesiumGeospatial.html" anchor="a06dd7a755ce52387f7c4f4e94cb155f8a263d7b2cf53802c9ed127b718c0bf9fd">South</enumvalue>
      <enumvalue file="namespaceCesiumGeospatial.html" anchor="a06dd7a755ce52387f7c4f4e94cb155f8a258f49887ef8d14ac268c92b02503aaa">Up</enumvalue>
      <enumvalue file="namespaceCesiumGeospatial.html" anchor="a06dd7a755ce52387f7c4f4e94cb155f8a08a38277b0309070706f6652eeae9a53">Down</enumvalue>
    </member>
    <member kind="function">
      <type>double</type>
      <name>calcQuadtreeMaxGeometricError</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>a34039065743ec9df019f0ccf63867fdf</anchor>
      <arglist>(const CesiumGeospatial::Ellipsoid &amp;ellipsoid) noexcept</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec3</type>
      <name>projectPosition</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>a28fbb725b967c761659828a54af110bd</anchor>
      <arglist>(const Projection &amp;projection, const Cartographic &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>Cartographic</type>
      <name>unprojectPosition</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>a4c476b700ea5ce0ac3cee6f65e59d483</anchor>
      <arglist>(const Projection &amp;projection, const glm::dvec3 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeometry::Rectangle</type>
      <name>projectRectangleSimple</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>a32588d6604b4c9fe27c5694055b89c12</anchor>
      <arglist>(const Projection &amp;projection, const GlobeRectangle &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>GlobeRectangle</type>
      <name>unprojectRectangleSimple</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>accb7f4d4477dbde906b72fb7529bfc59</anchor>
      <arglist>(const Projection &amp;projection, const CesiumGeometry::Rectangle &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>CesiumGeometry::AxisAlignedBox</type>
      <name>projectRegionSimple</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>ab5e86d7d4e359ec284fadd435e1d1d92</anchor>
      <arglist>(const Projection &amp;projection, const BoundingRegion &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>BoundingRegion</type>
      <name>unprojectRegionSimple</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>a1fcbadfc34f71a685d67d0911aa4ce74</anchor>
      <arglist>(const Projection &amp;projection, const CesiumGeometry::AxisAlignedBox &amp;box, const CesiumGeospatial::Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>glm::dvec2</type>
      <name>computeProjectedRectangleSize</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>aacbf9daab2928be0b97aeedac48dc01e</anchor>
      <arglist>(const Projection &amp;projection, const CesiumGeometry::Rectangle &amp;rectangle, double maxHeight, const Ellipsoid &amp;ellipsoid=CesiumGeospatial::Ellipsoid::WGS84)</arglist>
    </member>
    <member kind="function">
      <type>const Ellipsoid &amp;</type>
      <name>getProjectionEllipsoid</name>
      <anchorfile>namespaceCesiumGeospatial.html</anchorfile>
      <anchor>a7e9bd19070bf428c9518aac409318dca</anchor>
      <arglist>(const Projection &amp;projection)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CesiumGltf</name>
    <filename>namespaceCesiumGltf.html</filename>
    <class kind="struct">CesiumGltf::Accessor</class>
    <class kind="struct">CesiumGltf::AccessorSparse</class>
    <class kind="struct">CesiumGltf::AccessorSparseIndices</class>
    <class kind="struct">CesiumGltf::AccessorSparseValues</class>
    <class kind="struct">CesiumGltf::AccessorSpec</class>
    <class kind="struct">CesiumGltf::AccessorTypes</class>
    <class kind="class">CesiumGltf::AccessorView</class>
    <class kind="class">CesiumGltf::AccessorWriter</class>
    <class kind="struct">CesiumGltf::Animation</class>
    <class kind="struct">CesiumGltf::AnimationChannel</class>
    <class kind="struct">CesiumGltf::AnimationChannelTarget</class>
    <class kind="struct">CesiumGltf::AnimationSampler</class>
    <class kind="struct">CesiumGltf::Asset</class>
    <class kind="struct">CesiumGltf::Buffer</class>
    <class kind="struct">CesiumGltf::BufferCesium</class>
    <class kind="struct">CesiumGltf::BufferSpec</class>
    <class kind="struct">CesiumGltf::BufferView</class>
    <class kind="struct">CesiumGltf::Camera</class>
    <class kind="struct">CesiumGltf::CameraOrthographic</class>
    <class kind="struct">CesiumGltf::CameraPerspective</class>
    <class kind="struct">CesiumGltf::CanBeNormalized</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; glm::mat&lt; n, n, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; glm::vec&lt; n, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; int16_t &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; int32_t &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; int64_t &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; int8_t &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; PropertyArrayView&lt; T &gt; &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; uint16_t &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; uint32_t &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; uint64_t &gt;</class>
    <class kind="struct">CesiumGltf::CanBeNormalized&lt; uint8_t &gt;</class>
    <class kind="struct">CesiumGltf::Class</class>
    <class kind="struct">CesiumGltf::ClassProperty</class>
    <class kind="struct">CesiumGltf::CountFromAccessor</class>
    <class kind="struct">CesiumGltf::Enum</class>
    <class kind="struct">CesiumGltf::EnumValue</class>
    <class kind="struct">CesiumGltf::ExtensionBufferExtMeshoptCompression</class>
    <class kind="struct">CesiumGltf::ExtensionBufferViewExtMeshoptCompression</class>
    <class kind="struct">CesiumGltf::ExtensionCesiumPrimitiveOutline</class>
    <class kind="struct">CesiumGltf::ExtensionCesiumRTC</class>
    <class kind="struct">CesiumGltf::ExtensionCesiumTileEdges</class>
    <class kind="struct">CesiumGltf::ExtensionExtInstanceFeatures</class>
    <class kind="struct">CesiumGltf::ExtensionExtInstanceFeaturesFeatureId</class>
    <class kind="struct">CesiumGltf::ExtensionExtMeshFeatures</class>
    <class kind="struct">CesiumGltf::ExtensionExtMeshGpuInstancing</class>
    <class kind="struct">CesiumGltf::ExtensionExtStructuralMetadata</class>
    <class kind="struct">CesiumGltf::ExtensionKhrDracoMeshCompression</class>
    <class kind="struct">CesiumGltf::ExtensionKhrMaterialsUnlit</class>
    <class kind="struct">CesiumGltf::ExtensionKhrTextureBasisu</class>
    <class kind="struct">CesiumGltf::ExtensionKhrTextureTransform</class>
    <class kind="struct">CesiumGltf::ExtensionMeshPrimitiveExtStructuralMetadata</class>
    <class kind="struct">CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariants</class>
    <class kind="struct">CesiumGltf::ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValue</class>
    <class kind="struct">CesiumGltf::ExtensionModelExtStructuralMetadata</class>
    <class kind="struct">CesiumGltf::ExtensionModelKhrMaterialsVariants</class>
    <class kind="struct">CesiumGltf::ExtensionModelKhrMaterialsVariantsValue</class>
    <class kind="struct">CesiumGltf::ExtensionModelMaxarMeshVariants</class>
    <class kind="struct">CesiumGltf::ExtensionModelMaxarMeshVariantsValue</class>
    <class kind="struct">CesiumGltf::ExtensionNodeMaxarMeshVariants</class>
    <class kind="struct">CesiumGltf::ExtensionNodeMaxarMeshVariantsMappingsValue</class>
    <class kind="struct">CesiumGltf::ExtensionTextureWebp</class>
    <class kind="struct">CesiumGltf::FeatureId</class>
    <class kind="struct">CesiumGltf::FeatureIdFromAccessor</class>
    <class kind="struct">CesiumGltf::FeatureIdTexture</class>
    <class kind="class">CesiumGltf::FeatureIdTextureView</class>
    <class kind="struct">CesiumGltf::Image</class>
    <class kind="struct">CesiumGltf::ImageAsset</class>
    <class kind="struct">CesiumGltf::ImageAssetMipPosition</class>
    <class kind="struct">CesiumGltf::ImageSpec</class>
    <class kind="struct">CesiumGltf::IndexFromAccessor</class>
    <class kind="struct">CesiumGltf::IndicesForFaceFromAccessor</class>
    <class kind="struct">CesiumGltf::InstanceAttributeSemantics</class>
    <class kind="struct">CesiumGltf::IsMetadataArray</class>
    <class kind="struct">CesiumGltf::IsMetadataArray&lt; PropertyArrayCopy&lt; T &gt; &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataArray&lt; PropertyArrayView&lt; T &gt; &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataArray&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataBoolean</class>
    <class kind="struct">CesiumGltf::IsMetadataBoolean&lt; bool &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataBoolean&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataBooleanArray</class>
    <class kind="struct">CesiumGltf::IsMetadataBooleanArray&lt; PropertyArrayView&lt; bool &gt; &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataBooleanArray&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataFloating</class>
    <class kind="struct">CesiumGltf::IsMetadataFloating&lt; double &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataFloating&lt; float &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataFloating&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; int16_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; int32_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; int64_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; int8_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; uint16_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; uint32_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; uint64_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataInteger&lt; uint8_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataMatN</class>
    <class kind="struct">CesiumGltf::IsMetadataMatN&lt; glm::mat&lt; n, n, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataMatN&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataNumeric</class>
    <class kind="struct">CesiumGltf::IsMetadataNumeric&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataNumericArray</class>
    <class kind="struct">CesiumGltf::IsMetadataNumericArray&lt; PropertyArrayCopy&lt; T &gt; &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataNumericArray&lt; PropertyArrayView&lt; T &gt; &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataNumericArray&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; double &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; float &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; int16_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; int32_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; int64_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; int8_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; uint16_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; uint32_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; uint64_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataScalar&lt; uint8_t &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataString</class>
    <class kind="struct">CesiumGltf::IsMetadataString&lt; std::string_view &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataString&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataStringArray</class>
    <class kind="struct">CesiumGltf::IsMetadataStringArray&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataStringArray&lt; T &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataVecN</class>
    <class kind="struct">CesiumGltf::IsMetadataVecN&lt; glm::vec&lt; n, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::IsMetadataVecN&lt; T &gt;</class>
    <class kind="class">CesiumGltf::KhrTextureTransform</class>
    <class kind="struct">CesiumGltf::Ktx2TranscodeTargets</class>
    <class kind="struct">CesiumGltf::Material</class>
    <class kind="struct">CesiumGltf::MaterialNormalTextureInfo</class>
    <class kind="struct">CesiumGltf::MaterialOcclusionTextureInfo</class>
    <class kind="struct">CesiumGltf::MaterialPBRMetallicRoughness</class>
    <class kind="struct">CesiumGltf::Mesh</class>
    <class kind="struct">CesiumGltf::MeshPrimitive</class>
    <class kind="struct">CesiumGltf::MetadataArrayType</class>
    <class kind="struct">CesiumGltf::MetadataArrayType&lt; CesiumGltf::PropertyArrayCopy&lt; T &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataArrayType&lt; CesiumGltf::PropertyArrayView&lt; T &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; bool, std::string &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; bool, std::string_view &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; bool, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataScalar&lt; TFrom &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; double, bool &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; double, float &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; double, std::string &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; double, std::string_view &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; double, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TFrom &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; float, bool &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; float, double &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; float, std::string &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; float, std::string_view &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; float, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TFrom &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; std::string, bool &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; std::string, std::string_view &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; std::string, TFrom, std::enable_if_t&lt; IsMetadataScalar&lt; TFrom &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; std::string, TFrom, std::enable_if_t&lt; IsMetadataVecN&lt; TFrom &gt;::value||IsMetadataMatN&lt; TFrom &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; T, T &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, bool, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, bool, std::enable_if_t&lt; IsMetadataMatN&lt; TTo &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, bool, std::enable_if_t&lt; IsMetadataVecN&lt; TTo &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, std::string, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &amp;&amp;!std::is_signed_v&lt; TTo &gt; &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, std::string, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &amp;&amp;std::is_signed_v&lt; TTo &gt; &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, std::string_view, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataFloating&lt; TFrom &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataInteger&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataInteger&lt; TFrom &gt;::value &amp;&amp;!std::is_same_v&lt; TTo, TFrom &gt; &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataMatN&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataMatN&lt; TFrom &gt;::value &amp;&amp;!std::is_same_v&lt; TTo, TFrom &gt; &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataMatN&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataScalar&lt; TFrom &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataVecN&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataScalar&lt; TFrom &gt;::value &gt; &gt;</class>
    <class kind="struct">CesiumGltf::MetadataConversions&lt; TTo, TFrom, std::enable_if_t&lt; CesiumGltf::IsMetadataVecN&lt; TTo &gt;::value &amp;&amp;CesiumGltf::IsMetadataVecN&lt; TFrom &gt;::value &amp;&amp;!std::is_same_v&lt; TTo, TFrom &gt; &gt; &gt;</class>
    <class kind="struct">CesiumGltf::Model</class>
    <class kind="struct">CesiumGltf::ModelSpec</class>
    <class kind="struct">CesiumGltf::NamedObject</class>
    <class kind="struct">CesiumGltf::Node</class>
    <class kind="class">CesiumGltf::PropertyArrayCopy</class>
    <class kind="class">CesiumGltf::PropertyArrayView</class>
    <class kind="class">CesiumGltf::PropertyArrayView&lt; bool &gt;</class>
    <class kind="class">CesiumGltf::PropertyArrayView&lt; std::string_view &gt;</class>
    <class kind="struct">CesiumGltf::PropertyAttribute</class>
    <class kind="struct">CesiumGltf::PropertyAttributeProperty</class>
    <class kind="class">CesiumGltf::PropertyAttributePropertyView</class>
    <class kind="class">CesiumGltf::PropertyAttributePropertyView&lt; ElementType, false &gt;</class>
    <class kind="class">CesiumGltf::PropertyAttributePropertyView&lt; ElementType, true &gt;</class>
    <class kind="class">CesiumGltf::PropertyAttributePropertyViewStatus</class>
    <class kind="class">CesiumGltf::PropertyAttributeView</class>
    <class kind="struct">CesiumGltf::PropertyTable</class>
    <class kind="struct">CesiumGltf::PropertyTableProperty</class>
    <class kind="class">CesiumGltf::PropertyTablePropertyView</class>
    <class kind="class">CesiumGltf::PropertyTablePropertyView&lt; ElementType, false &gt;</class>
    <class kind="class">CesiumGltf::PropertyTablePropertyView&lt; ElementType, true &gt;</class>
    <class kind="class">CesiumGltf::PropertyTablePropertyViewStatus</class>
    <class kind="class">CesiumGltf::PropertyTableView</class>
    <class kind="struct">CesiumGltf::PropertyTexture</class>
    <class kind="struct">CesiumGltf::PropertyTextureProperty</class>
    <class kind="class">CesiumGltf::PropertyTexturePropertyView</class>
    <class kind="class">CesiumGltf::PropertyTexturePropertyView&lt; ElementType, false &gt;</class>
    <class kind="class">CesiumGltf::PropertyTexturePropertyView&lt; ElementType, true &gt;</class>
    <class kind="class">CesiumGltf::PropertyTexturePropertyViewStatus</class>
    <class kind="class">CesiumGltf::PropertyTextureView</class>
    <class kind="class">CesiumGltf::PropertyView</class>
    <class kind="class">CesiumGltf::PropertyView&lt; bool &gt;</class>
    <class kind="class">CesiumGltf::PropertyView&lt; ElementType, false &gt;</class>
    <class kind="class">CesiumGltf::PropertyView&lt; ElementType, true &gt;</class>
    <class kind="class">CesiumGltf::PropertyView&lt; PropertyArrayView&lt; bool &gt; &gt;</class>
    <class kind="class">CesiumGltf::PropertyView&lt; PropertyArrayView&lt; ElementType &gt;, false &gt;</class>
    <class kind="class">CesiumGltf::PropertyView&lt; PropertyArrayView&lt; ElementType &gt;, true &gt;</class>
    <class kind="class">CesiumGltf::PropertyView&lt; PropertyArrayView&lt; std::string_view &gt; &gt;</class>
    <class kind="class">CesiumGltf::PropertyView&lt; std::string_view &gt;</class>
    <class kind="class">CesiumGltf::PropertyViewStatus</class>
    <class kind="struct">CesiumGltf::Sampler</class>
    <class kind="struct">CesiumGltf::Scene</class>
    <class kind="struct">CesiumGltf::Schema</class>
    <class kind="struct">CesiumGltf::Skin</class>
    <class kind="struct">CesiumGltf::StatusFromAccessor</class>
    <class kind="struct">CesiumGltf::SupportedGpuCompressedPixelFormats</class>
    <class kind="struct">CesiumGltf::TexCoordFromAccessor</class>
    <class kind="struct">CesiumGltf::Texture</class>
    <class kind="struct">CesiumGltf::TextureInfo</class>
    <class kind="class">CesiumGltf::TextureView</class>
    <class kind="struct">CesiumGltf::TextureViewOptions</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; glm::mat&lt; N, N, T, Q &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; glm::vec&lt; N, T, Q &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; int16_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; int32_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; int64_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; int8_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; glm::mat&lt; N, N, T, Q &gt; &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; glm::vec&lt; N, T, Q &gt; &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; int16_t &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; int32_t &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; int64_t &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; int8_t &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; uint16_t &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; uint32_t &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; uint64_t &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; PropertyArrayView&lt; uint8_t &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; uint16_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; uint32_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; uint64_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToNormalizedType&lt; uint8_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; bool &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; double &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; float &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; glm::mat&lt; 2, 2, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; glm::mat&lt; 3, 3, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; glm::mat&lt; 4, 4, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; glm::vec&lt; 2, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; glm::vec&lt; 3, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; glm::vec&lt; 4, T, P &gt; &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; int16_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; int32_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; int64_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; int8_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; std::string_view &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; uint16_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; uint32_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; uint64_t &gt;</class>
    <class kind="struct">CesiumGltf::TypeToPropertyType&lt; uint8_t &gt;</class>
    <class kind="struct">CesiumGltf::VertexAttributeSemantics</class>
    <member kind="typedef">
      <type>AccessorView&lt; AccessorTypes::VEC3&lt; float &gt; &gt;</type>
      <name>PositionAccessorType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>ae4d7cf2b1f305d3dc0eea604ad45ea14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AccessorView&lt; AccessorTypes::VEC3&lt; float &gt; &gt;</type>
      <name>NormalAccessorType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a015639d22156a7c159151380f27bf5a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; AccessorView&lt; int8_t &gt;, AccessorView&lt; uint8_t &gt;, AccessorView&lt; int16_t &gt;, AccessorView&lt; uint16_t &gt;, AccessorView&lt; uint32_t &gt;, AccessorView&lt; float &gt; &gt;</type>
      <name>FeatureIdAccessorType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a1291101ff1b0e8624ce7be38d984bc94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; std::monostate, AccessorView&lt; uint8_t &gt;, AccessorView&lt; uint16_t &gt;, AccessorView&lt; uint32_t &gt; &gt;</type>
      <name>IndexAccessorType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a176078918ff2038313a3d46389eba9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; AccessorView&lt; AccessorTypes::VEC2&lt; uint8_t &gt; &gt;, AccessorView&lt; AccessorTypes::VEC2&lt; uint16_t &gt; &gt;, AccessorView&lt; AccessorTypes::VEC2&lt; float &gt; &gt; &gt;</type>
      <name>TexCoordAccessorType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>aca30004fffe898b2e6cfd37c35a667b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::variant&lt; AccessorView&lt; AccessorTypes::VEC4&lt; uint8_t &gt; &gt;, AccessorView&lt; AccessorTypes::VEC4&lt; int8_t &gt; &gt;, AccessorView&lt; AccessorTypes::VEC4&lt; uint16_t &gt; &gt;, AccessorView&lt; AccessorTypes::VEC4&lt; int16_t &gt; &gt;, AccessorView&lt; AccessorTypes::VEC4&lt; float &gt; &gt; &gt;</type>
      <name>QuaternionAccessorType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a1f1fa60823b168de8079be4a6fc100fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::conditional_t&lt; IsMetadataNumericArray&lt; T &gt;::value, PropertyArrayCopy&lt; typename MetadataArrayType&lt; T &gt;::type &gt;, T &gt;</type>
      <name>PropertyValueViewToCopy</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a971dcf32c4194c02e6823ca4734da068</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::conditional_t&lt; IsMetadataNumericArray&lt; T &gt;::value, PropertyArrayView&lt; typename MetadataArrayType&lt; T &gt;::type &gt;, T &gt;</type>
      <name>PropertyValueCopyToView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a5e8f7d23a4e1da81c29477ad77eb2eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int32_t</type>
      <name>PropertyViewStatusType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>af49ffa4cbf39a2012657c25e709a2ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AccessorViewStatus</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a96efebd948c6621a9a3c5f064be8f677</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677a3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677a6c5c556bebc9df9fc7b7102348a50ce0">InvalidAccessorIndex</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677a4a16a58f578c218e4261e17175fe04af">InvalidBufferViewIndex</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677a69954b9826a5d6232b611f39f0baa4eb">InvalidBufferIndex</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677a0ec3c34928778f558e871ff1a7742725">BufferViewTooSmall</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677ab801c4d44abd4738b7f69c4e390ed61d">BufferTooSmall</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677a5a9a8cf4a677b53ae236057711e2f70f">WrongSizeT</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677ac85f85f7c13ed006eed130ec183aa810">InvalidType</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677affb8f8978944c3bf84a1d423489a5f24">InvalidComponentType</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a96efebd948c6621a9a3c5f064be8f677a1a39931a66efbff62428590f0884ab5a">InvalidByteStride</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FeatureIdTextureViewStatus</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a6fb7a16cb1d774073747aa962b176db6</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6fb7a16cb1d774073747aa962b176db6a3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6fb7a16cb1d774073747aa962b176db6a332c2d6c87690d56196f00ffddf77edd">ErrorUninitialized</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6fb7a16cb1d774073747aa962b176db6abc741c60bfd25d88a0bf04ebc58c9474">ErrorInvalidTexture</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6fb7a16cb1d774073747aa962b176db6a7f2b1504ca007e4fe88f8a0767861ba2">ErrorInvalidImage</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6fb7a16cb1d774073747aa962b176db6a5b981a34886ab67ea45ba42030faa257">ErrorInvalidSampler</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6fb7a16cb1d774073747aa962b176db6a2cfcc6a6f5d50892f3632588fdf49afa">ErrorEmptyImage</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6fb7a16cb1d774073747aa962b176db6a0030ebcf45d01e80b8b94b05e1d52067">ErrorInvalidImageBytesPerChannel</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6fb7a16cb1d774073747aa962b176db6a478f438d39e62de075a59d54ee83cca7">ErrorInvalidChannels</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KhrTextureTransformStatus</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a6d6463a9096aee6d4b4aa4fff6e33e3f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6d6463a9096aee6d4b4aa4fff6e33e3fa3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6d6463a9096aee6d4b4aa4fff6e33e3fa424e106895870d6a2adcfaddc33da809">ErrorInvalidOffset</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a6d6463a9096aee6d4b4aa4fff6e33e3fac49363e81c0195cdfe33df55ce286962">ErrorInvalidScale</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GpuCompressedPixelFormat</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>ac0e393684cdd5415cf710f30118ac3e8</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8aadc1df6bbd1d8759eef00eb3fc7aec4e">ETC1_RGB</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8af6d5108c1d8abb7f0035763e9b7e7f41">ETC2_RGBA</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8a4eea8fa30e0a9cfacad5b0ae86cf5bb6">BC1_RGB</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8a441fd06435aee0f7eda96cf8ce2d7d31">BC3_RGBA</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8a9df603e48ebec191f358e25e44aa5fa5">BC4_R</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8a156c2c69413f0e0e4d7d41bafe378517">BC5_RG</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8ab1f79659845edfac044e403978e30d2f">BC7_RGBA</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8a9c2907018bd4ff8587374ba98d15e33e">PVRTC1_4_RGB</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8abe993bea4ace466a7437e73af006ea63">PVRTC1_4_RGBA</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8a95a9c6447c73e6198517fab109480407">ASTC_4x4_RGBA</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8a9447366b0e271949637202b63340d844">PVRTC2_4_RGB</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8a107f44fe1221ed1ffefbd8ccc88fd128">PVRTC2_4_RGBA</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8afd53a3cf08ea086707953ea910be2c93">ETC2_EAC_R11</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac0e393684cdd5415cf710f30118ac3e8ae983a6a48c563bfcc2677426a1100246">ETC2_EAC_RG11</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyAttributeViewStatus</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a499434eb5a323c9bc0da9f55d2e9da0f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a499434eb5a323c9bc0da9f55d2e9da0fa3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a499434eb5a323c9bc0da9f55d2e9da0fa40e1e19b30bf8971dcf375f4bc73006b">ErrorMissingMetadataExtension</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a499434eb5a323c9bc0da9f55d2e9da0fa522d2b7cf35e5fb19408e5796714f5ea">ErrorMissingSchema</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a499434eb5a323c9bc0da9f55d2e9da0fa3c3d6fcfd58db60cfed6d1cc9e2444f7">ErrorClassNotFound</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyTableViewStatus</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>ac065fe324496ffcc25b906fce691b05f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac065fe324496ffcc25b906fce691b05fa3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac065fe324496ffcc25b906fce691b05fa40e1e19b30bf8971dcf375f4bc73006b">ErrorMissingMetadataExtension</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac065fe324496ffcc25b906fce691b05fa522d2b7cf35e5fb19408e5796714f5ea">ErrorMissingSchema</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ac065fe324496ffcc25b906fce691b05fa3c3d6fcfd58db60cfed6d1cc9e2444f7">ErrorClassNotFound</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyTextureViewStatus</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>af9dd9586b45135c4a744357183c8ab2a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="af9dd9586b45135c4a744357183c8ab2aa3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="af9dd9586b45135c4a744357183c8ab2aa40e1e19b30bf8971dcf375f4bc73006b">ErrorMissingMetadataExtension</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="af9dd9586b45135c4a744357183c8ab2aa522d2b7cf35e5fb19408e5796714f5ea">ErrorMissingSchema</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="af9dd9586b45135c4a744357183c8ab2aa3c3d6fcfd58db60cfed6d1cc9e2444f7">ErrorClassNotFound</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>ab203ff2f50e705295f485de120c68bb3</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3a4bbb8f967da6d1a610596d7257179c2b">Invalid</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3af60357a8d17e45793298323f1b372a74">Scalar</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3afe98032d4f1c52a2f0b617f9205d5f80">Vec2</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3a01b2dc1a2922d9be9e12ef0709600977">Vec3</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3af67402842935c0240e8109e7312def66">Vec4</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3a1507215d4c67a873c29415d20d4e2a04">Mat2</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3a2495a7d9c1fab19af6441abbfed823e1">Mat3</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3a80f7408b0a5b5d78c26adae9f6f420f9">Mat4</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3a27118326006d3829667a400ad23d5d98">String</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3a27226c864bac7454a8504f8edb15d95b">Boolean</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="ab203ff2f50e705295f485de120c68bb3acf20423ed48998082c20099488a0917c">Enum</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropertyComponentType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a00808ebde48d3f56cef3021b4c179e4b</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4ba6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4ba7d839b2c12bfd40ac121b4cc9e81c539">Int8</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4ba3a33b05b1fe0bad48ad87ffbacdddd15">Uint8</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4ba39bc2ae44b184207f560ff8619823208">Int16</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4ba3167337450665ae9b3b34004d33cafe8">Uint16</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4bac06129f6e6e15c09328365e553f1dc31">Int32</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4ba2f3a46e0add3a07937412cbeb8f95727">Uint32</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4bafbde23b11d7e59af7828e81144c8b487">Int64</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4bac970503874fb72afdf908cb54a4c10ee">Uint64</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4ba166495adc0d0f53bee6baecc577f5204">Float32</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a00808ebde48d3f56cef3021b4c179e4bad2b556d8a8f5c8ac323f51a4b82e79a0">Float64</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextureViewStatus</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a65c15cc24665a64e0456b9386bc3797c</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a65c15cc24665a64e0456b9386bc3797ca3ac705f2acd51a4613f9188c05c91d0d">Valid</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a65c15cc24665a64e0456b9386bc3797ca332c2d6c87690d56196f00ffddf77edd">ErrorUninitialized</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a65c15cc24665a64e0456b9386bc3797cabc741c60bfd25d88a0bf04ebc58c9474">ErrorInvalidTexture</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a65c15cc24665a64e0456b9386bc3797ca5b981a34886ab67ea45ba42030faa257">ErrorInvalidSampler</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a65c15cc24665a64e0456b9386bc3797ca7f2b1504ca007e4fe88f8a0767861ba2">ErrorInvalidImage</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a65c15cc24665a64e0456b9386bc3797ca2cfcc6a6f5d50892f3632588fdf49afa">ErrorEmptyImage</enumvalue>
      <enumvalue file="namespaceCesiumGltf.html" anchor="a65c15cc24665a64e0456b9386bc3797caabc6c058673aeac8924b947d3a7e353f">ErrorInvalidBytesPerChannel</enumvalue>
    </member>
    <member kind="function">
      <type>PositionAccessorType</type>
      <name>getPositionAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>afbe0129772f0a8b3c958841fad2acf4a</anchor>
      <arglist>(const Model &amp;model, const MeshPrimitive &amp;primitive)</arglist>
    </member>
    <member kind="function">
      <type>NormalAccessorType</type>
      <name>getNormalAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a8df6fe1e2f0c227dbc1c47052cc0839f</anchor>
      <arglist>(const Model &amp;model, const MeshPrimitive &amp;primitive)</arglist>
    </member>
    <member kind="function">
      <type>FeatureIdAccessorType</type>
      <name>getFeatureIdAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a56be0a3d0c9bfeea830b9182068ffb3b</anchor>
      <arglist>(const Model &amp;model, const MeshPrimitive &amp;primitive, int32_t featureIdAttributeIndex)</arglist>
    </member>
    <member kind="function">
      <type>FeatureIdAccessorType</type>
      <name>getFeatureIdAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a6a6957d2a50ff425a9df26d806883af8</anchor>
      <arglist>(const Model &amp;model, const Node &amp;node, int32_t featureIdAttributeIndex)</arglist>
    </member>
    <member kind="function">
      <type>IndexAccessorType</type>
      <name>getIndexAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a52ff94d035a087430b082ec45a2083a8</anchor>
      <arglist>(const Model &amp;model, const MeshPrimitive &amp;primitive)</arglist>
    </member>
    <member kind="function">
      <type>TexCoordAccessorType</type>
      <name>getTexCoordAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a7b6e6228c62fcc31ffbc862450cc100d</anchor>
      <arglist>(const Model &amp;model, const MeshPrimitive &amp;primitive, int32_t textureCoordinateSetIndex)</arglist>
    </member>
    <member kind="function">
      <type>QuaternionAccessorType</type>
      <name>getQuaternionAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>ae6ec7331585149e466bf8fcf9e84fa2e</anchor>
      <arglist>(const Model &amp;model, const Accessor *accessor)</arglist>
    </member>
    <member kind="function">
      <type>QuaternionAccessorType</type>
      <name>getQuaternionAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a9e5b2c143a8b2feff3d2b2aabcf799d9</anchor>
      <arglist>(const Model &amp;model, int32_t accessorIndex)</arglist>
    </member>
    <member kind="function">
      <type>std::invoke_result_t&lt; TCallback, AccessorView&lt; AccessorTypes::SCALAR&lt; float &gt; &gt; &gt;</type>
      <name>createAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>aff9d11b22abc16f6a9f8fcee56294707</anchor>
      <arglist>(const Model &amp;model, const Accessor &amp;accessor, TCallback &amp;&amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>std::invoke_result_t&lt; TCallback, AccessorView&lt; AccessorTypes::SCALAR&lt; float &gt; &gt; &gt;</type>
      <name>createAccessorView</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a1047e9b5328eeaa7c4ecb59ccf75d42b</anchor>
      <arglist>(const Model &amp;model, int32_t accessorIndex, TCallback &amp;&amp;callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>aecb76854b9e53bb65c55bee29c6d4dc4</anchor>
      <arglist>(const PropertyArrayView&lt; T &gt; &amp;lhs, const PropertyArrayView&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a3e4db64da7dbad163ba7ecc2da4395f8</anchor>
      <arglist>(const PropertyArrayView&lt; T &gt; &amp;lhs, const PropertyArrayCopy&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>acfd36a64125c8a2a3147eb9737bead2f</anchor>
      <arglist>(const PropertyArrayCopy&lt; T &gt; &amp;lhs, const PropertyArrayView&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a8b3c7295cb014c888399edf5224339b4</anchor>
      <arglist>(const PropertyArrayCopy&lt; T &gt; &amp;lhs, const PropertyArrayCopy&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>aedec8f7bdf14da7e658fe6225a00c8e2</anchor>
      <arglist>(const PropertyArrayView&lt; T &gt; &amp;lhs, const PropertyArrayView&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a2258b3d321a4543acd848b97d909d10e</anchor>
      <arglist>(const PropertyArrayView&lt; T &gt; &amp;lhs, const PropertyArrayCopy&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>ac09a4721ab3fd469ededca767ccf0a3d</anchor>
      <arglist>(const PropertyArrayCopy&lt; T &gt; &amp;lhs, const PropertyArrayView&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>af1e2e45747b066750aad6845f71274dc</anchor>
      <arglist>(const PropertyArrayCopy&lt; T &gt; &amp;lhs, const PropertyArrayCopy&lt; T &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getAccessorTypeAsPropertyType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a57a0af1f01a4747b3f18eb96aaca852b</anchor>
      <arglist>(const Accessor &amp;accessor)</arglist>
    </member>
    <member kind="function">
      <type>PropertyComponentType</type>
      <name>getAccessorComponentTypeAsPropertyComponentType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>ac5d7d6bc5eb7a12e3705d307b9300704</anchor>
      <arglist>(const Accessor &amp;accessor)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getOffsetTypeSize</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a8a689fd23893775ff55497a0116656c8</anchor>
      <arglist>(PropertyComponentType offsetType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>assembleScalarValue</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>aa2a2d7f4479db680986f83b494b95440</anchor>
      <arglist>(const std::span&lt; uint8_t &gt; bytes) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>assembleVecNValue</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a44ae546654f5121dfc604cbc7e359ac5</anchor>
      <arglist>(const std::span&lt; uint8_t &gt; bytes) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PropertyArrayCopy&lt; T &gt;</type>
      <name>assembleArrayValue</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>aaf5fa61b1a99fb44908354568d214557</anchor>
      <arglist>(const std::span&lt; uint8_t &gt; bytes) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PropertyValueViewToCopy&lt; ElementType &gt;</type>
      <name>assembleValueFromChannels</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>af2a23846a3a04bfd57ebebf0cd1b8f4a</anchor>
      <arglist>(const std::span&lt; uint8_t &gt; bytes) noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>normalize</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a658d7f821d3a8b09567030104e6f1c55</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>glm::vec&lt; N, double &gt;</type>
      <name>normalize</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a89ada4509156fa08da1fb38b78aeca1c</anchor>
      <arglist>(glm::vec&lt; N, T &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>glm::mat&lt; N, N, double &gt;</type>
      <name>normalize</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a357d279cc4fc56e7e160405e0de54d2e</anchor>
      <arglist>(glm::mat&lt; N, N, T &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>applyScale</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a13b4fce3d63029b9cbcab510f8014e35</anchor>
      <arglist>(const T &amp;value, const T &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>transformValue</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a54c8daa4a2a86c81873afd19b32037ec</anchor>
      <arglist>(const T &amp;value, const std::optional&lt; T &gt; &amp;offset, const std::optional&lt; T &gt; &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>PropertyArrayCopy&lt; T &gt;</type>
      <name>transformArray</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a8d4075c75c937b7ced12857100c0124d</anchor>
      <arglist>(const PropertyArrayView&lt; T &gt; &amp;value, const std::optional&lt; PropertyArrayView&lt; T &gt; &gt; &amp;offset, const std::optional&lt; PropertyArrayView&lt; T &gt; &gt; &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>PropertyArrayCopy&lt; NormalizedType &gt;</type>
      <name>transformNormalizedArray</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a4a7fa5bd37e1072659337894a94f387b</anchor>
      <arglist>(const PropertyArrayView&lt; T &gt; &amp;value, const std::optional&lt; PropertyArrayView&lt; NormalizedType &gt; &gt; &amp;offset, const std::optional&lt; PropertyArrayView&lt; NormalizedType &gt; &gt; &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>PropertyArrayCopy&lt; glm::vec&lt; N, double &gt; &gt;</type>
      <name>transformNormalizedVecNArray</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a342fd3972ff45e5be19fc3358ff8ff78</anchor>
      <arglist>(const PropertyArrayView&lt; glm::vec&lt; N, T &gt; &gt; &amp;value, const std::optional&lt; PropertyArrayView&lt; glm::vec&lt; N, double &gt; &gt; &gt; &amp;offset, const std::optional&lt; PropertyArrayView&lt; glm::vec&lt; N, double &gt; &gt; &gt; &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>PropertyArrayCopy&lt; glm::mat&lt; N, N, double &gt; &gt;</type>
      <name>transformNormalizedMatNArray</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a20df83b36f2dfc09e70aadd01331000b</anchor>
      <arglist>(const PropertyArrayView&lt; glm::mat&lt; N, N, T &gt; &gt; &amp;value, const std::optional&lt; PropertyArrayView&lt; glm::mat&lt; N, N, double &gt; &gt; &gt; &amp;offset, const std::optional&lt; PropertyArrayView&lt; glm::mat&lt; N, N, double &gt; &gt; &gt; &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convertPropertyTypeToString</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a6ff02323644057282ca87e5bd6e23b09</anchor>
      <arglist>(PropertyType type)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>convertStringToPropertyType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>aadbfded2b34e08fa09942279b39c23a5</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convertPropertyComponentTypeToString</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a791ef92691e870f94ad4adfc0fa29a1a</anchor>
      <arglist>(PropertyComponentType componentType)</arglist>
    </member>
    <member kind="function">
      <type>PropertyComponentType</type>
      <name>convertStringToPropertyComponentType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a2d62d96c0efd619705c17891033a79fa</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>PropertyComponentType</type>
      <name>convertArrayOffsetTypeStringToPropertyComponentType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a11ae0dceba9a480d027ff4c36a597a18</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>PropertyComponentType</type>
      <name>convertStringOffsetTypeStringToPropertyComponentType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>afaed14b0453eeb63de612925a9e85d31</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>PropertyComponentType</type>
      <name>convertAccessorComponentTypeToPropertyComponentType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>ab5956882cc4c8ddd9311a30293c2d20f</anchor>
      <arglist>(int componentType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPropertyTypeVecN</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a1394ce7a775265113da9aca6252f4153</anchor>
      <arglist>(PropertyType type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPropertyTypeMatN</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a4b75ce98c3978caa79605297690dfe1d</anchor>
      <arglist>(PropertyType type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPropertyComponentTypeInteger</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a245e07b9c059557ecae4de3e7f557178</anchor>
      <arglist>(PropertyComponentType componentType)</arglist>
    </member>
    <member kind="function">
      <type>glm::length_t</type>
      <name>getDimensionsFromPropertyType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>abba5aca9925dfbac52fb44c78ec5f2c9</anchor>
      <arglist>(PropertyType type)</arglist>
    </member>
    <member kind="function">
      <type>glm::length_t</type>
      <name>getComponentCountFromPropertyType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>aed8eebdc01b21d6b8d7886b965a1c220</anchor>
      <arglist>(PropertyType type)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSizeOfComponentType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a0552d7e6bb1c8d0ec67316b302a8ce37</anchor>
      <arglist>(PropertyComponentType componentType)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>validatePropertyType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a9feed8666c9b942c7c7a4a305be3aca1</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>PropertyViewStatusType</type>
      <name>validateArrayPropertyType</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>afb00bcc12a008c71f75a776cb3d887bb</anchor>
      <arglist>(const ClassProperty &amp;classProperty)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getCount</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a9ea472029b4705631cbc0fe673b2cf4e</anchor>
      <arglist>(std::optional&lt; std::vector&lt; std::byte &gt; &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>applySamplerWrapS</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a00f07cf767c4685dc1e1c14f7ce01f07</anchor>
      <arglist>(const double u, const int32_t wrapS)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>applySamplerWrapT</name>
      <anchorfile>namespaceCesiumGltf.html</anchorfile>
      <anchor>a4d6e8d5a415476bd88e420cee4eb4cb8</anchor>
      <arglist>(const double v, const int32_t wrapT)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CesiumGltfContent</name>
    <filename>namespaceCesiumGltfContent.html</filename>
    <class kind="struct">CesiumGltfContent::GltfUtilities</class>
    <class kind="class">CesiumGltfContent::ImageManipulation</class>
    <class kind="struct">CesiumGltfContent::PixelRectangle</class>
    <class kind="struct">CesiumGltfContent::SkirtMeshMetadata</class>
  </compound>
  <compound kind="namespace">
    <name>CesiumGltfReader</name>
    <filename>namespaceCesiumGltfReader.html</filename>
    <class kind="class">CesiumGltfReader::AccessorReader</class>
    <class kind="class">CesiumGltfReader::AccessorSparseIndicesReader</class>
    <class kind="class">CesiumGltfReader::AccessorSparseReader</class>
    <class kind="class">CesiumGltfReader::AccessorSparseValuesReader</class>
    <class kind="class">CesiumGltfReader::AnimationChannelReader</class>
    <class kind="class">CesiumGltfReader::AnimationChannelTargetReader</class>
    <class kind="class">CesiumGltfReader::AnimationReader</class>
    <class kind="class">CesiumGltfReader::AnimationSamplerReader</class>
    <class kind="class">CesiumGltfReader::AssetReader</class>
    <class kind="class">CesiumGltfReader::BufferReader</class>
    <class kind="class">CesiumGltfReader::BufferViewReader</class>
    <class kind="class">CesiumGltfReader::CameraOrthographicReader</class>
    <class kind="class">CesiumGltfReader::CameraPerspectiveReader</class>
    <class kind="class">CesiumGltfReader::CameraReader</class>
    <class kind="class">CesiumGltfReader::ClassPropertyReader</class>
    <class kind="class">CesiumGltfReader::ClassReader</class>
    <class kind="class">CesiumGltfReader::EnumReader</class>
    <class kind="class">CesiumGltfReader::EnumValueReader</class>
    <class kind="class">CesiumGltfReader::ExtensionBufferExtMeshoptCompressionReader</class>
    <class kind="class">CesiumGltfReader::ExtensionBufferViewExtMeshoptCompressionReader</class>
    <class kind="class">CesiumGltfReader::ExtensionCesiumPrimitiveOutlineReader</class>
    <class kind="class">CesiumGltfReader::ExtensionCesiumRTCReader</class>
    <class kind="class">CesiumGltfReader::ExtensionCesiumTileEdgesReader</class>
    <class kind="class">CesiumGltfReader::ExtensionExtInstanceFeaturesFeatureIdReader</class>
    <class kind="class">CesiumGltfReader::ExtensionExtInstanceFeaturesReader</class>
    <class kind="class">CesiumGltfReader::ExtensionExtMeshFeaturesReader</class>
    <class kind="class">CesiumGltfReader::ExtensionExtMeshGpuInstancingReader</class>
    <class kind="class">CesiumGltfReader::ExtensionExtStructuralMetadataReader</class>
    <class kind="class">CesiumGltfReader::ExtensionKhrDracoMeshCompressionReader</class>
    <class kind="class">CesiumGltfReader::ExtensionKhrMaterialsUnlitReader</class>
    <class kind="class">CesiumGltfReader::ExtensionKhrTextureBasisuReader</class>
    <class kind="class">CesiumGltfReader::ExtensionKhrTextureTransformReader</class>
    <class kind="class">CesiumGltfReader::ExtensionMeshPrimitiveExtStructuralMetadataReader</class>
    <class kind="class">CesiumGltfReader::ExtensionMeshPrimitiveKhrMaterialsVariantsMappingsValueReader</class>
    <class kind="class">CesiumGltfReader::ExtensionMeshPrimitiveKhrMaterialsVariantsReader</class>
    <class kind="class">CesiumGltfReader::ExtensionModelExtStructuralMetadataReader</class>
    <class kind="class">CesiumGltfReader::ExtensionModelKhrMaterialsVariantsReader</class>
    <class kind="class">CesiumGltfReader::ExtensionModelKhrMaterialsVariantsValueReader</class>
    <class kind="class">CesiumGltfReader::ExtensionModelMaxarMeshVariantsReader</class>
    <class kind="class">CesiumGltfReader::ExtensionModelMaxarMeshVariantsValueReader</class>
    <class kind="class">CesiumGltfReader::ExtensionNodeMaxarMeshVariantsMappingsValueReader</class>
    <class kind="class">CesiumGltfReader::ExtensionNodeMaxarMeshVariantsReader</class>
    <class kind="class">CesiumGltfReader::ExtensionTextureWebpReader</class>
    <class kind="class">CesiumGltfReader::FeatureIdReader</class>
    <class kind="class">CesiumGltfReader::FeatureIdTextureReader</class>
    <class kind="class">CesiumGltfReader::GltfReader</class>
    <class kind="struct">CesiumGltfReader::GltfReaderOptions</class>
    <class kind="struct">CesiumGltfReader::GltfReaderResult</class>
    <class kind="class">CesiumGltfReader::GltfSharedAssetSystem</class>
    <class kind="class">CesiumGltfReader::ImageDecoder</class>
    <class kind="class">CesiumGltfReader::ImageReader</class>
    <class kind="struct">CesiumGltfReader::ImageReaderResult</class>
    <class kind="class">CesiumGltfReader::MaterialNormalTextureInfoReader</class>
    <class kind="class">CesiumGltfReader::MaterialOcclusionTextureInfoReader</class>
    <class kind="class">CesiumGltfReader::MaterialPBRMetallicRoughnessReader</class>
    <class kind="class">CesiumGltfReader::MaterialReader</class>
    <class kind="class">CesiumGltfReader::MeshPrimitiveReader</class>
    <class kind="class">CesiumGltfReader::MeshReader</class>
    <class kind="class">CesiumGltfReader::ModelReader</class>
    <class kind="struct">CesiumGltfReader::NetworkImageAssetDescriptor</class>
    <class kind="struct">CesiumGltfReader::NetworkSchemaAssetDescriptor</class>
    <class kind="class">CesiumGltfReader::NodeReader</class>
    <class kind="class">CesiumGltfReader::PropertyAttributePropertyReader</class>
    <class kind="class">CesiumGltfReader::PropertyAttributeReader</class>
    <class kind="class">CesiumGltfReader::PropertyTablePropertyReader</class>
    <class kind="class">CesiumGltfReader::PropertyTableReader</class>
    <class kind="class">CesiumGltfReader::PropertyTexturePropertyReader</class>
    <class kind="class">CesiumGltfReader::PropertyTextureReader</class>
    <class kind="class">CesiumGltfReader::SamplerReader</class>
    <class kind="class">CesiumGltfReader::SceneReader</class>
    <class kind="class">CesiumGltfReader::SchemaReader</class>
    <class kind="class">CesiumGltfReader::SkinReader</class>
    <class kind="class">CesiumGltfReader::TextureInfoReader</class>
    <class kind="class">CesiumGltfReader::TextureReader</class>
  </compound>
  <compound kind="namespace">
    <name>CesiumGltfWriter</name>
    <filename>namespaceCesiumGltfWriter.html</filename>
    <class kind="class">CesiumGltfWriter::GltfWriter</class>
    <class kind="struct">CesiumGltfWriter::GltfWriterOptions</class>
    <class kind="struct">CesiumGltfWriter::GltfWriterResult</class>
    <class kind="class">CesiumGltfWriter::SchemaWriter</class>
    <class kind="struct">CesiumGltfWriter::SchemaWriterOptions</class>
    <class kind="struct">CesiumGltfWriter::SchemaWriterResult</class>
  </compound>
  <compound kind="namespace">
    <name>CesiumIonClient</name>
    <filename>namespaceCesiumIonClient.html</filename>
    <class kind="struct">CesiumIonClient::ApplicationData</class>
    <class kind="struct">CesiumIonClient::Asset</class>
    <class kind="struct">CesiumIonClient::Assets</class>
    <class kind="class">CesiumIonClient::Connection</class>
    <class kind="struct">CesiumIonClient::DefaultAssets</class>
    <class kind="struct">CesiumIonClient::Defaults</class>
    <class kind="struct">CesiumIonClient::ListTokensOptions</class>
    <class kind="struct">CesiumIonClient::NoValue</class>
    <class kind="struct">CesiumIonClient::Profile</class>
    <class kind="struct">CesiumIonClient::ProfileStorage</class>
    <class kind="struct">CesiumIonClient::QuickAddAsset</class>
    <class kind="struct">CesiumIonClient::QuickAddRasterOverlay</class>
    <class kind="struct">CesiumIonClient::Response</class>
    <class kind="struct">CesiumIonClient::Token</class>
    <class kind="struct">CesiumIonClient::TokenList</class>
    <member kind="enumeration">
      <type></type>
      <name>AuthenticationMode</name>
      <anchorfile>namespaceCesiumIonClient.html</anchorfile>
      <anchor>a3d9fcdfbaa8937bc518e2c8d6c01f0db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CesiumIon</name>
      <anchorfile>namespaceCesiumIonClient.html</anchorfile>
      <anchor>a3d9fcdfbaa8937bc518e2c8d6c01f0dba8c534a5c58a747947972c1b51739fd2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Saml</name>
      <anchorfile>namespaceCesiumIonClient.html</anchorfile>
      <anchor>a3d9fcdfbaa8937bc518e2c8d6c01f0dba8a7e39da9f9e7ad57e92340b968e6a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SingleUser</name>
      <anchorfile>namespaceCesiumIonClient.html</anchorfile>
      <anchor>a3d9fcdfbaa8937bc518e2c8d6c01f0dba4b8c9e1c3b0de6ac6361af3ad46dca8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortOrder</name>
      <anchorfile>namespaceCesiumIonClient.html</anchorfile>
      <anchor>aa1af67bed81a4773884a59d292d4a72f</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumIonClient.html" anchor="aa1af67bed81a4773884a59d292d4a72facf3fb1ff52ea1eed3347ac5401ee7f0c">Ascending</enumvalue>
      <enumvalue file="namespaceCesiumIonClient.html" anchor="aa1af67bed81a4773884a59d292d4a72fae3cf5ac19407b1a62c6fccaff675a53b">Descending</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CesiumJsonReader</name>
    <filename>namespaceCesiumJsonReader.html</filename>
    <class kind="class">CesiumJsonReader::ArrayJsonHandler</class>
    <class kind="class">CesiumJsonReader::ArrayJsonHandler&lt; double, DoubleJsonHandler &gt;</class>
    <class kind="class">CesiumJsonReader::ArrayJsonHandler&lt; std::string, StringJsonHandler &gt;</class>
    <class kind="class">CesiumJsonReader::ArrayJsonHandler&lt; std::vector&lt; T &gt;, ArrayJsonHandler&lt; T, THandler &gt; &gt;</class>
    <class kind="class">CesiumJsonReader::ArrayJsonHandler&lt; T, IntegerJsonHandler&lt; T &gt; &gt;</class>
    <class kind="class">CesiumJsonReader::BoolJsonHandler</class>
    <class kind="class">CesiumJsonReader::DictionaryJsonHandler</class>
    <class kind="class">CesiumJsonReader::DoubleJsonHandler</class>
    <class kind="class">CesiumJsonReader::ExtensibleObjectJsonHandler</class>
    <class kind="class">CesiumJsonReader::ExtensionsJsonHandler</class>
    <class kind="class">CesiumJsonReader::IExtensionJsonHandler</class>
    <class kind="class">CesiumJsonReader::IgnoreValueJsonHandler</class>
    <class kind="class">CesiumJsonReader::IJsonHandler</class>
    <class kind="class">CesiumJsonReader::IntegerJsonHandler</class>
    <class kind="class">CesiumJsonReader::JsonHandler</class>
    <class kind="class">CesiumJsonReader::JsonObjectJsonHandler</class>
    <class kind="class">CesiumJsonReader::JsonReader</class>
    <class kind="class">CesiumJsonReader::JsonReaderOptions</class>
    <class kind="class">CesiumJsonReader::ObjectJsonHandler</class>
    <class kind="struct">CesiumJsonReader::ReadJsonResult</class>
    <class kind="class">CesiumJsonReader::SharedAssetJsonHandler</class>
    <class kind="class">CesiumJsonReader::StringJsonHandler</class>
    <member kind="enumeration">
      <type></type>
      <name>ExtensionState</name>
      <anchorfile>namespaceCesiumJsonReader.html</anchorfile>
      <anchor>aa9f89c936c174140c5a4cbda5b7a6c78</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumJsonReader.html" anchor="aa9f89c936c174140c5a4cbda5b7a6c78a00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</enumvalue>
      <enumvalue file="namespaceCesiumJsonReader.html" anchor="aa9f89c936c174140c5a4cbda5b7a6c78ac7c7cd56c57cb7149dbac3ca8b772623">JsonOnly</enumvalue>
      <enumvalue file="namespaceCesiumJsonReader.html" anchor="aa9f89c936c174140c5a4cbda5b7a6c78ab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CesiumJsonWriter</name>
    <filename>namespaceCesiumJsonWriter.html</filename>
    <class kind="class">CesiumJsonWriter::ExtensionWriterContext</class>
    <class kind="class">CesiumJsonWriter::JsonWriter</class>
    <class kind="class">CesiumJsonWriter::PrettyJsonWriter</class>
    <member kind="enumeration">
      <type></type>
      <name>ExtensionState</name>
      <anchorfile>namespaceCesiumJsonWriter.html</anchorfile>
      <anchor>ac37c5bf19403f16b1fdeffae84ad8e8a</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumJsonWriter.html" anchor="ac37c5bf19403f16b1fdeffae84ad8e8aa00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</enumvalue>
      <enumvalue file="namespaceCesiumJsonWriter.html" anchor="ac37c5bf19403f16b1fdeffae84ad8e8aab9f5c797ebbf55adccdd8539a65a0241">Disabled</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeJsonValue</name>
      <anchorfile>namespaceCesiumJsonWriter.html</anchorfile>
      <anchor>a38b87718c2f241d26feea634eccd44b2</anchor>
      <arglist>(const CesiumUtility::JsonValue &amp;value, JsonWriter &amp;writer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeJsonExtensions</name>
      <anchorfile>namespaceCesiumJsonWriter.html</anchorfile>
      <anchor>acfc883fb9f3e9d758455cf909c4031dc</anchor>
      <arglist>(const TExtended &amp;obj, JsonWriter &amp;jsonWriter, const ExtensionWriterContext &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasRegisteredExtensions</name>
      <anchorfile>namespaceCesiumJsonWriter.html</anchorfile>
      <anchor>a29ae5ef4ae95f1fc9ee53aee6d32bd68</anchor>
      <arglist>(const TExtended &amp;obj, JsonWriter &amp;jsonWriter, const ExtensionWriterContext &amp;context)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CesiumQuantizedMeshTerrain</name>
    <filename>namespaceCesiumQuantizedMeshTerrain.html</filename>
    <class kind="struct">CesiumQuantizedMeshTerrain::AvailabilityRectangle</class>
    <class kind="class">CesiumQuantizedMeshTerrain::AvailabilityRectangleReader</class>
    <class kind="struct">CesiumQuantizedMeshTerrain::Layer</class>
    <class kind="class">CesiumQuantizedMeshTerrain::LayerReader</class>
    <class kind="struct">CesiumQuantizedMeshTerrain::LayerSpec</class>
    <class kind="class">CesiumQuantizedMeshTerrain::LayerWriter</class>
    <class kind="struct">CesiumQuantizedMeshTerrain::LayerWriterOptions</class>
    <class kind="struct">CesiumQuantizedMeshTerrain::LayerWriterResult</class>
    <class kind="class">CesiumQuantizedMeshTerrain::QuantizedMeshLoader</class>
    <class kind="struct">CesiumQuantizedMeshTerrain::QuantizedMeshLoadResult</class>
    <class kind="struct">CesiumQuantizedMeshTerrain::QuantizedMeshMetadataResult</class>
  </compound>
  <compound kind="namespace">
    <name>CesiumRasterOverlays</name>
    <filename>namespaceCesiumRasterOverlays.html</filename>
    <class kind="class">CesiumRasterOverlays::BingMapsRasterOverlay</class>
    <class kind="struct">CesiumRasterOverlays::BingMapsStyle</class>
    <class kind="class">CesiumRasterOverlays::DebugColorizeTilesRasterOverlay</class>
    <class kind="class">CesiumRasterOverlays::IonRasterOverlay</class>
    <class kind="class">CesiumRasterOverlays::IPrepareRasterOverlayRendererResources</class>
    <class kind="struct">CesiumRasterOverlays::LoadedRasterOverlayImage</class>
    <class kind="struct">CesiumRasterOverlays::LoadTileImageFromUrlOptions</class>
    <class kind="class">CesiumRasterOverlays::QuadtreeRasterOverlayTileProvider</class>
    <class kind="class">CesiumRasterOverlays::RasterizedPolygonsOverlay</class>
    <class kind="class">CesiumRasterOverlays::RasterOverlay</class>
    <class kind="struct">CesiumRasterOverlays::RasterOverlayDetails</class>
    <class kind="class">CesiumRasterOverlays::RasterOverlayLoadFailureDetails</class>
    <class kind="struct">CesiumRasterOverlays::RasterOverlayOptions</class>
    <class kind="class">CesiumRasterOverlays::RasterOverlayTile</class>
    <class kind="class">CesiumRasterOverlays::RasterOverlayTileProvider</class>
    <class kind="struct">CesiumRasterOverlays::RasterOverlayUtilities</class>
    <class kind="class">CesiumRasterOverlays::TileMapServiceRasterOverlay</class>
    <class kind="struct">CesiumRasterOverlays::TileMapServiceRasterOverlayOptions</class>
    <class kind="struct">CesiumRasterOverlays::TileProviderAndTile</class>
    <class kind="class">CesiumRasterOverlays::WebMapServiceRasterOverlay</class>
    <class kind="struct">CesiumRasterOverlays::WebMapServiceRasterOverlayOptions</class>
    <class kind="class">CesiumRasterOverlays::WebMapTileServiceRasterOverlay</class>
    <class kind="struct">CesiumRasterOverlays::WebMapTileServiceRasterOverlayOptions</class>
    <member kind="enumeration">
      <type></type>
      <name>RasterOverlayLoadType</name>
      <anchorfile>namespaceCesiumRasterOverlays.html</anchorfile>
      <anchor>ac35b5620aa485d124da4ff830e51b50e</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCesiumRasterOverlays.html" anchor="ac35b5620aa485d124da4ff830e51b50ea88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="namespaceCesiumRasterOverlays.html" anchor="ac35b5620aa485d124da4ff830e51b50ea5e650355f6ea3f20a1b172b4f0cfe0c7">CesiumIon</enumvalue>
      <enumvalue file="namespaceCesiumRasterOverlays.html" anchor="ac35b5620aa485d124da4ff830e51b50ea5a1d77d10f60375f7c7ecf0cb0fd056e">TileProvider</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CesiumUtility</name>
    <filename>namespaceCesiumUtility.html</filename>
    <class kind="class">CesiumUtility::AttributeCompression</class>
    <class kind="struct">CesiumUtility::Credit</class>
    <class kind="class">CesiumUtility::CreditSystem</class>
    <class kind="class">CesiumUtility::DoublyLinkedListAdvanced</class>
    <class kind="class">CesiumUtility::DoublyLinkedListPointers</class>
    <class kind="struct">CesiumUtility::ErrorList</class>
    <class kind="struct">CesiumUtility::ExtensibleObject</class>
    <class kind="struct">CesiumUtility::Hash</class>
    <class kind="class">CesiumUtility::IDepotOwningAsset</class>
    <class kind="class">CesiumUtility::IntrusivePointer</class>
    <class kind="class">CesiumUtility::JsonHelpers</class>
    <class kind="class">CesiumUtility::JsonValue</class>
    <class kind="class">CesiumUtility::Math</class>
    <class kind="class">CesiumUtility::ReferenceCounted</class>
    <class kind="struct">CesiumUtility::Result</class>
    <class kind="struct">CesiumUtility::Result&lt; CesiumUtility::IntrusivePointer&lt; T &gt; &gt;</class>
    <class kind="class">CesiumUtility::ScopeGuard</class>
    <class kind="class">CesiumUtility::SharedAsset</class>
    <class kind="class">CesiumUtility::StringHelpers</class>
    <class kind="class">CesiumUtility::Uri</class>
    <member kind="typedef">
      <type>DoublyLinkedListAdvanced&lt; T, T, Pointers &gt;</type>
      <name>DoublyLinkedList</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>ada2b86d4af311ed5bf8bfe9f65a7761e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCounted&lt; T, true &gt;</type>
      <name>ReferenceCountedThreadSafe</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>adfa89e14984305be7ca3addc12d9a0a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ReferenceCounted&lt; T, false &gt;</type>
      <name>ReferenceCountedNonThreadSafe</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>ad0909c56f35a4efad530da3ba2983dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Result&lt; IntrusivePointer&lt; T &gt; &gt;</type>
      <name>ResultPointer</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>ab0cbfe742a878c7a23ade69aa67de8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGzip</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>a872f5d8de8d397bf98b9ba9dca248815</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gzip</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>a3391ccfa99bd624214ba210e24fce748</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data, std::vector&lt; std::byte &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>gunzip</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>a5e1206b043a9e91699ee6b4844f034fd</anchor>
      <arglist>(const std::span&lt; const std::byte &gt; &amp;data, std::vector&lt; std::byte &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>IntrusivePointer&lt; T &gt;</type>
      <name>const_intrusive_cast</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>a0c54805d441cc146176b990deea6aae6</anchor>
      <arglist>(const IntrusivePointer&lt; U &gt; &amp;p) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>joinToString</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>ada6ba84f34990f7d1a176b75e20415bb</anchor>
      <arglist>(TIterator begin, TIterator end, const std::string &amp;separator)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>joinToString</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>aa61a2a444d5c46999356e190f50e7e34</anchor>
      <arglist>(TCollection collection, const std::string &amp;separator)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::optional&lt; T &gt;</type>
      <name>losslessNarrow</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>a84f68c86674d511f2d6679776900acbb</anchor>
      <arglist>(U u) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>losslessNarrowOrDefault</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>a12a6c1e96ffba2bf45b0c27597ef8022</anchor>
      <arglist>(U u, T defaultValue) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopeGuard</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>a4994166cb2d24ec688f2880ac508d38f</anchor>
      <arglist>(ExitFunction) -&gt; ScopeGuard&lt; ExitFunction &gt;</arglist>
    </member>
    <member kind="function">
      <type>std::span&lt; To &gt;</type>
      <name>reintepretCastSpan</name>
      <anchorfile>namespaceCesiumUtility.html</anchorfile>
      <anchor>a1a157ee7deb68decd911ade01b8a75dc</anchor>
      <arglist>(const std::span&lt; From &gt; &amp;from) noexcept</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
    <class kind="struct">std::hash&lt; CesiumAsync::NetworkAssetDescriptor &gt;</class>
    <class kind="struct">std::hash&lt; CesiumGeometry::QuadtreeTileID &gt;</class>
    <class kind="struct">std::hash&lt; CesiumGltfReader::NetworkImageAssetDescriptor &gt;</class>
    <class kind="struct">std::hash&lt; CesiumGltfReader::NetworkSchemaAssetDescriptor &gt;</class>
  </compound>
  <compound kind="page">
    <name>contributing</name>
    <title>Contribution Guide</title>
    <filename>contributing.html</filename>
    <docanchor file="contributing.html" title="/home/runner/work/cesium-native/cesium-native/CONTRIBUTING.md">md__2home_2runner_2work_2cesium-native_2cesium-native_2CONTRIBUTING</docanchor>
  </compound>
  <compound kind="page">
    <name>md__2home_2runner_2work_2cesium-native_2cesium-native_2CHANGES</name>
    <title>Change Log</title>
    <filename>md__2home_2runner_2work_2cesium-native_2cesium-native_2CHANGES.html</filename>
  </compound>
  <compound kind="page">
    <name>async-system</name>
    <title>AsyncSystem</title>
    <filename>async-system.html</filename>
    <docanchor file="async-system.html" title="topics/async-system.md">md_topics_2async-system</docanchor>
    <docanchor file="async-system.html" title="The AsyncSystem Class">asyncsystem-class</docanchor>
    <docanchor file="async-system.html" title="Future&lt;T&gt;">future</docanchor>
    <docanchor file="async-system.html" title="Continuation Functions">continuation-functions</docanchor>
    <docanchor file="async-system.html" title="Catch">catch</docanchor>
    <docanchor file="async-system.html" title="Future Unwrapping">future-unwrapping</docanchor>
    <docanchor file="async-system.html" title="thenPassThrough">then-pass-through</docanchor>
    <docanchor file="async-system.html" title="Combining Futures">combining-futures</docanchor>
    <docanchor file="async-system.html" title="Creating Futures">creating-futures</docanchor>
    <docanchor file="async-system.html" title="Promise&lt;T&gt;">promise</docanchor>
    <docanchor file="async-system.html" title="SharedFuture&lt;T&gt;">shared-future</docanchor>
    <docanchor file="async-system.html" title="Lambda Captures and Thread Safety">lambda-captures-and-thread-safety</docanchor>
    <docanchor file="async-system.html" title="AsyncSystem and ITaskProcessor Implementation">async-system-implementation</docanchor>
    <docanchor file="async-system.html" title="Creating an AsyncSystem">creating-an-asyncsystem</docanchor>
  </compound>
  <compound kind="page">
    <name>md_topics_2dependencies</name>
    <title>Dependencies</title>
    <filename>md_topics_2dependencies.html</filename>
  </compound>
  <compound kind="page">
    <name>developer-setup</name>
    <title>Developer Setup Guide</title>
    <filename>developer-setup.html</filename>
    <docanchor file="developer-setup.html" title="topics/developer-setup.md">md_topics_2developer-setup</docanchor>
  </compound>
  <compound kind="page">
    <name>developer-resources</name>
    <title>Developer Resources</title>
    <filename>developer-resources.html</filename>
    <subpage>developer-setup.html</subpage>
    <subpage>multithreading.html</subpage>
    <subpage>style-guide.html</subpage>
    <subpage>contributing.html</subpage>
    <docanchor file="developer-resources.html" title="topics/developer.md">md_topics_2developer</docanchor>
  </compound>
  <compound kind="page">
    <name>glossary</name>
    <title>Glossary</title>
    <filename>glossary.html</filename>
    <docanchor file="glossary.html" title="topics/glossary.md">md_topics_2glossary</docanchor>
    <docanchor file="glossary.html" title="Earth-Centered, Earth-Fixed Coordinates (ECEF)">glossary-ecef</docanchor>
  </compound>
  <compound kind="page">
    <name>multithreading</name>
    <title>Multithreading</title>
    <filename>multithreading.html</filename>
    <subpage>thread-safety-rules.html</subpage>
    <subpage>async-system.html</subpage>
    <docanchor file="multithreading.html" title="topics/multithreading.md">md_topics_2multithreading</docanchor>
  </compound>
  <compound kind="page">
    <name>rendering-3d-tiles</name>
    <title>Rendering 3D Tiles</title>
    <filename>rendering-3d-tiles.html</filename>
    <docanchor file="rendering-3d-tiles.html" title="topics/rendering-3d-tiles.md">md_topics_2rendering-3d-tiles</docanchor>
    <docanchor file="rendering-3d-tiles.html" title="Sequence Walkthrough">sequence-walkthrough</docanchor>
    <docanchor file="rendering-3d-tiles.html" title="Implementing 3D Tiles Rendering">implement-3d-tiles-rendering</docanchor>
  </compound>
  <compound kind="page">
    <name>selection-algorithm-details</name>
    <title>3D Tiles Selection Algorithm</title>
    <filename>selection-algorithm-details.html</filename>
    <docanchor file="selection-algorithm-details.html" title="topics/selection-algorithm-details.md">md_topics_2selection-algorithm-details</docanchor>
    <docanchor file="selection-algorithm-details.html" title="High-Level Overview">high-level-overview</docanchor>
    <docanchor file="selection-algorithm-details.html" title="Culling">culling</docanchor>
    <docanchor file="selection-algorithm-details.html" title="Screen-Space Error">screen-space-error</docanchor>
    <docanchor file="selection-algorithm-details.html" title="Selecting Loaded Tiles">selecting-loaded-tiles</docanchor>
    <docanchor file="selection-algorithm-details.html" title="Ancestor Meets SSE">ancestor-meets-sse</docanchor>
    <docanchor file="selection-algorithm-details.html" title="Kicking">kicking</docanchor>
    <docanchor file="selection-algorithm-details.html" title="Loading Descendant Limit">loading-descendant-limit</docanchor>
    <docanchor file="selection-algorithm-details.html" title="Additional Topics Not Yet Covered">additional-topics</docanchor>
    <docanchor file="selection-algorithm-details.html">forbid-holes</docanchor>
  </compound>
  <compound kind="page">
    <name>style-guide</name>
    <title>C++ Style Guide</title>
    <filename>style-guide.html</filename>
    <docanchor file="style-guide.html" title="topics/style-guide.md">md_topics_2style-guide</docanchor>
  </compound>
  <compound kind="page">
    <name>thread-safety-rules</name>
    <title>Thread Safety Rules</title>
    <filename>thread-safety-rules.html</filename>
    <docanchor file="thread-safety-rules.html" title="topics/thread-safety-rules.md">md_topics_2thread-safety-rules</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Cesium Native</title>
    <filename>index.html</filename>
    <docanchor file="index.html" title="Cesium Native">md__2home_2runner_2work_2cesium-native_2cesium-native_2README</docanchor>
  </compound>
</tagfile>
